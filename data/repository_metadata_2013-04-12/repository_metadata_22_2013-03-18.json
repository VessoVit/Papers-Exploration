{"identifier":71965,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A separation logic framework for HOL","bibo:abstract":"Separation logic is an extension of Hoare logic due to O’Hearn\n        and Reynolds. It was designed for reasoning about mutable data\n        structures. Because separation logic supports local reasoning,\n        it scales better than classical Hoare logic and can easily be\n        used to reason about concurrency. There are automated separation\n        logic tools as well as several formalisations in interactive\n        theorem provers. Typically, the automated separation logic tools\n        are able to reason about shallow properties of large programs.\n        They usually consider just the shape of data structures, not\n        their data-content. The formalisations inside theorem provers\n        can be used to prove interesting, deep properties. However, they\n        typically lack automation. Another shortcoming is that there are\n        a lot of slightly different separation logics. For each\n        programming language and each interesting property a new kind of\n        separation logic seems to be invented.\n        \n        In this thesis, a general framework for separation logic is\n        developed inside the HOL4 theorem prover. This framework is\n        based on Abstract Separation Logic, an abstract, high level\n        variant of separation logic. Abstract Separation Logic is a\n        general separation logic such that many other separation logics\n        can be based on it. This framework is instantiatiated in a first\n        step to support a stack with read and write permissions\n        following ideas of Parkinson, Bornat and Calcagno. Finally, the\n        framework is further instantiated to build a separation logic\n        tool called Holfoot. It is similar to the tool Smallfoot, but\n        extends it from reasoning about shape properties to fully\n        functional specifications.\n        \n        To my knowledge this work presents the first formalisation of\n        Abstract Separation Logic inside a theorem prover. By building\n        Holfoot on top of this formalisation, I could demonstrate that\n        Abstract Separation Logic can be used as a basis for realistic\n        separation logic tools. Moreover, this work demonstrates that it\n        is feasable to implement such separation logic tools inside a\n        theorem prover. Holfoot is highly automated. It can verify\n        Smallfoot examples automatically inside HOL4. Moreover, Holfoot\n        can use the full power of HOL4. This allows Holfoot to verify\n        fully functional specifications. Simple fully functional\n        specifications can be handled automatically using HOL4’s tools\n        and libraries or external SMT solvers. More complicated ones can\n        be handled using interactive proofs inside HOL4. In contrast,\n        most other separation logic tools can reason just about the\n        shape of data structures. Others reason only about data\n        properties that can be solved using SMT solvers.","bibo:AuthorList":["Tuerk, Thomas"],"dc:date":"2011-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":12215,"sim:weight":0.347249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.302702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.284491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826893,"sim:weight":0.274825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931534,"sim:weight":0.268037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.262808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.257253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707945,"sim:weight":0.250067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65322,"sim:weight":0.24949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98092,"sim:weight":0.234927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.228764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.2274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.206993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998026,"sim:weight":0.200572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.198653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.198346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.196573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.189879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.185786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.170671,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71967,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Practical memory safety for C","bibo:abstract":"Copious amounts of high-performance and low-level systems code\n        are written in memory-unsafe languages such as C and C++.\n        Unfortunately, the lack of memory safety undermines security and\n        reliability; for example, memory-corruption bugs in programs can\n        breach security, and faults in kernel extensions can bring down\n        the entire operating system. Memory-safe languages, however, are\n        unlikely to displace C and C++ in the near future; thus,\n        solutions for future and existing C and C++ code are needed.\n        \n        Despite considerable prior research, memory-safety problems in C\n        and C++ programs persist because the existing proposals that are\n        practical enough for production use cannot offer adequate\n        protection, while comprehensive proposals are either too slow\n        for practical use, or break backwards compatibility by requiring\n        significant porting or generating binary-incompatible code.\n        \n        To enable practical protection against memory-corruption attacks\n        and operating system crashes, I designed new integrity\n        properties preventing dangerous memory corruption at low cost\n        instead of enforcing strict memory safety to catch every memory\n        error at high cost. Then, at the implementation level, I\n        aggressively optimised for the common case, and streamlined\n        execution by modifying memory layouts as far as allowed without\n        breaking binary compatibility.\n        \n        I developed three compiler-based tools for analysing and\n        instrumenting unmodified source code to automatically generate\n        binaries hardened against memory errors: BBC and WIT to harden\n        user-space C programs, and BGI to harden and to isolate\n        Microsoft Windows kernel extensions. The generated code incurs\n        low performance overhead and is binary-compatible with\n        uninstrumented code. BBC offers strong protection with lower\n        overhead than previously possible for its level of protection;\n        WIT further lowers overhead while offering stronger protection\n        than previous solutions of similar performance; and BGI improves\n        backwards compatibility and performance over previous proposals,\n        making kernel extension isolation practical for commodity\n        systems.","bibo:AuthorList":["Akritidis, Periklis"],"dc:date":"2011-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998433,"sim:weight":0.378067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.351277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931566,"sim:weight":0.348756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925687,"sim:weight":0.34565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.340931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278780,"sim:weight":0.337082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.322904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12219,"sim:weight":0.311897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549536,"sim:weight":0.31117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.308268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.304641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.299427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.29932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.299087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2152218,"sim:weight":0.293219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98244,"sim:weight":0.28718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16025,"sim:weight":0.273669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.257929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99269,"sim:weight":0.245035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336567,"sim:weight":0.237344,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71969,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Interpretational overhead in system software","bibo:abstract":"Interpreting a program carries a runtime penalty: the\n        interpretational overhead. Traditionally, a compiler removes\n        interpretational overhead by sacrificing inessential details of\n        program execution. However, a broad class of system software is\n        based on non-standard interpretation of machine code or a\n        higher-level language. For example, virtual machine monitors\n        emulate privileged instructions; program instrumentation is used\n        to build dynamic call graphs by intercepting function calls and\n        returns; and dynamic software updating technology allows program\n        code to be altered at runtime. Many of these frameworks are\n        performance-sensitive and several efficiency requirements—both\n        formal and informal—have been put forward over the last four\n        decades. Largely independently, the concept of interpretational\n        overhead received much attention in the partial evaluation\n        (“program specialization”) literature. This dissertation\n        contributes a unifying understanding of efficiency and\n        interpretational overhead in system software.\n        \n        Starting from the observation that a virtual machine monitor is\n        a self-interpreter for machine code, our first contribution is\n        to reconcile the definition of efficient virtualization due to\n        Popek and Goldberg with Jones optimality, a measure of the\n        strength of program specializers. We also present a rational\n        reconstruction of hardware virtualization support\n        (“trap-and-emulate”) from context-threaded interpretation, a\n        technique for implementing fast interpreters due to Berndl et\n        al.\n        \n        As a form of augmented execution, virtualization shares many\n        similarities with program instrumentation. Although several\n        low-overhead instrumentation frameworks are available on today’s\n        hardware, there has been no formal understanding of what it\n        means for instrumentation to be efficient. Our second\n        contribution is a definition of efficiency for program\n        instrumentation in the spirit of Popek and Goldberg’s work.\n        Instrumentation also incurs an implicit overhead because\n        instrumentation code needs access to intermediate execution\n        states and this is antagonistic to optimization. The third\n        contribution is to use partial equivalence relations (PERs) to\n        express the dependence of instrumentation on execution state,\n        enabling an instrumentation/optimization trade-off. Since\n        program instrumentation, applied at runtime, constitutes a kind\n        of dynamic software update, we can similarly restrict allowable\n        future updates to be consistent with existing optimizations.\n        Finally, treating “old” and “new” code in a\n        dynamically-updatable program as being written in different\n        languages permits a semantic explanation of a safety rule that\n        was originally introduced as a syntactic check.","bibo:AuthorList":["Feigin, Boris"],"dc:date":"2011-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934773,"sim:weight":0.515911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.489793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9658,"sim:weight":0.479748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.471906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827026,"sim:weight":0.452191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.450492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.444029,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.437812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.424028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.410724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.410614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.409223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998026,"sim:weight":0.403259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.394998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934122,"sim:weight":0.390074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000294,"sim:weight":0.389973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934098,"sim:weight":0.388264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997961,"sim:weight":0.388164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.385927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.382209,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71971,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Facilitating program parallelisation: a profiling-based\n        approach","bibo:abstract":"The advance of multi-core architectures signals the end of\n        universal speed-up of software over time. To continue exploiting\n        hardware developments, effort must be invested in producing\n        software that can be split up to run on multiple cores or\n        processors. Many solutions have been proposed to address this\n        issue, ranging from explicit to implicit parallelism, but\n        consensus has yet to be reached on the best way to tackle such a\n        problem.\n        \n        In this thesis we propose a profiling-based interactive approach\n        to program parallelisation. Profilers gather dependence\n        information on a program, which is then used to automatically\n        parallelise the program at source-level. The programmer can then\n        examine the resulting parallel program, and using critical path\n        information from the profiler, identify and refactor parallelism\n        bottlenecks to enable further parallelism. We argue that this is\n        an efficient and effective method of parallelising general\n        sequential programs.\n        \n        Our first contribution is a comprehensive analysis of limits of\n        parallelism in several benchmark programs, performed by\n        constructing Dynamic Dependence Graphs (DDGs) from execution\n        traces. We show that average available parallelism is often\n        high, but realising it would require various changes in\n        compilation, language or computation models. As an example, we\n        show how using a spaghetti stack structure can lead to a\n        doubling of potential parallelism.\n        \n        The rest of our thesis demonstrates how some of this potential\n        parallelism can be realised under the popular fork-join\n        parallelism model used by Cilk, TBB, OpenMP and others. We\n        present a tool-chain with two main components: Embla 2, which\n        uses DDGs from profiled dependences to estimate the amount of\n        task-level parallelism in programs; and Woolifier, a\n        source-to-source transformer that uses Embla 2’s output to\n        parallelise the programs. Using several case studies, we\n        demonstrate how this tool-chain greatly facilitates program\n        parallelisation by performing an automatic best-effort\n        parallelisation and presenting critical paths in a concise\n        graphical form so that the programmer can quickly locate\n        parallelism bottlenecks, which when refactored can lead to even\n        greater potential parallelism and significant actual speed-ups\n        (up to around 25 on a 32-effective-core machine).","bibo:AuthorList":["Mak, Jonathan"],"dc:date":"2011-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":281392,"sim:weight":0.399301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4850,"sim:weight":0.392501,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.371168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.353341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.350265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":333810,"sim:weight":0.313612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43152,"sim:weight":0.311112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21340,"sim:weight":0.303966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19522,"sim:weight":0.303615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932238,"sim:weight":0.296465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.289057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023968,"sim:weight":0.284438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279235,"sim:weight":0.278534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1433748,"sim:weight":0.263932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20133,"sim:weight":0.263007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998409,"sim:weight":0.262255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999263,"sim:weight":0.253408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.234604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77776,"sim:weight":0.231136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764675,"sim:weight":0.223966,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71973,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Underspecified quantification","bibo:abstract":"Many noun phrases in text are ambiguously quantified: syntax\n        doesn’t explicitly tell us whether they refer to a single entity\n        or to several and, in main clauses, what portion of the set\n        denoted by the subject Nbar actually takes part in the event\n        expressed by the verb. For instance, when we utter the sentence\n        ‘Cats are mammals’, it is only world knowledge that allows our\n        hearer to infer that we mean ‘All cats are mammals’, and not\n        ‘Some cats are mammals’. This ambiguity effect is interesting at\n        several levels. Theoretically, it raises cognitive and\n        linguistic questions. To what extent does syntax help humans\n        resolve the ambiguity? What problem-solving skills come into\n        play when syntax is insufficient for full resolution? How does\n        ambiguous quantification relate to the phenomenon of genericity,\n        as described by the linguistic literature? From an engineering\n        point of view, the resolution of quantificational ambiguity is\n        essential to the accuracy of some Natural Language Processing\n        tasks.\n        \n        We argue that the quantification ambiguity phenomenon can be\n        described in terms of underspecification and propose a\n        formalisation for what we call ‘underquantified’ subject noun\n        phrases. Our formalisation is motivated by inference\n        requirements and covers all cases of genericity.\n        \n        Our approach is then empirically validated by human annotation\n        experiments. We propose an annotation scheme that follows our\n        theoretical claims with regard to underquantification. Our\n        annotation results strengthen our claim that all noun phrases\n        can be analysed in terms of quantification. The produced corpus\n        allows us to derive a gold standard for quantification\n        resolution experiments and is, as far as we are aware, the first\n        attempt to analyse the distribution of null quantifiers in\n        English.\n        \n        We then create a baseline system for automatic quantification\n        resolution, using syntax to provide discriminating features for\n        our classification. We show that results are rather poor for\n        certain classes and argue that some level of pragmatics is\n        needed, in combination with syntax, to perform accurate\n        resolution. We explore the use of memory-based learning as a way\n        to approximate the problem-solving skills available to humans at\n        the level of pragmatic understanding.","bibo:AuthorList":["Herbelot, Aurelie"],"dc:date":"2011-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9949,"sim:weight":0.578423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.536291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49840,"sim:weight":0.499061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108644,"sim:weight":0.497733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43142,"sim:weight":0.470569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1656370,"sim:weight":0.454221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9709,"sim:weight":0.44251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86840,"sim:weight":0.441716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1829,"sim:weight":0.435784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86477,"sim:weight":0.414035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18877,"sim:weight":0.412103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.41121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826729,"sim:weight":0.405485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20238,"sim:weight":0.400209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15733,"sim:weight":0.392559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20921,"sim:weight":0.391775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9679,"sim:weight":0.381004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147166,"sim:weight":0.372201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15801,"sim:weight":0.371372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73350,"sim:weight":0.370614,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71975,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Affect inference in learning environments: a functional\n        view of facial affect analysis using naturalistic\n        data","bibo:abstract":"This research takes an application-oriented stance on affective\n        computing and addresses the problem of automatic affect\n        inference within learning technologies. It draws from the\n        growing understanding of the centrality of emotion in the\n        learning process and the fact that, as yet, this crucial link is\n        not addressed in the design of learning technologies. This\n        dissertation specifically focuses on examining the utility of\n        facial affect analysis to model the affective state of a learner\n        in a one-on-one learning setting.\n        \n        Although facial affect analysis using posed or acted data has\n        been studied in great detail for a couple of decades now,\n        research using naturalistic data is still a challenging problem.\n        The challenges are derived from the complexity in\n        conceptualising affect, the methodological and technical\n        difficulties in measuring it, and the emergent ethical concerns\n        in realising automatic affect inference by computers. However,\n        as the context of this research is derived from, and relates to,\n        a real-world application environment, it is based entirely on\n        naturalistic data. The whole pipeline – of identifying the\n        requirements, to collection of data, to the development of an\n        annotation protocol, to labelling of data, and the eventual\n        analyses – both quantitative and qualitative; is described in\n        this dissertation. In effect, a framework for conducting\n        research using natural data is set out and the challenges\n        encountered at each stage identified.\n        \n        Apart from the challenges associated with the perception and\n        measurement of affect, this research emphasises that there are\n        additional issues that require due consideration by virtue of\n        the application context. As such, in light of the discussed\n        observations and results, this research concludes that we need\n        to understand the nature and expression of emotion in the\n        context of technology use, and pursue creative exploration of\n        what is perhaps a qualitatively different form of emotion\n        expression and communication.","bibo:AuthorList":["Afzal, Shazia"],"dc:date":"2010-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":717279,"sim:weight":0.671773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":997930,"sim:weight":0.609542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49487,"sim:weight":0.60087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88712,"sim:weight":0.584247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49490,"sim:weight":0.552646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":281410,"sim:weight":0.474926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698846,"sim:weight":0.461051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.456692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2696434,"sim:weight":0.448064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898421,"sim:weight":0.442379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21967,"sim:weight":0.431666,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710162,"sim:weight":0.430385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757527,"sim:weight":0.427457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4182208,"sim:weight":0.42507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932075,"sim:weight":0.420796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112119,"sim:weight":0.420254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397098,"sim:weight":0.409396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282433,"sim:weight":0.407145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103175,"sim:weight":0.401703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397707,"sim:weight":0.378164,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71977,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Machine learning and automated theorem\n        proving","bibo:abstract":"Computer programs to find formal proofs of theorems have a\n        history going back nearly half a century. Originally designed as\n        tools for mathematicians, modern applications of automated\n        theorem provers and proof assistants are much more diverse. In\n        particular they are used in formal methods to verify software\n        and hardware designs to prevent costly, or life threatening,\n        errors being introduced into systems from microchips to\n        controllers for medical equipment or space rockets.\n        \n        Despite this, the high level of human expertise required in\n        their use means that theorem proving tools are not widely used\n        by non specialists, in contrast to computer algebra packages\n        which also deal with the manipulation of symbolic mathematics.\n        The work described in this dissertation addresses one aspect of\n        this problem, that of heuristic selection in automated theorem\n        provers. In theory such theorem provers should be automatic and\n        therefore easy to use; in practice the heuristics used in the\n        proof search are not universally optimal for all problems so\n        human expertise is required to determine heuristic choice and to\n        set parameter values.\n        \n        Modern machine learning has been applied to the automation of\n        heuristic selection in a first order logic theorem prover. One\n        objective was to find if there are any features of a proof\n        problem that are both easy to measure and provide useful\n        information for determining heuristic choice. Another was to\n        determine and demonstrate a practical approach to making theorem\n        provers truly automatic.\n        \n        In the experimental work, heuristic selection based on features\n        of the conjecture to be proved and the associated axioms is\n        shown to do better than any single heuristic. Additionally a\n        comparison has been made between static features, measured prior\n        to the proof search process, and dynamic features that measure\n        changes arising in the early stages of proof search. Further\n        work was done on determining which features are important,\n        demonstrating that good results are obtained with only a few\n        features required.","bibo:AuthorList":["Bridge, James P."],"dc:date":"2010-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43062,"sim:weight":0.428147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.406644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.393923,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21892,"sim:weight":0.38647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.379011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.368348,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.362458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.351094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934085,"sim:weight":0.350236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.349523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21063,"sim:weight":0.348571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.346879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9771,"sim:weight":0.329284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.328575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.328353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98526,"sim:weight":0.324487,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50351,"sim:weight":0.309651,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99456,"sim:weight":0.309019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.307073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21980,"sim:weight":0.303961,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71979,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Semi-supervised learning for biomedical information\n        extraction","bibo:abstract":"This thesis explores the application of semi-supervised learning\n        to biomedical information extraction. The latter has emerged in\n        recent years as a challenging application domain for natural\n        language processing techniques. The challenge stems partly from\n        the lack of appropriate resources that can be used as labeled\n        training data. Therefore, we choose to focus on semi-supervised\n        learning techniques which enable us to take advantage of human\n        supervision combined with unlabeled data.\n        \n        We begin with a short introduction to biomedical information\n        extraction and semi-supervised learning in Chapter 1. Chapter 2\n        focuses on the task of biomedical named entity recognition.\n        Using raw abstracts and a dictionary of gene names we develop\n        two systems for this task. Furthermore, we discuss annotation\n        issues and demonstrate how the performance can be improved using\n        user feedback in realistic conditions. In Chapter 3 we develop\n        two biomedical event extraction systems: a rule-based one and a\n        machine learning based one. The former needs only an annotated\n        dictionary and syntactic parsing as input, while the latter\n        requires partial event annotation additionally. Both systems\n        achieve performances comparable to systems utilizing fully\n        annotated training data. Chapter 4 discusses the task of\n        lexical-semantic clustering using Dirichlet process mixture\n        models. We review the unsupervised learning method used, which\n        allows the number of clusters discovered to be determined by the\n        data. Furthermore, we introduce a new clustering evaluation\n        measure that addresses some shortcomings of the existing\n        measures. Chapter 5 introduces a method of guiding the\n        clustering solution using pairwise links between instances.\n        Furthermore, we present a method of selecting these pairwise\n        links actively in order to decrease the amount of supervision\n        required. Finally, Chapter 6 assesses the contributions of this\n        thesis and highlights directions for future work.","bibo:AuthorList":["Vlachos, Andreas"],"dc:date":"2010-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8826730,"sim:weight":0.595127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73259,"sim:weight":0.478625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997738,"sim:weight":0.471194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826729,"sim:weight":0.465743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826847,"sim:weight":0.461296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225570,"sim:weight":0.459202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21802,"sim:weight":0.447888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19949,"sim:weight":0.447019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86615,"sim:weight":0.44693,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9679,"sim:weight":0.444622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19892,"sim:weight":0.442642,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20446,"sim:weight":0.438618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73436,"sim:weight":0.437813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18505,"sim:weight":0.435895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18401,"sim:weight":0.43529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2034,"sim:weight":0.427627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15906,"sim:weight":0.424666,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937278,"sim:weight":0.424555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239354,"sim:weight":0.424035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15733,"sim:weight":0.422479,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71981,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automated assessment of ESOL free text\n        examinations","bibo:abstract":"In this report, we consider the task of automated assessment of\n        English as a Second Language (ESOL) examination scripts written\n        in response to prompts eliciting free text answers. We review\n        and critically evaluate previous work on automated assessment\n        for essays, especially when applied to ESOL text. We formally\n        define the task as discriminative preference ranking and develop\n        a new system trained and tested on a corpus of manually-graded\n        scripts. We show experimentally that our best performing system\n        is very close to the upper bound for the task, as defined by the\n        agreement between human examiners on the same corpus. Finally we\n        argue that our approach, unlike extant solutions, is relatively\n        prompt-insensitive and resistant to subversion, even when its\n        operating principles are in the public domain. These properties\n        make our approach significantly more viable for high-stakes\n        assessment.","bibo:AuthorList":["Briscoe, Ted","Medlock, Ben","Andersen, Øistein"],"dc:date":"2010-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98933,"sim:weight":0.405678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.401586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.375819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":66332,"sim:weight":0.260798,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70387,"sim:weight":0.241966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756774,"sim:weight":0.234416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27452,"sim:weight":0.233304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43860,"sim:weight":0.230776,"sim:AssociationMethod":"similarity_cosine"},{"identifier":446652,"sim:weight":0.227366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4160793,"sim:weight":0.226265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4160794,"sim:weight":0.204389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.202631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145174,"sim:weight":0.191052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277734,"sim:weight":0.189228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43975,"sim:weight":0.187559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4158687,"sim:weight":0.18261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46848,"sim:weight":0.180326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99483,"sim:weight":0.176653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45707,"sim:weight":0.17663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99305,"sim:weight":0.174449,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71983,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Emotion inference from human body motion","bibo:abstract":"The human body has evolved to perform sophisticated tasks from\n        locomotion to the use of tools. At the same time our body\n        movements can carry information indicative of our intentions,\n        inter-personal attitudes and emotional states. Because our body\n        is specialised to perform a variety of everyday tasks, in most\n        situations emotional effects are only visible through subtle\n        changes in the qualities of movements and actions. This\n        dissertation focuses on the automatic analysis of emotional\n        effects in everyday actions.\n        \n        In the past most efforts to recognise emotions from the human\n        body have focused on expressive gestures which are archetypal\n        and exaggerated expressions of emotions. While these are easier\n        to recognise by humans and computational pattern recognisers\n        they very rarely occur in natural scenarios. The principal\n        contribution of this dissertation is hence the inference of\n        emotional states from everyday actions such as walking, knocking\n        and throwing. The implementation of the system draws inspiration\n        from a variety of disciplines including psychology, character\n        animation and speech recognition. Complex actions are modelled\n        using Hidden Markov Models and motion primitives. The\n        manifestation of emotions in everyday actions is very subtle and\n        even humans are far from perfect at picking up and interpreting\n        the relevant cues because emotional influences are usually minor\n        compared to constraints arising from the action context or\n        differences between individuals.\n        \n        This dissertation describes a holistic approach which models\n        emotional, action and personal influences in order to maximise\n        the discriminability of different emotion classes. A pipeline is\n        developed which incrementally removes the biases introduced by\n        different action contexts and individual differences. The\n        resulting signal is described in terms of posture and dynamic\n        features and classified into one of several emotion classes\n        using statistically trained Support Vector Machines. The system\n        also goes beyond isolated expressions and is able to classify\n        natural action sequences. I use Level Building to segment action\n        sequences and combine component classifications using an\n        incremental voting scheme which is suitable for online\n        applications. The system is comprehensively evaluated along a\n        number of dimensions using a corpus of motion-captured actions.\n        For isolated actions I evaluate the generalisation performance\n        to new subjects. For action sequences I study the effects of\n        reusing models trained on the isolated cases vs adapting models\n        to connected samples. The dissertation also evaluates the role\n        of modelling the influence of individual user differences. I\n        develop and evaluate a regression-based adaptation scheme. The\n        results bring us an important step closer to recognising\n        emotions from body movements, embracing the complexity of body\n        movements in natural scenarios.","bibo:AuthorList":["Bernhardt, Daniel"],"dc:date":"2010-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":717279,"sim:weight":0.573438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49487,"sim:weight":0.498175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":997930,"sim:weight":0.473244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698846,"sim:weight":0.451441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49490,"sim:weight":0.441971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20593,"sim:weight":0.441604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147453,"sim:weight":0.432847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43132,"sim:weight":0.429142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934338,"sim:weight":0.42536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":281410,"sim:weight":0.422239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931925,"sim:weight":0.421048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101382,"sim:weight":0.419678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22046,"sim:weight":0.416527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55524,"sim:weight":0.414741,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933870,"sim:weight":0.409213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70103,"sim:weight":0.407687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43099,"sim:weight":0.405914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931140,"sim:weight":0.405606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9612442,"sim:weight":0.401967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930493,"sim:weight":0.400024,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71985,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Communication flows in power-efficient\n        Networks-on-Chips","bibo:abstract":"Networks-on-Chips (NoCs) represent a scalable wiring solution\n        for future chips, with dynamic allocation-based networks able to\n        provide good utilisation of the scarce available resources. This\n        thesis develops power-efficient, dynamic, packet-switched NoCs\n        which can support on-chip communication flows.\n        \n        Given the severe power constraint already present in VLSI, a\n        power efficient NoC design direction is first developed. To\n        accurately explore the impact of various design parameters on\n        NoC power dissipation, 4 different router designs are\n        synthesised, placed and routed in a 90nm process. This\n        demonstrates that the power demands are dominated by the\n        data-path and not the control-path, leading to the key finding\n        that, from the energy perspective, it is justifiable to use more\n        computation to optimise communication.\n        \n        A review of existing research shows the near-ubiquitous nature\n        of stream-like communication flows in future computing systems,\n        making support for flows within NoCs critically important. It is\n        shown that in several situations, current NoCs make highly\n        inefficient use of network resources in the presence of\n        communication flows. To resolve this problem, a scalable\n        mechanism is developed to enable the identification of flows,\n        with a flow defined as all packets going to the same\n        destination. The number of virtual-channels that can be used by\n        a single flow is then limited to the minimum required, ensuring\n        efficient resource utilisation.\n        \n        The issue of fair resource allocation between flows is next\n        investigated. The locally fair, packet-based allocation\n        strategies of current NoCs are shown not to provide fairness\n        between flows. The mechanism already developed to identify flows\n        by their destination nodes is extended to enable flows to be\n        identified by source-destination address pairs. Finally, a\n        modification to the link scheduling mechanism is proposed to\n        achieve max-min fairness between flows.","bibo:AuthorList":["Banerjee, Arnab"],"dc:date":"2010-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":80576,"sim:weight":0.533646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":718003,"sim:weight":0.505675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393976,"sim:weight":0.500722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2675569,"sim:weight":0.498918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80570,"sim:weight":0.479792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68807,"sim:weight":0.448466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960746,"sim:weight":0.396114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999068,"sim:weight":0.369924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929784,"sim:weight":0.367822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764493,"sim:weight":0.366429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003845,"sim:weight":0.359482,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.355962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934620,"sim:weight":0.353599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":97568,"sim:weight":0.353153,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003859,"sim:weight":0.35282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102392,"sim:weight":0.346711,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919296,"sim:weight":0.324395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393994,"sim:weight":0.316045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1137698,"sim:weight":0.314497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":659227,"sim:weight":0.310698,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71987,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Anonymity, information, and machine-assisted\n        proof","bibo:abstract":"This report demonstrates a technique for proving the anonymity\n        guarantees of communication systems, using a mechanised\n        theorem-prover. The approach is based on Shannon’s theory of\n        information and can be used to analyse probabilistic programs.\n        The information-theoretic metrics that are used for anonymity\n        provide quantitative results, even in the case of partial\n        anonymity. Many of the developments in this text are applicable\n        to information leakage in general, rather than solely to privacy\n        properties. By developing the framework within a mechanised\n        theorem-prover, all proofs are guaranteed to be logically and\n        mathematically consistent with respect to a given model.\n        Moreover, the specification of a system can be parameterised and\n        desirable properties of the system can quantify over those\n        parameters; as a result, properties can be proved about the\n        system in general, rather than specific instances.\n        \n        In order to develop the analysis framework described in this\n        text, the underlying theories of information, probability, and\n        measure had to be formalised in the theorem-prover; those\n        formalisations are explained in detail. That foundational work\n        is of general interest and not limited to the applications\n        illustrated here. The meticulous, extensional approach that has\n        been taken ensures that mathematical consistency is maintained.\n        \n        A series of examples illustrate how formalised information\n        theory can be used to analyse and prove the information leakage\n        of programs modelled in the theorem-prover. Those examples\n        consider a number of different threat models and show how they\n        can be characterised in the framework proposed.\n        \n        Finally, the tools developed are used to prove the anonymity of\n        the dining cryptographers (DC) protocol, thereby demonstrating\n        the use of the framework and its applicability to proving\n        privacy properties; the DC protocol is a standard benchmark for\n        new methods of analysing anonymity systems. This work includes\n        the first machine-assisted proof of anonymity of the DC protocol\n        for an unbounded number of cryptographers.","bibo:AuthorList":["Coble, Aaron R."],"dc:date":"2010-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9661,"sim:weight":0.439364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9658,"sim:weight":0.389393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9664,"sim:weight":0.372592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930772,"sim:weight":0.370366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.361119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707650,"sim:weight":0.360646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21041,"sim:weight":0.279673,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20907,"sim:weight":0.275273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.265883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20749,"sim:weight":0.259611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.246811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.24108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.231529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.230211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.226199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.223788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931408,"sim:weight":0.219373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23071,"sim:weight":0.212587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.208131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145717,"sim:weight":0.20662,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71989,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Characterizing 10 Gbps network interface energy\n        consumption","bibo:abstract":"Understanding server energy consumption is fast becoming an area\n        of interest given the increase in the per-machine energy\n        footprint of modern servers and the increasing number of servers\n        required to satisfy demand. In this paper we (i) quantify the\n        energy overhead of the network subsystem in modern servers by\n        measuring, reporting and analyzing power consumption in six 10\n        Gbps and four 1 Gbps interconnects at a fine-grained level; (ii)\n        introduce two metrics for calculating the energy efficiency of a\n        network interface from the perspective of network throughput and\n        host CPU usage; (iii) compare the efficiency of multiport 1 Gbps\n        interconnects as an alternative to 10 Gbps interconnects; and\n        (iv) conclude by offering recommendations for improving network\n        energy efficiency for system deployment and network interface\n        designers.","bibo:AuthorList":["Sohan, Ripduman","Rice, Andrew","Moore, Andrew W.","Mansley, Kieran"],"dc:date":"2010-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26670,"sim:weight":0.243744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.222405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.212785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661925,"sim:weight":0.200771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.195272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1107531,"sim:weight":0.181913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019057,"sim:weight":0.162125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.158703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766044,"sim:weight":0.158241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151796,"sim:weight":0.15566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.142219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.140767,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1084648,"sim:weight":0.134833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821411,"sim:weight":0.127173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.117707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.116755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43550,"sim:weight":0.114277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003888,"sim:weight":0.112738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98604,"sim:weight":0.110254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709994,"sim:weight":0.10785,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71992,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Distributed complex event detection for pervasive\n        computing","bibo:abstract":"Pervasive computing is a model of information processing that\n        augments computers with sensing capabilities and distributes\n        them into the environment. Many pervasive computing applications\n        are reactive in nature, in that they perform actions in response\n        to events (i.e. changes in state of the environment). However,\n        these applications are typically interested in high-level\n        complex events, in contrast to the low-level primitive events\n        produced by sensors. The goal of this thesis is to support the\n        detection of complex events by filtering, aggregating, and\n        combining primitive events.\n        \n        Supporting complex event detection in pervasive computing\n        environments is a challenging problem. Sensors may have limited\n        processing, storage, and communication capabilities. In\n        addition, battery powered sensing devices have limited energy\n        resources. Since they are embedded in the environment,\n        recharging may be difficult or impossible. To prolong the\n        lifetime of the system, it is vital that these energy resources\n        are used efficiently. Further complications arise due to the\n        distributed nature of pervasive computing systems. The lack of a\n        global clock can make it impossible to order events from\n        different sources. Events may be delayed or lost en route to\n        their destination, making it difficult to perform timely and\n        accurate complex event detection. Finally, pervasive computing\n        systems may be large, both geographically and in terms of the\n        number of sensors. Architectures to support pervasive computing\n        applications should therefore be highly scalable.\n        \n        We make several contributions in this dissertation. Firstly, we\n        present a flexible language for specifying complex event\n        patterns. The language provides developers with a variety of\n        parameters to control the detection process, and is designed for\n        use in an open distributed environment. Secondly, we provide the\n        ability for applications to specify a variety of detection\n        policies. These policies allow the system to determine the best\n        way of handling lost and delayed events. Of particular interest\n        is our ‘no false-positive’ detection policy. This allows a\n        reduction in detection latency while ensuring that only correct\n        events are generated for applications sensitive to false\n        positives. Finally, we show how complex event detector placement\n        can be optimized over a federated event-based middleware. In\n        many cases, detector distribution can reduce unnecessary\n        communication with resource constrained sensors.","bibo:AuthorList":["O\u0027Keeffe, Dan"],"dc:date":"2010-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1925982,"sim:weight":0.619749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4821,"sim:weight":0.507438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69261,"sim:weight":0.485067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91437,"sim:weight":0.468979,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8023,"sim:weight":0.468625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70445,"sim:weight":0.451474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91434,"sim:weight":0.448253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91433,"sim:weight":0.42493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.42384,"sim:AssociationMethod":"similarity_cosine"},{"identifier":372982,"sim:weight":0.409758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91424,"sim:weight":0.40565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.403795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9127686,"sim:weight":0.400463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934452,"sim:weight":0.394532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800134,"sim:weight":0.391946,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70446,"sim:weight":0.383734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.382682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69325,"sim:weight":0.378685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69283,"sim:weight":0.372131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19833,"sim:weight":0.371213,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71994,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Petri net semantics","bibo:abstract":"Petri nets are a widely-used model for concurrency. By modelling\n        the effect of events on local components of state, they reveal\n        how the events of a process interact with each other, and\n        whether they can occur independently of each other by operating\n        on disjoint regions of state.\n        \n        Despite their popularity, we are lacking systematic\n        syntax-driven techniques for defining the semantics of\n        programming languages inside Petri nets in an analogous way that\n        Plotkin\u0027s Structural Operational Semantics defines a transition\n        system semantics. The first part of this thesis studies a\n        generally-applicable framework for the definition of the net\n        semantics of a programming language.\n        \n        The net semantics is used to study concurrent separation logic,\n        a Hoare-style logic used to prove partial correctness of\n        pointer-manipulating concurrent programs. At the core of the\n        logic is the notion of separation of ownership of state,\n        allowing us to infer that proven parallel processes operate on\n        the disjoint regions of the state that they are seen to own. In\n        this thesis, a notion of validity of the judgements capturing\n        the subtle notion of ownership is given and soundness of the\n        logic with respect to this model is shown. The model is then\n        used to study the independence of processes arising from the\n        separation of ownership. Following from this, a form of\n        refinement is given which is capable of changing the granularity\n        assumed of the program\u0027s atomic actions.\n        \n        Amongst the many different models for concurrency, there are\n        several forms of Petri net. Category theory has been used in the\n        past to establish connections between them via adjunctions,\n        often coreflections, yielding common constructions across the\n        models and relating concepts such as bisimulation. The most\n        general forms of Petri net have, however, fallen outside this\n        framework. Essentially, this is due to the most general forms of\n        net having an implicit symmetry in their behaviour that other\n        forms of net cannot directly represent.\n        \n        The final part of this thesis shows how an abstract framework\n        for defining symmetry in models can be applied to obtain\n        categories of Petri net with symmetry. This is shown to recover,\n        up to symmetry, the universal characterization of unfolding\n        operations on general Petri nets, allowing coreflections up to\n        symmetry between the category of general Petri nets and other\n        categories of net.","bibo:AuthorList":["Hayman, Jonathan M."],"dc:date":"2010-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.569061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.561684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.483529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.482372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.456961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.456961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934471,"sim:weight":0.451069,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.450435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.427998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934324,"sim:weight":0.425082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934473,"sim:weight":0.419059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934346,"sim:weight":0.416312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934369,"sim:weight":0.415215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934432,"sim:weight":0.412734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934343,"sim:weight":0.407555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934302,"sim:weight":0.403892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000287,"sim:weight":0.399488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934438,"sim:weight":0.397585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.395587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.392859,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71996,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Stage scheduling for CPU-intensive servers","bibo:abstract":"The increasing prevalence of multicore, multiprocessor commodity\n        hardware calls for server software architectures that are\n        cycle-efficient on individual cores and can maximize concurrency\n        across an entire machine. In order to achieve both ends this\n        dissertation advocates stage architectures that put software\n        concurrency foremost and aggressive CPU scheduling that exploits\n        the common structure and runtime behavior of CPU-intensive\n        servers. For these servers user-level scheduling policies that\n        multiplex one kernel thread per physical core can outperform\n        those that utilize pools of worker threads per stage on\n        CPU-intensive workloads. Boosting the hardware efficiency of\n        servers in userspace means a single machine can handle more\n        users without tuning, operating system modifications, or better\n        hardware.","bibo:AuthorList":["Gordon, Minor E."],"dc:date":"2010-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1019057,"sim:weight":0.449841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4892816,"sim:weight":0.441584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931668,"sim:weight":0.411151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009450,"sim:weight":0.373178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.357284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.354974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.351894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008746,"sim:weight":0.348345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.345599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023877,"sim:weight":0.340847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98244,"sim:weight":0.336814,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.334793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931691,"sim:weight":0.333713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998090,"sim:weight":0.331492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934851,"sim:weight":0.328794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793220,"sim:weight":0.323056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930971,"sim:weight":0.32073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.315389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.314812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918779,"sim:weight":0.31188,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":71998,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Cryptography and evidence","bibo:abstract":"The invention of public-key cryptography led to the notion that\n        cryptographically protected messages could be used as evidence\n        to convince an impartial adjudicator that a disputed event had\n        in fact occurred. Information stored in a computer is easily\n        modified, and so records can be falsified or retrospectively\n        modified. Cryptographic protection prevents modification, and it\n        is hoped that this will make cryptographically protected data\n        acceptable as evidence. This usage of cryptography to render an\n        event undeniable has become known as non-repudiation. This\n        dissertation is an enquiry into the fundamental limitations of\n        this application of cryptography, and the disadvantages of the\n        techniques which are currently in use. In the course of this\n        investigation I consider the converse problem, of ensuring that\n        an instance of communication between computer systems leaves\n        behind no unequivocal evidence of its having taken place.\n        Features of communications protocols that were seen as defects\n        from the standpoint of non-repudiation can be seen as benefits\n        from the standpoint of this converse problem, which I call\n        “plausible deniability”.","bibo:AuthorList":["Roe, Michael"],"dc:date":"2010-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":74052,"sim:weight":0.53023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.504911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999811,"sim:weight":0.474842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.457544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.449192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382006,"sim:weight":0.443872,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008795,"sim:weight":0.442448,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186307,"sim:weight":0.442134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023853,"sim:weight":0.435201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96261,"sim:weight":0.424723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68254,"sim:weight":0.422347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382025,"sim:weight":0.414647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102792,"sim:weight":0.413491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73111,"sim:weight":0.399727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26474,"sim:weight":0.397019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041458,"sim:weight":0.39153,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899511,"sim:weight":0.388541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98987,"sim:weight":0.379889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":953086,"sim:weight":0.372363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5852208,"sim:weight":0.368636,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72000,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Concurrent Abstract Predicates","bibo:abstract":"Abstraction is key to understanding and reasoning about large\n        computer systems. Abstraction is simple to achieve if the\n        relevant data structures are disjoint, but rather difficult when\n        they are partially shared, as is the case for concurrent\n        modules. We present a program logic for reasoning abstractly\n        about data structures, that provides a fiction of disjointness\n        and permits compositional reasoning. The internal details of a\n        module are completely hidden from the client by concurrent\n        abstract predicates. We reason about a module’s implementation\n        using separation logic with permissions, and provide abstract\n        specifications for use by client programs using concurrent\n        abstract predicates. We illustrate our abstract reasoning by\n        building two implementations of a lock module on top of hardware\n        instructions, and two implementations of a concurrent set module\n        on top of the lock module.","bibo:AuthorList":["Dinsdale-Young, Thomas","Dodds, Mike","Gardner, Philippa","Parkinson, Matthew","Vafeiadis, Viktor"],"dc:date":"2010-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98816,"sim:weight":0.331418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.329732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.303038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.271637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.20684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.186228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998027,"sim:weight":0.185924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998255,"sim:weight":0.185561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933328,"sim:weight":0.18477,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65304,"sim:weight":0.177797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.173486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.169369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.151099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934278,"sim:weight":0.149897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.148587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.145431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1002412,"sim:weight":0.144463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.140042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.135333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.132232,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72002,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"System tests from unit tests","bibo:abstract":"Large programs have bugs; software engineering practices reduce\n        the number of bugs in deployed systems by relying on a\n        combination of unit tests, to filter out bugs in individual\n        procedures, and system tests, to identify bugs in an integrated\n        system.\n        \n        Our previous work showed how Floyd-Hoare triples, {P}C{Q}, could\n        also be seen as unit tests, i.e. formed a link between\n        verification and test-based validation. A transactional-style\n        implementation allows test post-conditions to refer to values of\n        data structures both before and after test execution. Here we\n        argue that this style of specifications, with a transactional\n        implementation, provide a novel source of system tests.\n        \n        Given a set of unit tests for a system, we can run programs in\n        test mode on real data. Based on an analysis of the unit tests,\n        we intersperse the program’s execution with the pre- and\n        post-conditions from the test suite to expose bugs or\n        incompletenesses in either the program or the test suite itself.\n        We use the results of these tests, as well as branch-trace\n        coverage information, to identify and report anomalies in the\n        running program.","bibo:AuthorList":["Gray, Kathryn E.","Mycroft, Alan"],"dc:date":"2010-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":877710,"sim:weight":0.314629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.314323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899695,"sim:weight":0.248009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902491,"sim:weight":0.230623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707682,"sim:weight":0.222458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.222344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51716,"sim:weight":0.213219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.208416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12219,"sim:weight":0.195226,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.187691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003941,"sim:weight":0.187502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.187017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.186274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":856244,"sim:weight":0.177493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.175907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108795,"sim:weight":0.16891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917,"sim:weight":0.167688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.164783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549752,"sim:weight":0.16274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102656,"sim:weight":0.161019,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72004,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Creating high-performance, statically type-safe network\n        applications","bibo:abstract":"A typical Internet server finds itself in the middle of a\n        virtual battleground, under constant threat from worms, viruses\n        and other malware seeking to subvert the original intentions of\n        the programmer. In particular, critical Internet servers such as\n        OpenSSH, BIND and Sendmail have had numerous security issues\n        ranging from low-level buffer overflows to subtle protocol logic\n        errors. These problems have cost billions of dollars as the\n        growth of the Internet exposes increasing numbers of computers\n        to electronic malware. Despite the decades of research on\n        techniques such as model-checking, type-safety and other forms\n        of formal analysis, the vast majority of server implementations\n        continue to be written unsafely and informally in C/C++.\n        \n        In this dissertation we propose an architecture for constructing\n        new implementations of standard Internet protocols which\n        integrates mature formal methods not currently used in deployed\n        servers: (i) static type systems from the ML family of\n        functional languages; (ii) model checking to verify safety\n        properties exhaustively about aspects of the servers; and (iii)\n        generative meta-programming to express high-level constraints\n        for the domain-specific tasks of packet parsing and constructing\n        non-deterministic state machines. Our architecture—dubbed\n        MELANGE—is based on Objective Caml and contributes two\n        domain-specific languages: (i) the Meta Packet Language (MPL), a\n        data description language used to describe the wire format of a\n        protocol and output statically type-safe code to handle network\n        traffic using high-level functional data structures; and (ii)\n        the Statecall Policy Language (SPL) for constructing\n        non-deterministic finite state automata which are embedded into\n        applications and dynamically enforced, or translated into\n        PROMELA and statically model-checked.\n        \n        Our research emphasises the importance of delivering efficient,\n        portable code which is feasible to deploy across the Internet.\n        We implemented two complex protocols—SSH and DNS—to verify our\n        claims, and our evaluation shows that they perform faster than\n        their standard counterparts OpenSSH and BIND, in addition to\n        providing static guarantees against some classes of errors that\n        are currently a major source of security problems.","bibo:AuthorList":["Madhavapeddy, Anil"],"dc:date":"2010-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":80681,"sim:weight":0.455008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.451235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.449431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.446752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.439647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.426504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.424342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.422827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767115,"sim:weight":0.421921,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.421694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.421055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.418251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.417071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.413847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.40893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.405256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934801,"sim:weight":0.402144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":823481,"sim:weight":0.401298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.400718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998131,"sim:weight":0.394167,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72006,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Explicit stabilisation for modular rely-guarantee\n        reasoning","bibo:abstract":"We propose a new formalisation of stability for Rely-Guarantee,\n        in which an assertion\u0027s stability is encoded into its syntactic\n        form. This allows two advances in modular reasoning. Firstly, it\n        enables Rely-Guarantee, for the first time, to verify concurrent\n        libraries independently of their clients\u0027 environments.\n        Secondly, in a sequential setting, it allows a module\u0027s internal\n        interference to be hidden while verifying its clients. We\n        demonstrate our approach by verifying, using RGSep, the Version\n        7 Unix memory manager, uncovering a twenty-year-old bug in the\n        process.","bibo:AuthorList":["Wickerson, John","Dodds, Mike","Parkinson, Matthew"],"dc:date":"2010-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98816,"sim:weight":0.307752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.23269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.195417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84974,"sim:weight":0.151873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.132536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1337310,"sim:weight":0.123835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1339,"sim:weight":0.118181,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.116421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74038,"sim:weight":0.109678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.108066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.106519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.102254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.10212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.101851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.0986643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.0980902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.0966014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.094434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998017,"sim:weight":0.0925878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.092568,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72008,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"NURBS-compatible subdivision surfaces","bibo:abstract":"Two main technologies are available to design and represent\n        freeform surfaces: Non-Uniform Rational B-Splines (NURBS) and\n        subdivision surfaces. Both representations are built on uniform\n        B-splines, but they extend this foundation in incompatible ways,\n        and different industries have therefore established a preference\n        for one representation over the other. NURBS are the dominant\n        standard for Computer-Aided Design, while subdivision surfaces\n        are popular for applications in animation and entertainment.\n        However there are benefits of subdivision surfaces (arbitrary\n        topology) which would be useful within Computer-Aided Design,\n        and features of NURBS (arbitrary degree and non-uniform\n        parametrisations) which would make good additions to current\n        subdivision surfaces.\n        \n        I present NURBS-compatible subdivision surfaces, which combine\n        topological freedom with the ability to represent any existing\n        NURBS surface exactly. Subdivision schemes that extend either\n        non-uniform or general-degree B-spline surfaces have appeared\n        before, but this dissertation presents the first surfaces able\n        to handle both challenges simultaneously. To achieve this I\n        develop a novel factorisation of knot insertion rules for\n        non-uniform, general-degree B-splines.\n        \n        Many subdivision surfaces have poor second-order behaviour near\n        singularities. I show that it is possible to bound the\n        curvatures of the general-degree subdivision surfaces created\n        using my factorisation. Bounded-curvature surfaces have\n        previously been created by ‘tuning’ uniform low-degree\n        subdivision schemes; this dissertation shows that general-degree\n        schemes can be tuned in a similar way. As a result, I present\n        the first general-degree subdivision schemes with bounded\n        curvature at singularities.\n        \n        Previous subdivision schemes, both uniform and non-uniform, have\n        inserted knots indiscriminately, but the factorised knot\n        insertion algorithm I describe in this dissertation grants the\n        flexibility to insert knots selectively. I exploit this\n        flexibility to preserve convexity in highly non-uniform\n        configurations, and to create locally uniform regions in place\n        of non-uniform knot intervals. When coupled with\n        bounded-curvature modifications, these techniques give the first\n        non-uniform subdivision schemes with bounded curvature.\n        \n        I conclude by combining these results to present\n        NURBS-compatible subdivision surfaces: arbitrary-topology,\n        non-uniform and general-degree surfaces which guarantee\n        high-quality second-order surface properties.","bibo:AuthorList":["Cashman, Thomas J."],"dc:date":"2010-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":334869,"sim:weight":0.360917,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.349321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334351,"sim:weight":0.316301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334941,"sim:weight":0.279484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382821,"sim:weight":0.249882,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.243461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":337836,"sim:weight":0.242987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.235614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":135135,"sim:weight":0.22704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008756,"sim:weight":0.219571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334549,"sim:weight":0.211345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334609,"sim:weight":0.173937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334910,"sim:weight":0.171861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101555,"sim:weight":0.166276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":270130,"sim:weight":0.14725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26015,"sim:weight":0.146442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058036,"sim:weight":0.145189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334945,"sim:weight":0.140128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45824,"sim:weight":0.138023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.133866,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72010,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An executable meta-language for inductive definitions\n        with binders","bibo:abstract":"A testable prototype can be invaluable for identifying bugs\n        during the early stages of language development. For such a\n        system to be useful in practice it should be quick and simple to\n        generate prototypes from the language specification.\n        \n        This dissertation describes the design and development of a new\n        programming language called alphaML, which extends traditional\n        functional programming languages with specific features for\n        producing correct, executable prototypes. The most important new\n        features of alphaML are for the handling of names and binding\n        structures in user-defined languages. To this end, alphaML uses\n        the techniques of nominal sets (due to Pitts and Gabbay) to\n        represent names explicitly and handle binding correctly up to\n        alpha-renaming. The language also provides built-in support for\n        constraint solving and non-deterministic search.\n        \n        We begin by presenting a generalised notion of systems defined\n        by a set of schematic inference rules. This is our model for the\n        kind of languages that might be implemented using alphaML. We\n        then present the syntax, type system and operational semantics\n        of the alphaML language and proceed to define a sound and\n        complete embedding of schematic inference rules. We turn to\n        program equivalence and define a standard notion of operational\n        equivalence between alphaML expressions and use this to prove\n        correctness results about the representation of data terms\n        involving binding and about schematic formulae and inductive\n        definitions.\n        \n        The fact that binding can be represented correctly in alphaML is\n        interesting for technical reasons, because the language\n        dispenses with the notion of globally distinct names present in\n        most systems based on nominal methods. These results, along with\n        the encoding of inference rules, constitute the main technical\n        payload of the dissertation. However, our approach complicates\n        the solving of constraints between terms. Therefore, we develop\n        a novel algorithm for solving equality and freshness constraints\n        between nominal terms which does not rely on standard devices\n        such as swappings and suspended permutations. Finally, we\n        discuss an implementation of alphaML, and conclude with a\n        summary of the work and a discussion of possible future\n        extensions.","bibo:AuthorList":["Lakin, Matthew R."],"dc:date":"2010-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9658,"sim:weight":0.533267,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.50552,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.503998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.490541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.487163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72990,"sim:weight":0.479879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.47925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.478276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.477205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43999,"sim:weight":0.476479,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.47536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997961,"sim:weight":0.466777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86476,"sim:weight":0.466049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.464027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.463092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86477,"sim:weight":0.455305,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.454102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":93322,"sim:weight":0.453127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.448883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.44485,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72012,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bodies-in-Space: investigating technology usage in\n        co-present group interaction","bibo:abstract":"With mobile phones in people\u0027s pockets, digital devices in\n        people\u0027s homes, and information systems in group meetings at\n        work, technology is frequently present when people interact with\n        each other. Unlike devices used by a single person at a desk,\n        people, rather than machines, are the main focus in social\n        settings. An important difference then between these two\n        scenarios, individual and group, is the role of the body.\n        Although non-verbal behaviour is not part of human-computer\n        interaction, it is very much part of human-human interaction.\n        This dissertation explores bodies-in-space — people\u0027s use of\n        spatial and postural positioning of their bodies to maintain a\n        social interaction when technology is supporting the social\n        interaction of a co-present group.\n        \n        I begin this dissertation with a review of literature, looking\n        at how and when bodies-in-space have been accounted for in\n        research and design processes of technology for co-present\n        groups. I include examples from both human-computer interaction,\n        as well the social sciences more generally. Building on this\n        base, the following four chapters provide examples and\n        discussion of methods to: (1) see (analytically), (2) notate,\n        (3) adjust (choreograph), and (4) research in the laboratory,\n        bodies-in-space. I conclude with reflections on the value of\n        capturing bodies-in-space in the process of designing technology\n        for co-present groups and emphasise a trend towards end-user\n        involvement and its consequences for the scope of human-computer\n        interaction research.\n        \n        All of the research in this dissertation derives from, and\n        relates to, the real-world context of an intensive care unit of\n        a hospital and was part of assessing the deployment of an\n        electronic patient record.","bibo:AuthorList":["Morrison, Cecily"],"dc:date":"2010-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":3087,"sim:weight":0.572359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3102,"sim:weight":0.557961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98632,"sim:weight":0.523568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108074,"sim:weight":0.516237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.507681,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3100,"sim:weight":0.489392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":312612,"sim:weight":0.483015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3097,"sim:weight":0.474471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3091,"sim:weight":0.47148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.461111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18193,"sim:weight":0.449225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44852,"sim:weight":0.446807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48252,"sim:weight":0.443153,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3106,"sim:weight":0.441976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3094,"sim:weight":0.422582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9544234,"sim:weight":0.413905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":540,"sim:weight":0.395889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44390,"sim:weight":0.394239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101626,"sim:weight":0.389346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48270,"sim:weight":0.378295,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72014,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Controlling the dissemination and disclosure of\n        healthcare events","bibo:abstract":"Information is central to healthcare: for proper care,\n        information must be shared. Modern healthcare is highly\n        collaborative, involving interactions between users from a range\n        of institutions, including primary and secondary care providers,\n        researchers, government and private organisations. Each has\n        specific data requirements relating to the service they provide,\n        and must be informed of relevant information as it occurs.\n        \n        Personal health information is highly sensitive. Those who\n        collect/hold data as part of the care process are responsible\n        for protecting its confidentiality, in line with patient\n        consent, codes of practice and legislation. Ideally, one should\n        receive only that information necessary for the tasks they\n        perform—on a need-to-know basis.\n        \n        Healthcare requires mechanisms to strictly control information\n        dissemination. Many solutions fail to account for the scale and\n        heterogeneity of the environment. Centrally managed data\n        services impede the local autonomy of health institutions,\n        impacting security by diminishing accountability and increasing\n        the risks/impacts of incorrect disclosures. Direct, synchronous\n        (request-response) communication requires an enumeration of\n        every potential information source/sink. This is impractical\n        when considering health services at a national level. Healthcare\n        presents a data-driven environment highly amenable to an\n        event-based infrastructure, which can inform, update and alert\n        relevant parties of incidents as they occur. Event-based data\n        dissemination paradigms, while efficient and scalable, generally\n        lack the rigorous access control mechanisms required for health\n        infrastructure.\n        \n        This dissertation describes how publish/subscribe, an\n        asynchronous, push-based, many-to-many middleware communication\n        paradigm, is extended to include mechanisms for actively\n        controlling information disclosure. We present Interaction\n        Control: a data-control layer above a publish/subscribe service\n        allowing the definition of context-aware policy rules to\n        authorise information channels, transform information and\n        restrict data propagation according to the circumstances. As\n        dissemination policy is defined at the broker-level and enforced\n        by the middleware, client compliance is ensured. Although policy\n        enforcement involves extra processing, we show that in some\n        cases the control mechanisms can actually improve performance\n        over a general publish/subscribe implementation. We build\n        Interaction Control mechanisms into integrated database-brokers\n        to provide a rich representation of state; while facilitating\n        audit, which is essential for accountability.\n        \n        Healthcare requires the sharing of sensitive information across\n        federated domains of administrative control. Interaction Control\n        provides the means for balancing the competing concerns of\n        information sharing and protection. It enables those responsible\n        for information to meet their data management obligations,\n        through specification of fine-grained disclosure policy.","bibo:AuthorList":["Singh, Jatinder"],"dc:date":"2010-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70321,"sim:weight":0.479257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70445,"sim:weight":0.474888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":372982,"sim:weight":0.463869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69261,"sim:weight":0.458127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932135,"sim:weight":0.451631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69285,"sim:weight":0.446197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43998,"sim:weight":0.443479,"sim:AssociationMethod":"similarity_cosine"},{"identifier":810,"sim:weight":0.440589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102681,"sim:weight":0.421317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826954,"sim:weight":0.410524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.402013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69325,"sim:weight":0.401519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.399335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69283,"sim:weight":0.397041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930883,"sim:weight":0.395441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112,"sim:weight":0.392457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85849,"sim:weight":0.388221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70446,"sim:weight":0.387939,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41282,"sim:weight":0.372796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86045,"sim:weight":0.370603,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72016,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Kilim: A server framework with lightweight actors,\n        isolation types and zero-copy messaging","bibo:abstract":"Internet services are implemented as hierarchical aggregates of\n        communicating components: networks of data centers, networks of\n        clusters in a data center, connected servers in a cluster, and\n        multiple virtual machines on a server machine, each containing\n        several operating systems processes. This dissertation argues\n        for extending this structure to the intra-process level, with\n        networks of communicating actors. An actor is a single-threaded\n        state machine with a private heap and a thread of its own. It\n        communicates with other actors using well-defined and explicit\n        messaging protocols. Actors must be light enough to comfortably\n        match the inherent concurrency in the problem space, and to\n        exploit all available parallelism. Our aims are two-fold: (a) to\n        treat SMP systems as they really are: distributed systems with\n        eventual consistency, and (b) recognize from the outset that a\n        server is always part of a larger collection of communicating\n        components, thus eliminating the mindset mismatch between\n        concurrent programming and distributed programming.\n        \n        Although the actor paradigm is by no means new, our design\n        points are informed by drawing parallels between the macro and\n        micro levels. As with components in a distributed system, we\n        expect that actors must be isolatable in a number of ways:\n        memory isolation, fault isolation, upgrade isolation, and\n        execution isolation. The application should be able to have a\n        say in actor placement and scheduling, and actors must be easily\n        monitorable.\n        \n        Our primary contribution is in showing that these requirements\n        can be satisfied in a language and environment such as Java,\n        without changes to the source language or to the virtual\n        machine, and without leaving much of the idiomatic ambit of\n        Java, with its mindset of pointers and mutable state. In other\n        words, one does not have to move to a concurrency-oriented\n        language or to an entirely immutable object paradigm.\n        \n        We demonstrate an open-source toolkit called Kilim that provides\n        (a) ultra-lightweight actors (faster and lighter than extant\n        environments such as Erlang), (b) a type system that guarantees\n        memory isolation between threads by separating internal objects\n        from exportable messages and by enforcing ownership and\n        structural constraints on the latter (linearity and\n        tree-structure, respectively) and, (c) a library with I/O\n        support and customizable synchronization constructs and\n        schedulers.\n        \n        We show that this solution is simpler to program than extant\n        solutions, yet statically guaranteed to be free of low-level\n        data races. It is also faster, more scalable and more stable (in\n        increasing scale) in two industrial strength evaluations:\n        interactive web services (comparing Kilim Web Server to Jetty)\n        and databases (comparing Berkeley DB to a Kilim variant of it).","bibo:AuthorList":["Srinivasan, Sriram"],"dc:date":"2010-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4892816,"sim:weight":0.536654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.499985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70207,"sim:weight":0.499082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.485884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.484621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.483616,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.471808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934219,"sim:weight":0.469178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.468239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.463161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934251,"sim:weight":0.458607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89999,"sim:weight":0.447638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43185,"sim:weight":0.441681,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.441068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931782,"sim:weight":0.436325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.435813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932276,"sim:weight":0.435583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.427452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69742,"sim:weight":0.427214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.426128,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72018,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Report on existing open-source electronic medical\n        records","bibo:abstract":"In this report we provide an overview of existing open-source\n        electronic medical records and assess them against the criteria\n        established by the EViDence group.","bibo:AuthorList":["Morrison, Cecily","Iosif, Adona","Danka, Miklos"],"dc:date":"2010-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.463342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.42851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.39461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.383665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385778,"sim:weight":0.355989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933571,"sim:weight":0.349837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933572,"sim:weight":0.349837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707694,"sim:weight":0.31638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2732135,"sim:weight":0.304884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104176,"sim:weight":0.283848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15645,"sim:weight":0.269963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":222019,"sim:weight":0.251742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15616,"sim:weight":0.23823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51076,"sim:weight":0.227802,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4157487,"sim:weight":0.196709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12701,"sim:weight":0.195143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930949,"sim:weight":0.172704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":60055,"sim:weight":0.172328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":113110,"sim:weight":0.159275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18029,"sim:weight":0.15556,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72020,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Ising model of rumour spreading in interacting\n        communities","bibo:abstract":"We report a preliminary investigation on interactions between\n        communities in a complex network using the Ising model to\n        analyse the spread of information among real communities. The\n        inner opinion of a given community is forced to change through\n        the introduction of a unique external source and we analyse how\n        the other communities react to this change. We model two\n        conceptual external sources: namely, “Strong-belief”, and\n        “propaganda”, by an infinitely strong inhomogeneous external\n        field and a finite uniform external field, respectively. In the\n        former case, the community changes independently from other\n        communities while in the latter case according also to\n        interactions with the other communities. We apply our model to\n        synthetic networks as well as various real world data ranging\n        from human physical contact networks to online social networks.\n        The experimental results using real world data clearly\n        demonstrate two distinct scenarios of phase transitions\n        characterised by the presence of strong memory effects when the\n        graph and coupling parameters are above a critical threshold.","bibo:AuthorList":["Ostilli, Massimo","Yoneki, Eiko","Leung, Ian X. Y.","Mendes, Jose F. F.","Lió, Pietro","Crowcroft, Jon"],"dc:date":"2010-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":68122,"sim:weight":0.336027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.335608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.321869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568724,"sim:weight":0.319258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1634050,"sim:weight":0.317166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.301598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381886,"sim:weight":0.236032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1509795,"sim:weight":0.221627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.205036,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101444,"sim:weight":0.199324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.199304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929903,"sim:weight":0.198072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447666,"sim:weight":0.192564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2779656,"sim:weight":0.18948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102738,"sim:weight":0.186023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.184973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.184973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.184973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.184973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.184973,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72022,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Towards robust inexact geometric computation","bibo:abstract":"Geometric algorithms implemented using rounded arithmetic are\n        prone to robustness problems. Geometric algorithms are often a\n        mix of arithmetic and combinatorial computations, arising from\n        the need to create geometric data structures that are themselves\n        a complex mix of numerical and combinatorial data. Decisions\n        that influence the topology of a geometric structure are made on\n        the basis of certain arithmetic calculations, but the\n        inexactness of these calculations may lead to inconsistent\n        decisions, causing the algorithm to produce a topologically\n        invalid result or to fail catastrophically. The research\n        reported here investigates ways to produce robust algorithms\n        with inexact computation.\n        \n        I present two algorithms for operations on piecewise linear\n        (polygonal/polyhedral) shapes. Both algorithms are topologically\n        robust, meaning that they are guaranteed to generate a\n        topologically valid result from a topologically valid input,\n        irrespective of numerical errors in the computations. The first\n        algorithm performs the Boolean operation in 3D, and also in 2D.\n        The main part of this algorithm is a series of interdependent\n        operations. The relationship between these operations ensures a\n        consistency in these operations, which, I prove, guarantees the\n        generation of a shape representation with valid topology. The\n        basic algorithm may generate geometric artifacts such as gaps\n        and slivers, which generally can be removed by a data-smoothing\n        post-process. The second algorithm presented performs\n        simplification in 2D, converting a geometrically invalid (but\n        topologically valid) shape representation into one that is fully\n        valid. This algorithm is based on a variant of the\n        Bentley-Ottmann sweep line algorithm, but with additional rules\n        to handle situations not possible under an exact implementation.\n        \n        Both algorithms are presented in the context of what is required\n        of an algorithm in order for it to be classed as robust in some\n        sense. I explain why the formulaic approach used for the Boolean\n        algorithm cannot readily be used for the simplification process.\n        I also give essential code details for a C++ implementation of\n        the 2D simplification algorithm, and discuss the results of\n        extreme tests designed to show up any problems. Finally, I\n        discuss floating-point arithmetic, present error analysis for\n        the floating-point computation of the intersection point between\n        two segments in 2D, and discuss how such errors affect both the\n        simplification algorithm and the basic Boolean algorithm in 2D.","bibo:AuthorList":["Smith, Julian M."],"dc:date":"2009-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":22232,"sim:weight":0.455598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18562,"sim:weight":0.445813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45639,"sim:weight":0.42257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71329,"sim:weight":0.411685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":794049,"sim:weight":0.405724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930365,"sim:weight":0.400119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000332,"sim:weight":0.396311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1654664,"sim:weight":0.396189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18295,"sim:weight":0.393983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87889,"sim:weight":0.356775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16982,"sim:weight":0.355551,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20752,"sim:weight":0.355339,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934273,"sim:weight":0.353523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381989,"sim:weight":0.353096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20142,"sim:weight":0.351896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019254,"sim:weight":0.348151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826831,"sim:weight":0.344797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998620,"sim:weight":0.34421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749093,"sim:weight":0.340303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98638,"sim:weight":0.337621,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72024,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Formal verification of machine-code programs","bibo:abstract":"Formal program verification provides mathematical means of\n        increasing assurance for the correctness of software. Most\n        approaches to program verification are either fully automatic\n        and prove only weak properties, or alternatively are manual and\n        labour intensive to apply; few target realistically modelled\n        machine code. The work presented in this dissertation aims to\n        ease the effort required in proving properties of programs on\n        top of detailed models of machine code. The contributions are\n        novel approaches for both verification of existing programs and\n        methods for automatically constructing correct code.\n        \n        For program verification, this thesis presents a new approach\n        based on translation: the problem of proving properties of\n        programs is reduced, via fully-automatic deduction, to a problem\n        of proving properties of recursive functions. The translation\n        from programs to recursive functions is shown to be\n        implementable in a theorem prover both for simple while-programs\n        as well as real machine code. This\n        verification-after-translation approach has several advantages\n        over established approaches of verification condition\n        generation. In particular, the new approach does not require\n        annotating the program with assertions. More importantly, the\n        proposed approach separates the verification proof from the\n        underlying model so that specific resource names, some\n        instruction orderings and certain control-flow structures become\n        irrelevant. As a result proof reuse is enabled to a greater\n        extent than in currently used methods. The scalability of this\n        new approach is illustrated through the verification of ARM, x86\n        and PowerPC implementations of a copying garbage collector.\n        \n        For construction of correct code this thesis presents a new\n        compiler which maps functions from logic, via proof, down to\n        multiple carefully modelled commercial machine languages. Unlike\n        previously published work on compilation from higher-order\n        logic, this compiler allows input functions to be partially\n        specified and supports a broad range of user-defined extensions.\n        These features enabled the production of formally verified\n        machine-code implementations of a LISP interpreter, as a case\n        study.\n        \n        The automation and proofs have been implemented in the HOL4\n        theorem prover, using a new machine-code Hoare triple\n        instantiated to detailed specifications of ARM, x86 and PowerPC\n        instruction set architectures.","bibo:AuthorList":["Myreen, Magnus O."],"dc:date":"2009-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934003,"sim:weight":0.444926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.385345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.348862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.335245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.326577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.314906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934096,"sim:weight":0.313712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.297645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57391,"sim:weight":0.285913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932022,"sim:weight":0.281474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934773,"sim:weight":0.280221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.278406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933898,"sim:weight":0.272709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931563,"sim:weight":0.269895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.269199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.263151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.260661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707945,"sim:weight":0.258468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43185,"sim:weight":0.258229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.257699,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72026,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Statistical anaphora resolution in biomedical\n        texts","bibo:abstract":"This thesis presents a study of anaphora in biomedical\n        scientific literature and focuses on tackling the problem of\n        anaphora resolution in this domain. Biomedical literature has\n        been the focus of many information extraction projects; there\n        are, however, very few works on anaphora resolution in\n        biomedical scientific full-text articles. Resolving anaphora is\n        an important step in the identification of mentions of\n        biomedical entities about which information could be extracted.\n        \n        We have identified coreferent and associative anaphoric\n        relations in biomedical texts. Among associative relations we\n        were able to distinguish 3 main types: biotype, homolog and\n        set-member relations. We have created a corpus of biomedical\n        articles that are annotated with anaphoric links between noun\n        phrases referring to biomedical entities of interest. Such noun\n        phrases are typed according to a scheme that we have developed\n        based on the Sequence Ontology; it distinguishes 7 types of\n        entities: gene, part of gene, product of gene, part of product,\n        subtype of gene, supertype of gene and gene variant.\n        \n        We propose a probabilistic model for the resolution of anaphora\n        in biomedical texts. The model seeks to find the antecedents of\n        anaphoric expressions, both coreferent and associative, and also\n        to identify discourse-new expressions. The model secures good\n        performance despite being trained on a small corpus: it achieves\n        55-73% precision and 57-63% recall on coreferent cases, and\n        reasonable performance on different classes of associative\n        cases. We compare the performance of the model with a rule-based\n        baseline system that we have also developed, a naive Bayes\n        system and a decision trees system, showing that the ours\n        outperforms the others.\n        \n        We have experimented with active learning in order to select\n        training samples to improve the performance of our probabilistic\n        model. It was not, however, more successful than random\n        sampling.","bibo:AuthorList":["Gasperin, Caroline V."],"dc:date":"2009-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":240931,"sim:weight":0.607742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.4675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276584,"sim:weight":0.435666,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708237,"sim:weight":0.420612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112279,"sim:weight":0.410352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":82006,"sim:weight":0.382653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18542,"sim:weight":0.366543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2034,"sim:weight":0.355685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937414,"sim:weight":0.354081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50967,"sim:weight":0.350754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51200,"sim:weight":0.343002,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.333803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826729,"sim:weight":0.324915,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5111,"sim:weight":0.312703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18877,"sim:weight":0.309045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16072,"sim:weight":0.298796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826730,"sim:weight":0.291401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18541,"sim:weight":0.289148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647928,"sim:weight":0.287359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21270,"sim:weight":0.27932,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72028,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Security for volatile FPGAs","bibo:abstract":"With reconfigurable devices fast becoming complete systems in\n        their own right, interest in their security properties has\n        increased. While research on “FPGA security” has been active\n        since the early 2000s, few have treated the field as a whole, or\n        framed its challenges in the context of the unique FPGA usage\n        model and application space. This dissertation sets out to\n        examine the role of FPGAs within a security system and how\n        solutions to security challenges can be provided. I offer the\n        following contributions:\n        \n        I motivate authenticating configurations as an additional\n        capability to FPGA configuration logic, and then describe a\n        flexible security protocol for remote reconfiguration of\n        FPGA-based systems over insecure networks. Non-volatile memory\n        devices are used for persistent storage when required, and\n        complement the lack of features in some FPGAs with tamper\n        proofing in order to maintain specified security properties. A\n        unique advantage of the protocol is that it can be implemented\n        on some existing FPGAs (i.e., it does not require FPGA vendors\n        to add functionality to their devices). Also proposed is a\n        solution to the “IP distribution problem” where designs from\n        multiple sources are integrated into a single bitstream, yet\n        must maintain their confidentiality.\n        \n        I discuss the difficulty of reproducing and comparing FPGA\n        implementation results reported in the academic literature.\n        Concentrating on cryptographic implementations, problems are\n        demonstrated through designing three architecture-optimized\n        variants of the AES block cipher and analyzing the results to\n        show that single figures of merit, namely “throughput” or\n        “throughput per slice”, are often meaningless without the\n        context of an application. To set a precedent for\n        reproducibility in our field, the HDL source code, simulation\n        testbenches and compilation instructions are made publicly\n        available for scrutiny and reuse.\n        \n        Finally, I examine payment systems as ubiquitous embedded\n        devices, and evaluate their security vulnerabilities as they\n        interact in a multi-chip environment. Using FPGAs as an\n        adversarial tool, a man-in-the-middle attack against these\n        devices is demonstrated. An FPGA-based defense is also\n        demonstrated: the first secure wired “distance bounding”\n        protocol implementation. This is then put in the context of\n        securing reconfigurable systems.","bibo:AuthorList":["Drimer, Saar"],"dc:date":"2009-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998856,"sim:weight":0.570433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1000092,"sim:weight":0.498575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80587,"sim:weight":0.477425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766185,"sim:weight":0.47725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764400,"sim:weight":0.457088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71066,"sim:weight":0.450925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.447297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778563,"sim:weight":0.443574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19365,"sim:weight":0.439144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793312,"sim:weight":0.435622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53962,"sim:weight":0.430584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691218,"sim:weight":0.428733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.42864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003789,"sim:weight":0.425198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53958,"sim:weight":0.423905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53966,"sim:weight":0.422783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902596,"sim:weight":0.417218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1136549,"sim:weight":0.413848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102540,"sim:weight":0.408725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49977,"sim:weight":0.404979,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72030,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Resource provisioning for virtualized server\n        applications","bibo:abstract":"Data centre virtualization creates an agile environment for\n        application deployment. Applications run within one or more\n        virtual machines and are hosted on various servers throughout\n        the data centre. One key mechanism provided by modern\n        virtualization technologies is dynamic resource allocation.\n        Using this technique virtual machines can be allocated resources\n        as required and therefore, occupy only the necessary resources\n        for their hosted application. In fact, two of the main\n        challenges faced by contemporary data centres, server\n        consolidation and power saving, can be tackled efficiently by\n        capitalising on this mechanism.\n        \n        This dissertation shows how to dynamically adjust the CPU\n        resources allocated to virtualized server applications in the\n        presence of workload fluctuations. In particular it employs a\n        reactive approach to resource provisioning based on feedback\n        control and introduces five novel controllers. All five\n        controllers adjust the application allocations based on past\n        utilisation observations.\n        \n        A subset of the controllers integrate the Kalman filtering\n        technique to track the utilisations and based on which they\n        predict the allocations for the next interval. This approach is\n        particularly attractive for the resource management problem\n        since the Kalman filter uses the evolution of past utilisations\n        to adjust the allocations. In addition, the adaptive Kalman\n        controller which adjusts its parameters online and dynamically\n        estimates the utilisation dynamics, is able to differentiate\n        substantial workload changes from small fluctuations for unknown\n        workloads.\n        \n        In addition, this dissertation captures, models, and builds\n        controllers based on the CPU resource coupling of application\n        components. In the case of multi-tier applications, these\n        controllers collectively allocate resources to all application\n        tiers detecting saturation points across components. This\n        results in them acting faster to workload variations than their\n        single-tier counterparts.\n        \n        All controllers are evaluated against the Rubis benchmark\n        application deployed on a prototype virtualized cluster built\n        for this purpose.","bibo:AuthorList":["Kalyvianaki, Evangelia"],"dc:date":"2009-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1009450,"sim:weight":0.48477,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19832,"sim:weight":0.466932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019057,"sim:weight":0.391953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19831,"sim:weight":0.362873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":989154,"sim:weight":0.34592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058009,"sim:weight":0.329558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1061263,"sim:weight":0.318832,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.281376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1108379,"sim:weight":0.224986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.205241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":113914,"sim:weight":0.194837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.192347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.18222,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.179246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48355,"sim:weight":0.16951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932184,"sim:weight":0.168885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.168143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.159044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.159044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.159044,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72032,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Programming networks of vehicles","bibo:abstract":"As computers become smaller in size and advances in\n        communications technology are made, we hypothesise that a new\n        range of applications involving computing in road vehicles will\n        emerge. These applications may be enabled by the future arrival\n        of general-purpose computing platforms in vehicles. Many of\n        these applications will involve the collection, processing and\n        distribution of data sampled by sensors on large numbers of\n        vehicles. This dissertation is primarily concerned with\n        addressing how these applications can be designed and\n        implemented by programmers.\n        \n        We explore how a vehicular sensor platform may be built and how\n        data from a variety of sensors can be sampled and stored.\n        Applications exploiting such platforms will infer higher-level\n        information from the raw sensor data collected. We present the\n        design and implementation of one such application which involves\n        processing vehicles’ location histories into an up-to-date road\n        map.\n        \n        Our experience shows that there is a problem with programming\n        this kind of application: the number of vehicles and the nature\n        of computational infrastructure available are not known until\n        the application is executed. By comparison, existing approaches\n        to programming applications in wireless sensor networks tend to\n        assume that the nature of the network architecture is known at\n        design-time. This is not an appropriate assumption to make in\n        vehicular sensor networks. Instead, this dissertation proposes\n        that the functionality of applications is designed and\n        implemented at a higher level and the problem of deciding how\n        and where its components are to be executed is left to a\n        compiler. We call this ‘late physical binding’.\n        \n        This approach brings the benefit that applications can be\n        automatically adapted and optimised for execution in a wide\n        range of environments. We describe a suite of transformations\n        which can change the order in which components of the program\n        are executed whilst preserving its semantic integrity. These\n        transformations may affect several of the application’s\n        characteristics such as its execution time or energy\n        consumption.\n        \n        The practical utility of this approach is demonstrated through a\n        novel programming language based on Java. Two examples of\n        diverse applications are presented which demonstrate that the\n        language and compiler can be used to create non-trivial\n        applications. Performance measurements show that the compiler\n        can introduce parallelism to make more efficient use of\n        resources and reduce an application’s execution time. One of the\n        applications belongs to a class of distributed systems beyond\n        merely processing vehicular sensor data, suggesting that the\n        late physical binding paradigm has broader application to other\n        areas of distributed computing.","bibo:AuthorList":["Davies, Jonathan J."],"dc:date":"2009-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":800134,"sim:weight":0.464387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70118,"sim:weight":0.459638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932429,"sim:weight":0.456249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.455152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.450109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70117,"sim:weight":0.447672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930880,"sim:weight":0.442416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69292,"sim:weight":0.438613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932626,"sim:weight":0.430472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.430188,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.429821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.428929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70119,"sim:weight":0.427025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":177191,"sim:weight":0.425253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70206,"sim:weight":0.424459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70114,"sim:weight":0.423042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931813,"sim:weight":0.422211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70207,"sim:weight":0.421338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008800,"sim:weight":0.419521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930501,"sim:weight":0.418329,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72035,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Radical innovation: crossing knowledge boundaries with\n        interdisciplinary teams","bibo:abstract":"Interdisciplinary innovation arises from the positive effects\n        that result when stepping across the social boundaries that we\n        structure knowledge by. Those boundaries include academic\n        disciplines, government departments, companies’ internal\n        functions, companies and sectors, and the boundaries between\n        these domains. In the knowledge economy, it is often the case\n        that the right knowledge to solve a problem is in a different\n        place to the problem itself, so interdisciplinary innovation is\n        an essential tool for the future. There are also many problems\n        today that need more than one kind of knowledge to solve them,\n        so interdisciplinary innovation is also an essential tool for\n        the challenging problems of today.\n        \n        This report presents the results of an in-depth study into\n        successful interdisciplinary innovation, focusing on the\n        personal experiences of the people who achieve it. It is\n        complementary to organisational research, and to research on the\n        economic impact of innovation, but has primarily adopted\n        perspectives and methods from other disciplines. Instead, this\n        report has been developed by a team that is itself\n        interdisciplinary, with a particular focus on anthropology,\n        design research, and strategic policy. It also draws on reports\n        from expert witnesses and invited commentators in many other\n        fields.","bibo:AuthorList":["Blackwell, Alan F.","Wilson, Lee","Street, Alice","Boulton, Charles","Knell, John"],"dc:date":"2009-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":684257,"sim:weight":0.468119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4162107,"sim:weight":0.459975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88939,"sim:weight":0.420326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.412973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45075,"sim:weight":0.409861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2754878,"sim:weight":0.392523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383440,"sim:weight":0.392288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383665,"sim:weight":0.385692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44304,"sim:weight":0.379494,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48340,"sim:weight":0.370813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":90465,"sim:weight":0.37066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999507,"sim:weight":0.369969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99976,"sim:weight":0.365988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381972,"sim:weight":0.36239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1632272,"sim:weight":0.351486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48252,"sim:weight":0.350706,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45332,"sim:weight":0.315045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278571,"sim:weight":0.307785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98643,"sim:weight":0.302343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9599930,"sim:weight":0.29504,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72037,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Logics and analyses for concurrent heap-manipulating\n        programs","bibo:abstract":"Reasoning about concurrent programs is difficult because of the\n        need to consider all possible interactions between concurrently\n        executing threads. The problem is especially acute for programs\n        that manipulate shared heap-allocated data structures, since\n        heap-manipulation provides more ways for threads to interact.\n        Modular reasoning techniques sidestep this difficulty by\n        considering every thread in isolation under some assumptions on\n        its environment.\n        \n        In this dissertation we develop modular program logics and\n        program analyses for the verification of concurrent\n        heap-manipulating programs. Our approach is to exploit reasoning\n        principles provided by program logics to construct modular\n        program analyses and to use this process to obtain further\n        insights into the logics. In particular, we build on concurrent\n        separation logic—a Hoare-style logic that allows modular manual\n        reasoning about concurrent programs written in a simple\n        heap-manipulating programming language.\n        \n        Our first contribution is to show the soundness of concurrent\n        separation logic without the conjunction rule and the\n        restriction that resource invariants be precise, and to\n        construct an analysis for concurrent heap-manipulating programs\n        that exploits this modified reasoning principle to achieve\n        modularity. The analysis can be used to automatically verify a\n        number of safety properties, including memory safety,\n        data-structure integrity, data-race freedom, the absence of\n        memory leaks, and the absence of assertion violations. We show\n        that we can view the analysis as generating proofs in our\n        variant of the logic, which enables the use of its results in\n        proof-carrying code or theorem proving systems.\n        \n        Reasoning principles expressed by program logics are most often\n        formulated for only idealised programming constructs. Our second\n        contribution is to develop logics and analyses for modular\n        reasoning about features present in modern languages and\n        libraries for concurrent programming: storable locks (i.e.,\n        locks dynamically created and destroyed in the heap),\n        first-order procedures, and dynamically-created threads.","bibo:AuthorList":["Gotsman, Alexey"],"dc:date":"2009-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931563,"sim:weight":0.423926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931527,"sim:weight":0.416607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.410039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.405794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934464,"sim:weight":0.396959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931534,"sim:weight":0.392581,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9767,"sim:weight":0.355418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43083,"sim:weight":0.35004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1511982,"sim:weight":0.342649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997558,"sim:weight":0.340684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.339219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.315536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.306753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934227,"sim:weight":0.300693,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931588,"sim:weight":0.293252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934488,"sim:weight":0.29111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.268862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277356,"sim:weight":0.264389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931628,"sim:weight":0.259621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.243426,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72039,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Improving cache performance by runtime data\n        movement","bibo:abstract":"The performance of a recursive data structure (RDS) increasingly\n        depends on good data cache behaviour, which may be improved by\n        software/hardware prefetching or by ensuring that the RDS has a\n        good data layout. The latter is harder but more effective, and\n        requires solving two separate problems: firstly ensuring that\n        new RDS nodes are allocated in a good location in memory, and\n        secondly preventing a degradation in layout when the RDS changes\n        shape due to pointer updates.\n        \n        The first problem has been studied in detail, but only two major\n        classes of solutions to the second exist. Layout degradation may\n        be side-stepped by using a ‘cache-aware’ RDS, one designed to\n        have inherently good cache behaviour (e.g. using a B-Tree in\n        place of a binary search tree), but such structures are\n        difficult to devise and implement. A more automatic solution in\n        some languages is to use a ‘layout-improving’ garbage collector,\n        which attempt to improve heap data layout during collection\n        using online profiling of data access patterns. This may carry\n        large performance, memory and latency overheads.\n        \n        In this thesis we investigate the insertion of code into a\n        program which attempts to move RDS nodes at runtime to prevent\n        or reduce layout degradation. Such code affects only the\n        performance of a program not its semantics. The body of this\n        thesis is a thorough and systematic evaluation of three\n        different forms of data movement. The first method adapts\n        existing work on static RDS data layout, performing ad-hoc\n        single node movements at a program’s pointer-update sites, which\n        is simple to apply and effective in practice, but the\n        performance gain may be hard to predict. The second method\n        performs infrequent movement of larger groups of nodes,\n        borrowing techniques from garbage collection but also embedding\n        data movement in existing traversals of the RDS; the benefit of\n        performing additional data movement to compact the heap is also\n        demonstrated. The third method restores a pre-chosen layout\n        after each RDS pointer update, which is a complex but effective\n        technique, and may be viewed both as an optimisation and as a\n        way of synthesising new cache-aware RDSs.\n        \n        Concentrating on both maximising performance while minimising\n        latency and extra memory usage, two fundamental RDSs are used\n        for the investigation, representative of two common data access\n        patterns (linear and branching). The methods of this thesis\n        compare favourably to upper bounds on performance and to the\n        canonical cache-aware solutions. This thesis shows the value of\n        runtime data movement, and as well as producing optimisation\n        useful in their own right may be used to guide the design of\n        future cache-aware RDSs and layout-improving garbage collectors.","bibo:AuthorList":["Adcock, Mark"],"dc:date":"2009-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":15967,"sim:weight":0.376976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276583,"sim:weight":0.300317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116497,"sim:weight":0.261052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.252917,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278780,"sim:weight":0.248617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.226564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336567,"sim:weight":0.219668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.214041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.213753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.211896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.204806,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.1875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276586,"sim:weight":0.187258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.182326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.179884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.179016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77475,"sim:weight":0.178856,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.177329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.17661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.175314,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72041,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Analysis of the Internet’s structural\n        evolution","bibo:abstract":"In this paper we study the structural evolution of the AS\n        topology as inferred from two different datasets over a period\n        of seven years. We use a variety of topological metrics to\n        analyze the structural differences revealed in the AS topologies\n        inferred from the two different datasets. In particular, to\n        focus on the evolution of the relationship between the core and\n        the periphery, we make use of the weighted spectral\n        distribution.\n        \n        We find that the traceroute dataset has increasing difficulty in\n        sampling the periphery of the AS topology, largely due to\n        limitations inherent to active probing. Such a dataset has too\n        limited a view to properly observe topological changes at the\n        AS-level compared to a dataset largely based on BGP data. We\n        also highlight limitations in current measurements that require\n        a better sampling of particular topological properties of the\n        Internet. Our results indicate that the Internet is changing\n        from a core-centered, strongly customer-provider oriented,\n        disassortative network, to a soft-hierarchical,\n        peering-oriented, assortative network.","bibo:AuthorList":["Haddadi, Hamed","Fay, Damien","Uhlig, Steve","Moore, Andrew W.","Mortier, Richard","Jamakovic, Almerima"],"dc:date":"2009-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":68122,"sim:weight":0.32846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.312374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.311341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017995,"sim:weight":0.298417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1384116,"sim:weight":0.291286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.283555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.262543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335622,"sim:weight":0.255111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16050,"sim:weight":0.219894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549802,"sim:weight":0.206839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.204178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":270448,"sim:weight":0.196218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46815,"sim:weight":0.188352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107698,"sim:weight":0.186573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933695,"sim:weight":0.184265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931784,"sim:weight":0.182517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102396,"sim:weight":0.18227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929903,"sim:weight":0.176475,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18916,"sim:weight":0.173256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.173246,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72042,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Skin-detached surface for interactive large mesh\n        editing","bibo:abstract":"We propose a method for interactive deformation of large\n        detailed meshes. Our method allows the users to manipulate the\n        mesh directly using freely-selected handles on the mesh. To best\n        preserve surface details, we introduce a new surface\n        representation, the skin-detached surface. It represents a\n        detailed surface model as a peeled “skin” added over a\n        simplified surface model. The “skin” contains the details of the\n        surface while the simplified mesh maintains the basic shape. The\n        deformation process consists of three steps: At the mesh loading\n        stage, the “skin” is precomputed according to the detailed mesh\n        and detached from the simplified mesh. Then we deform the\n        simplified mesh following the nonlinear gradient domain mesh\n        editing approach to satisfy the handle position constraints.\n        Finally the detailed “skin” is remapped onto the simplified\n        mesh, resulting in a deformed detailed mesh. We investigate the\n        advantages as well as the limitations of our method by\n        implementing a prototype system and applying it to several\n        examples.","bibo:AuthorList":["Gao, Yujian","Hao, Aimin","Zhao, Qinping","Dodgson, Neil A."],"dc:date":"2009-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":44411,"sim:weight":0.515589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43138,"sim:weight":0.399062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109200,"sim:weight":0.390455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.377783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.373565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43175,"sim:weight":0.330913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397942,"sim:weight":0.293328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43087,"sim:weight":0.286325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47659,"sim:weight":0.280535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43397,"sim:weight":0.277519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":316060,"sim:weight":0.269757,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1634695,"sim:weight":0.266144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.264378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":274753,"sim:weight":0.253294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101278,"sim:weight":0.237204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.227888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.211938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.197042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43073,"sim:weight":0.195472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.192234,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72044,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Understanding scam victims: seven principles for systems\n        security","bibo:abstract":"The success of many attacks on computer systems can be traced\n        back to the security engineers not understanding the psychology\n        of the system users they meant to protect. We examine a variety\n        of scams and “short cons” that were investigated, documented and\n        recreated for the BBC TV programme The Real Hustle and we\n        extract from them some general principles about the recurring\n        behavioural patterns of victims that hustlers have learnt to\n        exploit.\n        \n        We argue that an understanding of these inherent “human factors”\n        vulnerabilities, and the necessity to take them into account\n        during design rather than naïvely shifting the blame onto the\n        “gullible users”, is a fundamental paradigm shift for the\n        security engineer which, if adopted, will lead to stronger and\n        more resilient systems security.","bibo:AuthorList":["Stajano, Frank","Wilson, Paul"],"dc:date":"2009-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":99066,"sim:weight":0.544696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.504688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382006,"sim:weight":0.503431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99435,"sim:weight":0.459916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99217,"sim:weight":0.457485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98987,"sim:weight":0.453755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44643,"sim:weight":0.445814,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27201,"sim:weight":0.444457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.441737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.427766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382037,"sim:weight":0.409796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48343,"sim:weight":0.403437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45186,"sim:weight":0.403182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46835,"sim:weight":0.38929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383850,"sim:weight":0.386933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48252,"sim:weight":0.38598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47179,"sim:weight":0.364317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46714,"sim:weight":0.362175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98480,"sim:weight":0.355224,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382085,"sim:weight":0.34556,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72046,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Carbon: trusted auditing for P2P distributed virtual\n        environments","bibo:abstract":"Many Peer-to-Peer Distributed Virtual Environments (P2P DVE’s)\n        have been proposed, but none are widely deployed. One\n        significant barrier to deployment is lack of security. This\n        paper presents Carbon, a trusted auditing system for P2P DVE’s\n        which provides reasonable security with low per-client overhead.\n        DVE’s using Carbon perform offline auditing to evaluate DVE\n        client correctness. Carbon audits can be used to catch DVE\n        clients which break DVE rules – cheaters – so the DVE can punish\n        them. We analyze the impact of applying Carbon to a peer-to-peer\n        game with attributes similar to World of Warcraft. We show that\n        99.9% of cheaters – of a certain profile – can be caught with\n        guided auditing and 2.3% bandwidth overhead, or 100% of cheaters\n        can be caught with exhaustive auditing and 27% bandwidth\n        overhead. The surprisingly low overhead for exhaustive auditing\n        is the result of the small payload in most DVE packet updates,\n        compared to the larger aggregate payloads in audit messages.\n        Finally, we compare Carbon to PeerReview, and show that for DVE\n        scenarios Carbon consumes significantly less resources – in\n        typical cases by an order of magnitude – while sacrificing\n        little protection.","bibo:AuthorList":["Miller, John L.","Crowcroft, Jon"],"dc:date":"2009-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":707135,"sim:weight":0.265755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000441,"sim:weight":0.242803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933285,"sim:weight":0.217231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.202544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.199972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.196594,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.195745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108914,"sim:weight":0.190497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549812,"sim:weight":0.180761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884415,"sim:weight":0.144669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.139197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100616,"sim:weight":0.138254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100491,"sim:weight":0.132409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.127458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1640334,"sim:weight":0.123137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.12092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.120524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.117691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.111812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.109154,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72048,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Security of proximity identification systems","bibo:abstract":"RFID technology is the prevalent method for implementing\n        proximity identification in a number of security sensitive\n        applications. The perceived proximity of a token serves as a\n        measure of trust and is often used as a basis for granting\n        certain privileges or services. Ensuring that a token is located\n        within a specified distance of the reader is therefore an\n        important security requirement. In the case of high-frequency\n        RFID systems the limited operational range of the near-field\n        communication channel is accepted as implicit proof that a token\n        is in close proximity to a reader. In some instances, it is also\n        presumed that this limitation can provide further security\n        services.\n        \n        The first part of this dissertation presents attacks against\n        current proximity identification systems. It documents how\n        eavesdropping, skimming and relay attacks can be implemented\n        against HF RFID systems. Experimental setups and practical\n        results are provided for eavesdropping and skimming attacks\n        performed against RFID systems adhering to the ISO 14443 and ISO\n        15693 standards. These attacks illustrate that the limited\n        operational range cannot prevent unauthorised access to stored\n        information on the token, or ensure that transmitted data\n        remains confidential. The practical implementation of passive\n        and active relay attacks against an ISO 14443 RFID system is\n        also described. The relay attack illustrates that proximity\n        identification should not rely solely on the physical\n        characteristics of the communication channel, even if it could\n        be shown to be location-limited. As a result, it is proposed\n        that additional security measures, such as distance-bounding\n        protocols, should be incorporated to verify proximity claims. A\n        new method, using cover noise, is also proposed to make the\n        backward communication channel more resistant to eavesdropping\n        attacks.\n        \n        The second part of this dissertation discusses distance-bounding\n        protocols. These protocols determine an upper bound for the\n        physical distance between two parties. A detailed survey of\n        current proposals, investigating their respective merits and\n        weaknesses, identifies general principles governing secure\n        distance-bounding implementations. It is practically shown that\n        an attacker can circumvent the distance bound by implementing\n        attacks at the packet and physical layer of conventional\n        communication channels. For this reason the security of a\n        distance bound depends not only on the cryptographic protocol,\n        but also on the time measurement provided by the underlying\n        communication. Distance-bounding protocols therefore require\n        special channels. Finally, a new distance-bounding protocol and\n        a practical implementation of a suitable distance-bounding\n        channel for HF RFID systems are proposed.","bibo:AuthorList":["Hancke, Gerhard P."],"dc:date":"2009-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70145,"sim:weight":0.419912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390236,"sim:weight":0.406629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766740,"sim:weight":0.391011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.390435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.387145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184403,"sim:weight":0.382925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":943429,"sim:weight":0.380093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91442,"sim:weight":0.366792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390229,"sim:weight":0.33963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041272,"sim:weight":0.333154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.328024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026302,"sim:weight":0.326648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933779,"sim:weight":0.326156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617518,"sim:weight":0.325174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116755,"sim:weight":0.322109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23406,"sim:weight":0.318912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8780061,"sim:weight":0.316995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.315771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932626,"sim:weight":0.31564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.315076,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72050,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Nominal domain theory for concurrency","bibo:abstract":"Domain theory provides a powerful mathematical framework for\n        describing sequential computation, but the traditional tools of\n        domain theory are inapplicable to concurrent computation.\n        Without a general mathematical framework it is hard to compare\n        developments and approaches from different areas of study,\n        leading to time and effort wasted in rediscovering old ideas in\n        new situations.\n        \n        A possible remedy to this situation is to build a denotational\n        semantics based directly on computation paths, where a process\n        denotes the set of paths that it may follow. This has been shown\n        to be a remarkably powerful idea, but it lacks certain\n        computational features. Notably, it is not possible to express\n        the idea of names and name-generation within this simple path\n        semantics.\n        \n        Nominal set theory is a non-standard mathematical foundation\n        that captures the notion of names in a general way. Building a\n        mathematical development on top of nominal set theory has the\n        effect of incorporating names into its fabric at a low level.\n        Importantly, nominal set theory is sufficiently close to\n        conventional foundations that it is often straightforward to\n        transfer intuitions into the nominal setting.\n        \n        Here the original path-based domain theory for concurrency is\n        developed within nominal set theory, which has the effect of\n        systematically adjoining name-generation to the model. This\n        gives rise to an expressive metalanguage, Nominal HOPLA, which\n        supports a notion of name-generation. Its denotational semantics\n        is given entirely in terms of universal constructions on\n        domains. An operational semantics is also presented, and\n        relationships between the denotational and operational\n        descriptions are explored.\n        \n        The generality of this approach to including name generation\n        into a simple semantic model indicates that it will be possible\n        to apply the same techniques to more powerful domain theories\n        for concurrency, such as those based on presheaves.","bibo:AuthorList":["Turner, David C."],"dc:date":"2009-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934327,"sim:weight":0.468898,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.458481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98983,"sim:weight":0.450746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19260,"sim:weight":0.434444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.414781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.405906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000277,"sim:weight":0.394353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47235,"sim:weight":0.390781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934469,"sim:weight":0.380389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.371559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103606,"sim:weight":0.371039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385348,"sim:weight":0.369538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934473,"sim:weight":0.369313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934455,"sim:weight":0.36512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19321,"sim:weight":0.362638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19256,"sim:weight":0.362081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19323,"sim:weight":0.358504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.357828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934348,"sim:weight":0.353427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.347993,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72052,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"AtoZ: an automatic traffic organizer using\n        NetFPGA","bibo:abstract":"This paper introduces AtoZ, an automatic traffic organizer that\n        provides end-users with control of how their applications use\n        network resources. Such an approach contrasts with the moves of\n        many ISPs towards network-wide application throttling and\n        provider-centric control of an application’s network-usage. AtoZ\n        provides seamless per-application traffic-organizing on gigabit\n        links, with minimal packet-delays and no unintended packet\n        drops.\n        \n        The AtoZ combines the high-speed packet processing of the\n        NetFPGA with an efficient flow-behavior identification method.\n        Currently users can enable AtoZ control over network resources\n        by prohibiting certain applications and controlling the priority\n        of others. We discuss deployment experience and use real traffic\n        to illustrate how such an architecture enables several distinct\n        features: high accuracy, high throughput, minimal delay, and\n        efficient packet labeling – all in a low-cost, robust\n        configuration that works alongside the home or enterprise\n        access-router.","bibo:AuthorList":["Canini, Marco","Li, Wei","Zadnik, Martin","Moore, Andrew W."],"dc:date":"2009-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1051860,"sim:weight":0.468105,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1015558,"sim:weight":0.420965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901800,"sim:weight":0.382425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.37896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.368736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.34505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.334221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894197,"sim:weight":0.305216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88894,"sim:weight":0.289215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918981,"sim:weight":0.284238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998729,"sim:weight":0.26861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.265317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549812,"sim:weight":0.261571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103079,"sim:weight":0.254403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":826403,"sim:weight":0.253636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708264,"sim:weight":0.245639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.236297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026223,"sim:weight":0.224519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.222329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":120725,"sim:weight":0.214245,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72054,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Identifying social communities in complex communications\n        for network efficiency","bibo:abstract":"Complex communication networks, more particular Mobile Ad Hoc\n        Networks (MANET) and Pocket Switched Networks (PSN), rely on\n        short range radio and device mobility to transfer data across\n        the network. These kind of mobile networks contain duality in\n        nature: they are radio networks at the same time also human\n        networks, and hence knowledge from social networks can be also\n        applicable here. In this paper, we demonstrate how identifying\n        social communities can significantly improve the forwarding\n        efficiencies in term of delivery ratio and delivery cost. We\n        verify our hypothesis using data from five human mobility\n        experiments and test on two application scenarios, asynchronous\n        messaging and publish/subscribe service.","bibo:AuthorList":["Hui, Pan","Yoneki, Eiko","Crowcroft, Jon","Chan, Shu-Yan"],"dc:date":"2009-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70167,"sim:weight":0.393846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821040,"sim:weight":0.364515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023851,"sim:weight":0.357944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.355767,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057212,"sim:weight":0.313109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757447,"sim:weight":0.303991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929903,"sim:weight":0.301892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":893343,"sim:weight":0.295747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749092,"sim:weight":0.294761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":874032,"sim:weight":0.293965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1056869,"sim:weight":0.287076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899689,"sim:weight":0.27467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44051,"sim:weight":0.269802,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549567,"sim:weight":0.267277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70127,"sim:weight":0.260553,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821006,"sim:weight":0.249796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.24747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187769,"sim:weight":0.246474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973013,"sim:weight":0.244592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":768360,"sim:weight":0.244474,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72056,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"GTVS: boosting the collection of application traffic\n        ground truth","bibo:abstract":"Interesting research in the areas of traffic classification,\n        network monitoring, and application-orient analysis can not\n        proceed with real trace data labeled with actual application\n        information. However, hand-labeled traces are an extremely\n        valuable but scarce resource in the traffic monitoring and\n        analysis community, as a result of both privacy concerns and\n        technical difficulties: hardly any possibility exists for\n        payloaded data to be released to the public, while the intensive\n        labor required for getting the ground-truth application\n        information from the data severely constrains the feasibility of\n        releasing anonymized versions of hand-labeled payloaded data.\n        \n        The usual way to obtain the ground truth is fragile, inefficient\n        and not directly comparable from one’s work to another. This\n        chapter proposes and details a methodology that significantly\n        boosts the efficiency in compiling the application traffic\n        ground truth. In contrast with other existing work, our approach\n        maintains the high certainty as in hand-verification, while\n        striving to save time and labor required for that. Further, it\n        is implemented as an easy hands-on tool suite which is now\n        freely available to the public.\n        \n        In this paper we present a case study using a 30 minute real\n        data trace to guide the readers through our ground-truth\n        classification process. We also present a method, which is an\n        extension of GTVS that efficiently classifies HTTP traffic by\n        its purpose.","bibo:AuthorList":["Canini, Marco","Li, Wei","Moore, Andrew W."],"dc:date":"2009-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":68122,"sim:weight":0.360617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.348909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.338894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000309,"sim:weight":0.328965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99269,"sim:weight":0.308031,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549812,"sim:weight":0.277645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.227739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.224638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.219764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187782,"sim:weight":0.219686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512276,"sim:weight":0.21187,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.209462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.196108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.193208,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72058,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An estimator of forward and backward delay for multipath\n        transport","bibo:abstract":"Multipath transport protocols require awareness of the\n        capability of different paths being used for transmission. It is\n        well known that round trip time (RTT) can be used to estimate\n        retransmission timeout with reasonable accuracy. However, using\n        RTT to evaluate the delay of forward or backward paths is not\n        always suitable. In fact, these paths are usually dissimilar,\n        and therefore the packet delay can be significantly different in\n        each direction.\n        \n        We propose a forward and backward delay estimator that aims to\n        solve this problem. Based on the results of the estimator, a new\n        retransmission heuristic mechanism for multipath transport is\n        proposed. With this same technique we also build two other\n        heuristics: A bottleneck bandwidth estimator and a shared\n        congestion detector. These help the sender to choose the high\n        bandwidth path in retransmission and ensure TCP-friendliness in\n        multipath transport, respectively.","bibo:AuthorList":["Song, Fei","Zhang, Hongke","Zhang, Sidong","Ramos, Fernando","Crowcroft, Jon"],"dc:date":"2009-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1008078,"sim:weight":0.307351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.2998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756277,"sim:weight":0.298703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":720262,"sim:weight":0.285447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.278961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103079,"sim:weight":0.277166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982204,"sim:weight":0.27244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.266413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757285,"sim:weight":0.258835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":950598,"sim:weight":0.257223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937196,"sim:weight":0.2567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026310,"sim:weight":0.256509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929887,"sim:weight":0.256235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929886,"sim:weight":0.246076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":859998,"sim:weight":0.244755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":926796,"sim:weight":0.23925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932173,"sim:weight":0.233058,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1056843,"sim:weight":0.23282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756779,"sim:weight":0.228507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1133757,"sim:weight":0.227122,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72060,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A better x86 memory model: x86-TSO (extended\n        version)","bibo:abstract":"Real multiprocessors do not provide the sequentially consistent\n        memory that is assumed by most work on semantics and\n        verification. Instead, they have relaxed memory models,\n        typically described in ambiguous prose, which lead to widespread\n        confusion. These are prime targets for mechanized formalization.\n        In previous work we produced a rigorous x86-CC model,\n        formalizing the Intel and AMD architecture specifications of the\n        time, but those turned out to be unsound with respect to actual\n        hardware, as well as arguably too weak to program above. We\n        discuss these issues and present a new x86-TSO model that\n        suffers from neither problem, formalized in HOL4. We believe it\n        is sound with respect to real processors, reflects better the\n        vendor\u0027s intentions, and is also better suited for programming.\n        We give two equivalent definitions of x86-TSO: an intuitive\n        operational model based on local write buffers, and an axiomatic\n        total store ordering model, similar to that of the SPARCv8. Both\n        are adapted to handle x86-specific features. We have implemented\n        the axiomatic model in our memevents tool, which calculates the\n        set of all valid executions of test programs, and, for greater\n        confidence, verify the witnesses of such executions directly,\n        with code extracted from a third, more algorithmic, equivalent\n        version of the definition.","bibo:AuthorList":["Owens, Scott","Sarkar, Susmit","Sewell, Peter"],"dc:date":"2009-03","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"S Owens, S Sarkar and P Sewell. (2009). A better x86 memory model: x86-TSO (extended version).","authors":[],"bibo:shortTitle":"A better x86 memory model: x86-TSO (extended version).","dc:date":"2009","doi":"10.1145/1785414.1785443","refDocId":72060},{"rawReferenceText":"S Owens, S Sarkar and P Sewell. (2009). A better x86 memory model: x86-TSO (extended version).","authors":[],"bibo:shortTitle":"A better x86 memory model: x86-TSO (extended version).","dc:date":"2009","doi":"10.1145/1785414.1785443","refDocId":72060},{"rawReferenceText":"S Owens, S Sarkar and P Sewell. (2009). A better x86 memory model: x86-TSO (extended version).","authors":[],"bibo:shortTitle":"A better x86 memory model: x86-TSO (extended version).","dc:date":"2009","doi":"10.1145/1785414.1785443","refDocId":72060},{"rawReferenceText":"S Owens, S Sarkar and P Sewell. (2009). A better x86 memory model: x86-TSO (extended version).","authors":[],"bibo:shortTitle":"A better x86 memory model: x86-TSO (extended version).","dc:date":"2009","doi":"10.1145/1785414.1785443","refDocId":72060},{"rawReferenceText":"S Owens, S Sarkar and P Sewell. (2009). A better x86 memory model: x86-TSO (extended version).","authors":[],"bibo:shortTitle":"A better x86 memory model: x86-TSO (extended version).","dc:date":"2009","doi":"10.1145/1785414.1785443","refDocId":72060}],"similarities":[{"identifier":8931617,"sim:weight":0.2512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.2174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225509,"sim:weight":0.210984,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.193073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.185607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.184829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.181489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.174607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.166785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.16611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.165594,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.165351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4896009,"sim:weight":0.16317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45662,"sim:weight":0.161674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.159575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.159523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.159041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.157375,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.154993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.154711,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72062,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Citation context analysis for information\n        retrieval","bibo:abstract":"This thesis investigates taking words from around citations to\n        scientific papers in order to create an enhanced document\n        representation for improved information retrieval. This method\n        parallels how anchor text is commonly used in Web retrieval. In\n        previous work, words from citing documents have been used as an\n        alternative representation of the cited document but no previous\n        experiment has combined them with a full-text document\n        representation and measured effectiveness in a large scale\n        evaluation.\n        \n        The contributions of this thesis are twofold: firstly, we\n        present a novel document representation, along with experiments\n        to measure its effect on retrieval effectiveness, and, secondly,\n        we document the construction of a new, realistic test collection\n        of scientific research papers, with references (in the\n        bibliography) and their associated citations (in the running\n        text of the paper) automatically annotated. Our experiments show\n        that the citation-enhanced document representation increases\n        retrieval effectiveness across a range of standard retrieval\n        models and evaluation measures.\n        \n        In Chapter 2, we give the background to our work, discussing the\n        various areas from which we draw together ideas: information\n        retrieval, particularly link structure analysis and anchor text\n        indexing, and bibliometrics, in particular citation analysis. We\n        show that there is a close relatedness of ideas between these\n        areas but that these ideas have not been fully explored\n        experimentally. Chapter 3 discusses the test collection paradigm\n        for evaluation of information retrieval systems and describes\n        how and why we built our test collection. In Chapter 4 we\n        introduce the ACL Anthology, the archive of computational\n        linguistics papers that our test collection is centred around.\n        The archive contains the most prominent publications since the\n        beginning of the field in the early 1960s, consisting of one\n        journal plus conferences and workshops, resulting in over 10,000\n        papers. Chapter 5 describes how the PDF papers are prepared for\n        our experiments, including identification of references and\n        citations in the papers, once converted to plain text, and\n        extraction of citation information to an XML database. Chapter 6\n        presents our experiments: we show that adding citation terms to\n        the full-text of the papers improves retrieval effectiveness by\n        up to 7.4%, that weighting citation terms higher relative to\n        paper terms increases the improvement and that varying the\n        context from which citation terms are taken has a significant\n        effect on retrieval effectiveness. Our main hypothesis that\n        citation terms enhance a full-text representation of scientific\n        papers is thus proven.\n        \n        There are some limitations to these experiments. The relevance\n        judgements in our test collection are incomplete but we have\n        experimentally verified that the test collection is,\n        nevertheless, a useful evaluation tool. Using the Lemur toolkit\n        constrained the method that we used to weight citation terms; we\n        would like to experiment with a more realistic implementation of\n        term weighting. Our experiments with different citation contexts\n        did not conclude an optimal citation context; we would like to\n        extend the scope of our investigation. Now that our test\n        collection exists, we can address these issues in our\n        experiments and leave the door open for more extensive\n        experimentation.","bibo:AuthorList":["Ritchie, Anna"],"dc:date":"2009-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":85948,"sim:weight":0.602566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55704,"sim:weight":0.587197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397090,"sim:weight":0.528435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51210,"sim:weight":0.517256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034815,"sim:weight":0.509354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51203,"sim:weight":0.508636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51146,"sim:weight":0.503781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394184,"sim:weight":0.501354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81999,"sim:weight":0.501341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51183,"sim:weight":0.499379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":13152,"sim:weight":0.493139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51195,"sim:weight":0.49064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22079,"sim:weight":0.489586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51211,"sim:weight":0.487257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21365,"sim:weight":0.486051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22510,"sim:weight":0.484711,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51171,"sim:weight":0.482521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5193348,"sim:weight":0.482017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21807,"sim:weight":0.480646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973023,"sim:weight":0.480095,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72064,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Optimising the speed and accuracy of a Statistical GLR\n        Parser","bibo:abstract":"The focus of this thesis is to develop techniques that optimise\n        both the speed and accuracy of a unification-based statistical\n        GLR parser. However, we can apply these methods within a broad\n        range of parsing frameworks. We first aim to optimise the level\n        of tag ambiguity resolved during parsing, given that we employ a\n        front-end PoS tagger. This work provides the first broad\n        comparison of tag models as we consider both tagging and parsing\n        performance. A dynamic model achieves the best accuracy and\n        provides a means to overcome the trade-off between tag error\n        rates in single tag per word input and the increase in parse\n        ambiguity over multipletag per word input. The second line of\n        research describes a novel modification to the inside-outside\n        algorithm, whereby multiple inside and outside probabilities are\n        assigned for elements within the packed parse forest data\n        structure. This algorithm enables us to compute a set of\n        ‘weighted GRs’ directly from this structure. Our experiments\n        demonstrate substantial increases in parser accuracy and\n        throughput for weighted GR output.\n        \n        Finally, we describe a novel confidence-based training\n        framework, that can, in principle, be applied to any statistical\n        parser whose output is defined in terms of its consistency with\n        a given level and type of annotation. We demonstrate that a\n        semisupervised variant of this framework outperforms both\n        Expectation-Maximisation (when both are constrained by\n        unlabelled partial-bracketing) and the extant (fully supervised)\n        method. These novel training methods utilise data automatically\n        extracted from existing corpora. Consequently, they require no\n        manual effort on behalf of the grammar writer, facilitating\n        grammar development.","bibo:AuthorList":["Watson, Rebecca F."],"dc:date":"2009-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":20447,"sim:weight":0.551308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19821,"sim:weight":0.49879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19459,"sim:weight":0.484559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22063,"sim:weight":0.451694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826744,"sim:weight":0.435717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19947,"sim:weight":0.43015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1012043,"sim:weight":0.427758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9633954,"sim:weight":0.422782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85331,"sim:weight":0.421358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19912,"sim:weight":0.419977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008571,"sim:weight":0.416046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931161,"sim:weight":0.406682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19791,"sim:weight":0.405218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86265,"sim:weight":0.399896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19460,"sim:weight":0.399889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19896,"sim:weight":0.392486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826724,"sim:weight":0.386213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18707,"sim:weight":0.378762,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22228,"sim:weight":0.37515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18788,"sim:weight":0.374577,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72066,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"TCP, UDP, and Sockets: Volume 3: The Service-level\n        Specification","bibo:abstract":"Despite more than 30 years of research on protocol\n        specification, the major protocols deployed in the Internet,\n        such as TCP, are described only in informal prose RFCs and\n        executable code. In part this is because the scale and\n        complexity of these protocols makes them challenging targets for\n        formal descriptions, and because techniques for mathematically\n        rigorous (but appropriately loose) specification are not in\n        common use.\n        \n        In this work we show how these difficulties can be addressed. We\n        develop a high-level specification for TCP and the Sockets API,\n        describing the byte-stream service that TCP provides to users,\n        expressed in the formalised mathematics of the HOL proof\n        assistant. This complements our previous low-level specification\n        of the protocol internals, and makes it possible for the first\n        time to state what it means for TCP to be correct: that the\n        protocol implements the service. We define a precise abstraction\n        function between the models and validate it by testing, using\n        verified testing infrastructure within HOL. Some errors may\n        remain, of course, especially as our resources for testing were\n        limited, but it would be straightforward to use the method on a\n        larger scale. This is a pragmatic alternative to full proof,\n        providing reasonable confidence at a relatively low entry cost.\n        \n        Together with our previous validation of the low-level model,\n        this shows how one can rigorously tie together concrete\n        implementations, low-level protocol models, and specifications\n        of the services they claim to provide, dealing with the\n        complexity of real-world protocols throughout.\n        \n        Similar techniques should be applicable, and even more valuable,\n        in the design of new protocols (as we illustrated elsewhere, for\n        a MAC protocol for the SWIFT optically switched network). For\n        TCP and Sockets, our specifications had to capture the\n        historical complexities, whereas for a new protocol design, such\n        specification and testing can identify unintended complexities\n        at an early point in the design.","bibo:AuthorList":["Ridge, Thomas","Norrish, Michael","Sewell, Peter"],"dc:date":"2009-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":982204,"sim:weight":0.448774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101224,"sim:weight":0.401406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26733,"sim:weight":0.3249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43116,"sim:weight":0.308091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.280912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.265202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.264737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.23877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.226023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.222633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.217171,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.215848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.193889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.19346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.191352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.191352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.191352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.191352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.191352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.191352,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72068,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Vehicular wireless communication","bibo:abstract":"Transportation is vital in everyday life. As a consequence,\n        vehicles are increasingly equipped with onboard computing\n        devices. Moreover, the demand for connectivity to vehicles is\n        growing rapidly, both from business and consumers. Meanwhile,\n        the number of wireless networks available in an average city in\n        the developed world is several thousand. Whilst this\n        theoretically provides near-ubiquitous coverage, the technology\n        type is not homogeneous.\n        \n        This dissertation discusses how the diversity in communication\n        systems can be best used by vehicles. Focussing on road\n        vehicles, it first details the technologies available, the\n        difficulties inherent in the vehicular environment, and how\n        intelligent handover algorithms could enable seamless\n        connectivity. In particular, it identifies the need for a model\n        of the coverage of wireless networks.\n        \n        In order to construct such a model, the use of vehicular sensor\n        networks is proposed. The Sentient Van, a platform for vehicular\n        sensing, is introduced, and details are given of experiments\n        carried out concerning the performance of IEEE 802.11x,\n        specifically for vehicles. Using the Sentient Van, a corpus of\n        10 million signal strength readings was collected over three\n        years. This data, and further traces, are used in the remainder\n        of the work described, thus distinguishing it in using entirely\n        real world data.\n        \n        Algorithms are adapted from the field of 2-D shape\n        simplification to the problem of processing thousands of signal\n        strength readings. By applying these to the data collected,\n        coverage maps are generated that contain extents. These\n        represent how coverage varies between two locations on a given\n        road. The algorithms are first proven fit for purpose using\n        synthetic data, before being evaluated for accuracy of\n        representation and compactness of output using real data.\n        \n        The problem of how to select the optimal network to connect to\n        is then addressed. The coverage map representation is converted\n        into a multi-planar graph, where the coverage of all available\n        wireless networks is included. This novel representation also\n        includes the ability to hand over between networks, and the\n        penalties so incurred. This allows the benefits of connecting to\n        a given network to be traded off with the cost of handing over\n        to it.\n        \n        In order to use the multi-planar graph, shortest path routing is\n        used. The theory underpinning multi-criteria routing is\n        overviewed, and a family of routing metrics developed. These\n        generate efficient solutions to the problem of calculating the\n        sequence of networks that should be connected to over a given\n        geographical route. The system is evaluated using real traces,\n        finding that in 75% of the test cases proactive routing\n        algorithms provide better QoS than a reactive algorithm.\n        Moreover, the system can also be run to generate geographical\n        routes that are QoS-aware.\n        \n        This dissertation concludes by examining how coverage mapping\n        can be applied to other types of data, and avenues for future\n        research are proposed.","bibo:AuthorList":["Cottingham, David N."],"dc:date":"2009-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2708264,"sim:weight":0.531815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934801,"sim:weight":0.531789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.523473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.522225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.515351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":398287,"sim:weight":0.484491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145893,"sim:weight":0.482705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932130,"sim:weight":0.474189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932429,"sim:weight":0.472035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106836,"sim:weight":0.467631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931875,"sim:weight":0.463826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102630,"sim:weight":0.463089,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.456318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69292,"sim:weight":0.453936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2150032,"sim:weight":0.45297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.452914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":720262,"sim:weight":0.452793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101562,"sim:weight":0.450599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2700615,"sim:weight":0.450548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69301,"sim:weight":0.448173,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72070,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Analysis of affective expression in speech","bibo:abstract":"This dissertation presents analysis of expressions in speech. It\n        describes a novel framework for dynamic recognition of acted and\n        naturally evoked expressions and its application to expression\n        mapping and to multi-modal analysis of human-computer\n        interactions.\n        \n        The focus of this research is on analysis of a wide range of\n        emotions and mental states from non-verbal expressions in\n        speech. In particular, on inference of complex mental states,\n        beyond the set of basic emotions, including naturally evoked\n        subtle expressions and mixtures of expressions.\n        \n        This dissertation describes a bottom-up computational model for\n        processing of speech signals. It combines the application of\n        signal processing, machine learning and voting methods with\n        novel approaches to the design, implementation and validation.\n        It is based on a comprehensive framework that includes all the\n        development stages of a system. The model represents\n        paralinguistic speech events using temporal abstractions\n        borrowed from various disciplines such as musicology,\n        engineering and linguistics. The model consists of a flexible\n        and expandable architecture. The validation of the model extends\n        its scope to different expressions, languages, backgrounds,\n        contexts and applications.\n        \n        The work adapts an approach that an utterance is not an isolated\n        entity but rather a part of an interaction and should be\n        analysed in this context. The analysis in context includes\n        relations to events and other behavioural cues. Expressions of\n        mental states are related not only in time but also by their\n        meaning and content. This work demonstrates the relations\n        between the lexical definitions of mental states, taxonomies and\n        theoretical conceptualization of mental states and their vocal\n        correlates. It examines taxonomies and theoretical\n        conceptualisation of mental states in relation to their vocal\n        characteristics. The results show that a very wide range of\n        mental state concepts can be mapped, or described, using a\n        high-level abstraction in the form of a small sub-set of\n        concepts which are characterised by their vocal correlates.\n        \n        This research is an important step towards comprehensive\n        solutions that incorporate social intelligence cues for a wide\n        variety of applications and for multi-disciplinary research.","bibo:AuthorList":["Sobol-Shikler, Tal"],"dc:date":"2009-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":58485,"sim:weight":0.365605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932075,"sim:weight":0.355381,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43429,"sim:weight":0.351428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382006,"sim:weight":0.347119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568200,"sim:weight":0.331598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5852169,"sim:weight":0.330717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12195,"sim:weight":0.330513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117275,"sim:weight":0.329075,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48252,"sim:weight":0.327694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991327,"sim:weight":0.324237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757527,"sim:weight":0.322702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44852,"sim:weight":0.319418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698846,"sim:weight":0.305542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352208,"sim:weight":0.304161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998547,"sim:weight":0.303139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44896,"sim:weight":0.298915,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276868,"sim:weight":0.297638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381997,"sim:weight":0.297418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49490,"sim:weight":0.288874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43098,"sim:weight":0.285975,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72072,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"State-based Publish/Subscribe for sensor\n        systems","bibo:abstract":"Recent technological advances have enabled the creation of\n        networks of sensor devices. These devices are typically equipped\n        with basic computational and communication capabilities. Systems\n        based on these devices can deduce high-level, meaningful\n        information about the environment that may be useful to\n        applications. Due to their scale, distributed nature, and the\n        limited resources available to sensor devices, these systems are\n        inherently complex. Shielding applications from this complexity\n        is a challenging problem.\n        \n        To address this challenge, I present a middleware called SPS\n        (State-based Publish/Subscribe). It is based on a combination of\n        a State-Centric data model and a Publish/Subscribe (Pub/Sub)\n        communication paradigm. I argue that a state-centric data model\n        allows applications to specify environmental situations of\n        interest in a more natural way than existing solutions. In\n        addition, Pub/Sub enables scalable many-to-many communication\n        between sensors, actuators, and applications.\n        \n        This dissertation initially focuses on Resource-constrained\n        Sensor Networks (RSNs) and proposes State Filters (SFs), which\n        are lightweight, stateful, event filtering components. Their\n        design is motivated by the redundancy and correlation observed\n        in sensor readings produced close together in space and time. By\n        performing context-based data processing, SFs increase Pub/Sub\n        expressiveness and improve communication efficiency.\n        \n        Secondly, I propose State Maintenance Components (SMCs) for\n        capturing more expressive conditions in heterogeneous sensor\n        networks containing more resourceful devices. SMCs extend SFs\n        with data fusion and temporal and spatial data manipulation\n        capabilities. They can also be composed together (in a DAG) to\n        deduce higher level information. SMCs operate independently from\n        each other and can therefore be decomposed for distributed\n        processing within the network.\n        \n        Finally, I present a Pub/Sub protocol called QPS (Quad-PubSub)\n        for location-aware Wireless Sensor Networks (WSNs). QPS is\n        central to the design of my framework as it facilitates\n        messaging between state-based components, applications, sensors,\n        and actuators. In contrast to existing data dissemination\n        protocols, QPS has a layered architecture. This allows for the\n        transparent operation of routing protocols that meet different\n        Quality of Service (QoS) requirements.","bibo:AuthorList":["Taherian, Salman"],"dc:date":"2009-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":800134,"sim:weight":0.523106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1925982,"sim:weight":0.499179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767364,"sim:weight":0.480044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.479756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003850,"sim:weight":0.471488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932429,"sim:weight":0.458596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960682,"sim:weight":0.458324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934051,"sim:weight":0.453147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5834919,"sim:weight":0.451927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820071,"sim:weight":0.450731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70167,"sim:weight":0.450469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2700500,"sim:weight":0.449674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041272,"sim:weight":0.448952,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800121,"sim:weight":0.431702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":874037,"sim:weight":0.431481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":870287,"sim:weight":0.429846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5834745,"sim:weight":0.423268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69292,"sim:weight":0.423211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934115,"sim:weight":0.421987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70118,"sim:weight":0.421817,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72074,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"High precision timing using self-timed\n        circuits","bibo:abstract":"Constraining the events that demarcate periods on a VLSI chip to\n        precise instances of time is the task undertaken in this thesis.\n        High speed sampling and clock distribution are two example\n        applications. Foundational to my approach is the use of\n        self-timed data control circuits.\n        \n        Specially designed self-timed control circuits deliver high\n        frequency timing signals with precise phase relationships. The\n        frequency and the phase relationships are controlled by varying\n        the number of self-timed control stages and the number of tokens\n        they control.\n        \n        The self-timed control circuits are constructed with simple\n        digital logic gates. The digital logic gates respond to a range\n        of analog values with a continuum of precise and controlled\n        delays. The control circuits implement their functionality\n        efficiently. This allows the gates to drive long wires and\n        distribute the timing signals over a large area. Also gate\n        delays are short and few, allowing for high frequencies.\n        \n        The self-timed control circuits implement the functionality of a\n        FIFO that is then closed into a ring. Timing tokens ripple\n        through the rings. The FIFO stages use digital handshaking\n        protocols to pass the timing tokens between the stages. The FIFO\n        control stage detects the phase between the handshake signals on\n        its inputs and produces a signal that is sent back to the\n        producers with a delay that is a function of the phase\n        relationship of the input signals.\n        \n        The methods described are not bound to the same process and\n        systematic skew limitations of existing methods. For a certain\n        power budget, timing signals are generated and distributed with\n        significantly less power with the approaches to be presented\n        than with conventional methods.","bibo:AuthorList":["Fairbanks, Scott"],"dc:date":"2009-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":884717,"sim:weight":0.396116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71316,"sim:weight":0.363205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932807,"sim:weight":0.348641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5850568,"sim:weight":0.339586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933944,"sim:weight":0.329763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68153,"sim:weight":0.323035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68155,"sim:weight":0.321424,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930958,"sim:weight":0.314842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":777568,"sim:weight":0.310938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799774,"sim:weight":0.310898,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68152,"sim:weight":0.309241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934833,"sim:weight":0.307647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058423,"sim:weight":0.303238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":490766,"sim:weight":0.300483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68154,"sim:weight":0.299907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.298921,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934186,"sim:weight":0.298441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5847231,"sim:weight":0.29842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973902,"sim:weight":0.290037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972997,"sim:weight":0.289047,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72076,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Static contract checking for Haskell","bibo:abstract":"Program errors are hard to detect and are costly, to both\n        programmers who spend significant efforts in debugging, and for\n        systems that are guarded by runtime checks. Static verification\n        techniques have been applied to imperative and object-oriented\n        languages, like Java and C#, for checking basic safety\n        properties such as memory leaks. In a pure functional language,\n        many of these basic properties are guaranteed by design, which\n        suggests the opportunity for verifying more sophisticated\n        program properties. Nevertheless, few automatic systems for\n        doing so exist. In this thesis, we show the challenges and\n        solutions to verifying advanced properties of a pure functional\n        language, Haskell. We describe a sound and automatic static\n        verification framework for Haskell, that is based on contracts\n        and symbolic execution. Our approach gives precise blame\n        assignments at compile-time in the presence of higher-order\n        functions and laziness.\n        \n        First, we give a formal definition of contract satisfaction\n        which can be viewed as a denotational semantics for contracts.\n        We then construct two contract checking wrappers, which are dual\n        to each other, for checking the contract satisfaction. We prove\n        the soundness and completeness of the construction of the\n        contract checking wrappers with respect to the definition of the\n        contract satisfaction. This part of my research shows that the\n        two wrappers are projections with respect to a partial ordering\n        crashes-more-often and furthermore, they form a projection pair\n        and a closure pair. These properties give contract checking a\n        strong theoretical foundation.\n        \n        As the goal is to detect bugs during compile time, we\n        symbolically execute the code constructed by the contract\n        checking wrappers and prove the soundness of this approach. We\n        also develop a technique named counter-example-guided (CEG)\n        unrolling which only unroll function calls on demand. This\n        technique speeds up the checking process.\n        \n        Finally, our verification approach makes error tracing much\n        easier compared with the existing set-based analysis. Thus\n        equipped, we are able to tell programmers during compile-time\n        which function to blame and why if there is a bug in their\n        program. This is a breakthrough for lazy languages because it is\n        known to be difficult to report such informative messages either\n        at compile-time or run-time.","bibo:AuthorList":["Xu, Na"],"dc:date":"2008-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":106942,"sim:weight":0.339939,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.338524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.273531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.272022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.269277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.268144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98083,"sim:weight":0.246238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98092,"sim:weight":0.242491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.242296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98077,"sim:weight":0.238409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.235343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.228626,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.225446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.21672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.215518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.212433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98076,"sim:weight":0.20954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.208455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.206896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.201587,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72078,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Deny-guarantee reasoning","bibo:abstract":"Rely-guarantee is a well-established approach to reasoning about\n        concurrent programs that use parallel composition. However,\n        parallel composition is not how concurrency is structured in\n        real systems. Instead, threads are started by ‘fork’ and\n        collected with ‘join’ commands. This style of concurrency cannot\n        be reasoned about using rely-guarantee, as the life-time of a\n        thread can be scoped dynamically. With parallel composition the\n        scope is static.\n        \n        In this paper, we introduce deny-guarantee reasoning, a\n        reformulation of rely-guarantee that enables reasoning about\n        dynamically scoped concurrency. We build on ideas from\n        separation logic to allow interference to be dynamically split\n        and recombined, in a similar way that separation logic splits\n        and joins heaps. To allow this splitting, we use deny and\n        guarantee permissions: a deny permission specifies that the\n        environment cannot do an action, and guarantee permission allow\n        us to do an action. We illustrate the use of our proof system\n        with examples, and show that it can encode all the original\n        rely-guarantee proofs. We also present the semantics and\n        soundness of the deny-guarantee method.","bibo:AuthorList":["Dodds, Mike","Feng, Xinyu","Parkinson, Matthew","Vafeiadis, Viktor"],"dc:date":"2009-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":101552,"sim:weight":0.228255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1511982,"sim:weight":0.201485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.16592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932538,"sim:weight":0.159405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.156524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.156179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.153397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.149215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.149103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.147551,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934019,"sim:weight":0.146454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.141786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.141401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.1378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.136137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931664,"sim:weight":0.135529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.133554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.132643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.132422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.131071,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72081,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Learning compound noun semantics","bibo:abstract":"This thesis investigates computational approaches for analysing\n        the semantic relations in compound nouns and other noun-noun\n        constructions. Compound nouns in particular have received a\n        great deal of attention in recent years due to the challenges\n        they pose for natural language processing systems. One reason\n        for this is that the semantic relation between the constituents\n        of a compound is not explicitly expressed and must be retrieved\n        from other sources of linguistic and world knowledge.\n        \n        I present a new scheme for the semantic annotation of compounds,\n        describing in detail the motivation for the scheme and the\n        development process. This scheme is applied to create an\n        annotated dataset for use in compound interpretation\n        experiments. The results of a dual-annotator experiment indicate\n        that good agreement can be obtained with this scheme relative to\n        previously reported results and also provide insights into the\n        challenging nature of the annotation task.\n        \n        I describe two corpus-driven paradigms for comparing pairs of\n        nouns: lexical similarity and relational similarity. Lexical\n        similarity is based on comparing each constituent of a noun pair\n        to the corresponding constituent of another pair. Relational\n        similarity is based on comparing the contexts in which both\n        constituents of a noun pair occur together with the\n        corresponding contexts of another pair. Using the flexible\n        framework of kernel methods, I develop techniques for\n        implementing both similarity paradigms.\n        \n        A standard approach to lexical similarity represents words by\n        their co-occurrence distributions. I describe a family of kernel\n        functions that are designed for the classification of\n        probability distributions. The appropriateness of these\n        distributional kernels for semantic tasks is suggested by their\n        close connection to proven measures of distributional lexical\n        similarity. I demonstrate the effectiveness of the lexical\n        similarity model by applying it to two classification tasks:\n        compound noun interpretation and the 2007 SemEval task on\n        classifying semantic relations between nominals.\n        \n        To implement relational similarity I use kernels on strings and\n        sets of strings. I show that distributional set kernels based on\n        a multinomial probability model can be computed many times more\n        efficiently than previously proposed kernels, while still\n        achieving equal or better performance. Relational similarity\n        does not perform as well as lexical similarity in my\n        experiments. However, combining the two models brings an\n        improvement over either model alone and achieves\n        state-of-the-art results on both the compound noun and SemEval\n        Task 4 datasets.","bibo:AuthorList":["Ó Séaghdha, Diarmuid"],"dc:date":"2008-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":22309,"sim:weight":0.586933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19608,"sim:weight":0.558571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930493,"sim:weight":0.542584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21891,"sim:weight":0.537182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239595,"sim:weight":0.531097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147203,"sim:weight":0.516709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19877,"sim:weight":0.514751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21941,"sim:weight":0.512908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21868,"sim:weight":0.512354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997697,"sim:weight":0.501125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21621,"sim:weight":0.500749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997461,"sim:weight":0.495313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21634,"sim:weight":0.48371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21002,"sim:weight":0.481054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86966,"sim:weight":0.479905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21889,"sim:weight":0.47886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20377,"sim:weight":0.477294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86764,"sim:weight":0.475812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930910,"sim:weight":0.475496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86647,"sim:weight":0.475108,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72082,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Tabletop interfaces for remote collaboration","bibo:abstract":"Effective support for synchronous remote collaboration has long\n        proved a desirable yet elusive goal for computer technology.\n        Although video views showing the remote participants have\n        recently improved, technologies providing a shared visual\n        workspace of the task still lack support for the visual cues and\n        work practices of co-located collaboration.\n        \n        Researchers have recently demonstrated shared workspaces for\n        remote collaboration using large horizontal interactive\n        surfaces. These remote tabletop interfaces may afford the\n        beneficial work practices associated with co-located\n        collaboration around tables. However, there has been little\n        investigation of remote tabletop interfaces beyond limited\n        demonstrations. There is currently little theoretical basis for\n        their design, and little empirical characterisation of their\n        support for collaboration. The construction of remote tabletop\n        applications also presents considerable technical challenges.\n        \n        This dissertation addresses each of these areas. Firstly, a\n        theory of workspace awareness is applied to consider the design\n        of remote tabletop interfaces and the work practices that they\n        may afford.\n        \n        Secondly, two technical barriers to the rapid exploration of\n        useful remote tabletop applications are identified: the low\n        resolution of conventional tabletop displays; and the lack of\n        support for existing user interface components. Techniques from\n        multi-projector display walls are applied to address these\n        problems. The resulting method is evaluated empirically and used\n        to create a number of novel tabletop interfaces.\n        \n        Thirdly, an empirical investigation compares remote and\n        co-located tabletop interfaces. The findings show how the design\n        of remote tabletop interfaces leads to collaborators having a\n        high level of awareness of each other’s actions in the\n        workspace. This enables smooth transitions between individual\n        and group work, together with anticipation and assistance,\n        similar to co-located tabletop collaboration. However, remote\n        tabletop collaborators use different coordination mechanisms\n        from co-located collaborators. The results have implications for\n        the design and future study of these interfaces.","bibo:AuthorList":["Tuddenham, Philip"],"dc:date":"2008-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":3106,"sim:weight":0.600514,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3087,"sim:weight":0.573251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":540,"sim:weight":0.560739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3094,"sim:weight":0.549652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41248,"sim:weight":0.494299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3097,"sim:weight":0.470427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9544234,"sim:weight":0.462558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3091,"sim:weight":0.441602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41250,"sim:weight":0.441298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41249,"sim:weight":0.440428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.440337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3639,"sim:weight":0.426145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3100,"sim:weight":0.409812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3102,"sim:weight":0.404972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43103,"sim:weight":0.379124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":82159,"sim:weight":0.377883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41246,"sim:weight":0.3768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707667,"sim:weight":0.375599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932102,"sim:weight":0.375592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.369003,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72085,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Tangible user interfaces for peripheral\n        interaction","bibo:abstract":"Since Mark Weiser’s vision of ubiquitous computing in 1988, many\n        research efforts have been made to move computation away from\n        the workstation and into the world. One such research area\n        focuses on “Tangible” User Interfaces or TUIs – those that\n        provide both physical representation and control of underlying\n        digital information.\n        \n        This dissertation describes how TUIs can support a “peripheral”\n        style of interaction, in which users engage in short, dispersed\n        episodes of low-attention interaction with digitally-augmented\n        physical tokens. The application domain in which I develop this\n        concept is the office context, where physical tokens can\n        represent items of common interest to members of a team whose\n        work is mutually interrelated, but predominantly performed\n        independently by individuals at their desks.\n        \n        An “analytic design process” is introduced as a way of\n        developing TUI designs appropriate for their intended contexts\n        of use. This process is then used to present the design of a\n        bimanual desktop TUI that complements the existing workstation,\n        and encourages peripheral interaction in parallel with\n        workstation-intensive tasks. Implementation of a prototype TUI\n        is then described, comprising “task” tokens for work-time\n        management, “document” tokens for face-to-face sharing of\n        collaborative documents, and “contact” tokens for awareness of\n        other team members’ status and workload. Finally, evaluation of\n        this TUI is presented via description of its extended deployment\n        in a real office context.\n        \n        The main empirically-grounded results of this work are a\n        categorisation of the different ways in which users can interact\n        with physical tokens, and an identification of the qualities of\n        peripheral interaction that differentiate it from other\n        interaction styles. The foremost benefits of peripheral\n        interaction were found to arise from the freedom with which\n        tokens can be appropriated to create meaningful information\n        structures of both cognitive and social significance, in the\n        physical desktop environment and beyond.","bibo:AuthorList":["Edge, Darren"],"dc:date":"2008-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4185817,"sim:weight":0.55358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932025,"sim:weight":0.495076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932110,"sim:weight":0.493776,"sim:AssociationMethod":"similarity_cosine"},{"identifier":82159,"sim:weight":0.484185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.479715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933590,"sim:weight":0.473071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3100,"sim:weight":0.470761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85672,"sim:weight":0.467372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3102,"sim:weight":0.46674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41246,"sim:weight":0.465113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710521,"sim:weight":0.462233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3087,"sim:weight":0.461723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59100,"sim:weight":0.460564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":538,"sim:weight":0.455905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":82151,"sim:weight":0.455074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8159,"sim:weight":0.454839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43103,"sim:weight":0.453621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":376891,"sim:weight":0.451244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3639,"sim:weight":0.445335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3104,"sim:weight":0.44409,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72087,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Computing surfaces – a platform for scalable interactive\n        displays","bibo:abstract":"Recent progress in electronic, display and sensing technologies\n        makes possible a future with omnipresent, arbitrarily large\n        interactive display surfaces. Nonetheless, current methods of\n        designing display systems with multi-touch sensitivity do not\n        scale. This thesis presents computing surfaces as a viable\n        platform for resolving forthcoming scalability limitations.\n        \n        Computing surfaces are composed of a homogeneous network of\n        physically adjoined, small sensitive displays with local\n        computation and communication capabilities. In this platform,\n        inherent scalability is provided by a distributed architecture.\n        The regular spatial distribution of resources presents new\n        demands on the way surface input and output information is\n        managed and processed.\n        \n        Direct user input with touch based gestures needs to account for\n        the distributed architecture of computing surfaces. A scalable\n        middleware solution that conceals the tiled architecture is\n        proposed for reasoning with touch-based gestures. The validity\n        of this middleware is proven in a case study, where a fully\n        distributed algorithm for online recognition of unistrokes – a\n        particular class of touch-based gestures – is presented and\n        evaluated.\n        \n        Novel interaction techniques based around interactive display\n        surfaces involve direct manipulation with displayed digital\n        objects. In order to facilitate such interactions in computing\n        surfaces, an efficient distributed algorithm to perform 2D image\n        transformations is introduced and evaluated. The performance of\n        these transformations is heavily influenced by the arbitration\n        policies of the interconnection network. One approach for\n        improving the performance of these transformations in\n        conventional network architectures is proposed and evaluated.\n        \n        More advanced applications in computing surfaces require the\n        presence of some notion of time. An efficient algorithm for\n        internal time synchronisation is presented and evaluated. A\n        hardware solution is adopted to minimise the delay uncertainty\n        of special timestamp messages. The proposed algorithm allows\n        efficient, scalable time synchronisation among clusters of\n        tiles. A hardware reference platform is constructed to\n        demonstrate the basic principles and features of computing\n        surfaces. This platform and a complementary simulation\n        environment is used for extensive evaluation and analysis.","bibo:AuthorList":["Rrustemi, Alban"],"dc:date":"2008-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4888338,"sim:weight":0.547137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89468,"sim:weight":0.411631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707667,"sim:weight":0.407325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50644,"sim:weight":0.398449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89467,"sim:weight":0.389908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43093,"sim:weight":0.374199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.374159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931875,"sim:weight":0.372274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69303,"sim:weight":0.369572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70452,"sim:weight":0.368908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70212,"sim:weight":0.361582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77011,"sim:weight":0.350026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933515,"sim:weight":0.349953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.349876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999647,"sim:weight":0.349415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55509,"sim:weight":0.34894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70123,"sim:weight":0.346535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.345416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70119,"sim:weight":0.344433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393976,"sim:weight":0.344276,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72089,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A new approach to Internet banking","bibo:abstract":"This thesis investigates the protection landscape surrounding\n        online banking. First, electronic banking is analysed for\n        vulnerabilities and a survey of current attacks is carried out.\n        This is represented graphically as an attack tree describing the\n        different ways in which online transactions can be attacked.\n        \n        The discussion then moves on to various defences which have been\n        developed, categorizing them and analyzing how successful they\n        are at protecting against the attacks given in the first\n        chapter. This covers everything from TLS encryption through\n        phishing site detection to two-factor authentication.\n        \n        Having declared all current schemes for protecting online\n        banking lacking in some way, the key aspects of the problem are\n        identified. This is followed by a proposal for a more robust\n        defence system which uses a small security device to create a\n        trusted path to the customer, rather than depend upon trusting\n        the customer’s computer. The protocol for this system is\n        described along with all the other restrictions required for\n        actual use. This is followed by a description of a demonstration\n        implementation of the system.\n        \n        Extensions to the system are then proposed, designed to afford\n        extra protection for the consumer and also to support other\n        types of device. There is then a discussion of ways of managing\n        keys in a heterogeneous system, rather than one managed by a\n        single entity.\n        \n        The conclusion discusses the weaknesses of the proposed scheme\n        and evaluates how successful it is likely to be in practice and\n        what barriers there may be to adoption in the banking system.","bibo:AuthorList":["Johnson, Matthew"],"dc:date":"2008-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":899711,"sim:weight":0.535291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937415,"sim:weight":0.511685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.46828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918255,"sim:weight":0.456995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8223,"sim:weight":0.454056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1037025,"sim:weight":0.44263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68067,"sim:weight":0.440217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9016165,"sim:weight":0.440204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.427297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123291,"sim:weight":0.410068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43550,"sim:weight":0.409467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.39682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698721,"sim:weight":0.390748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70143,"sim:weight":0.390529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2731318,"sim:weight":0.389865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.383719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765467,"sim:weight":0.362277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15628,"sim:weight":0.359078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998240,"sim:weight":0.355508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1004046,"sim:weight":0.342947,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72091,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Adaptive evaluation of non-strict programs","bibo:abstract":"Most popular programming languages are strict. In a strict\n        language, the binding of a variable to an expression coincides\n        with the evaluation of the expression.\n        \n        Non-strict languages attempt to make life easier for programmers\n        by decoupling expression binding and expression evaluation. In a\n        non-strict language, a variable can be bound to an unevaluated\n        expression, and such expressions can be passed around just like\n        values in a strict language. This separation allows the\n        programmer to declare a variable at the point that makes most\n        logical sense, rather than at the point at which its value is\n        known to be needed.\n        \n        Non-strict languages are usually evaluated using a technique\n        called Lazy Evaluation. Lazy Evaluation will only evaluate an\n        expression when its value is known to be needed. While Lazy\n        Evaluation minimises the total number of expressions evaluated,\n        it imposes a considerable bookkeeping overhead, and has\n        unpredictable space behaviour.\n        \n        In this thesis, we present a new evaluation strategy which we\n        call Optimistic Evaluation. Optimistic Evaluation blends lazy\n        and eager evaluation under the guidance of an online profiler.\n        The online profiler observes the running program and decides\n        which expressions should be evaluated lazily, and which should\n        be evaluated eagerly. We show that the worst case performance of\n        Optimistic Evaluation relative to Lazy Evaluation can be bounded\n        with an upper bound chosen by the user. Increasing this upper\n        bound allows the profiler to take greater risks and potentially\n        achieve better average performance.\n        \n        This thesis describes both the theory and practice of Optimistic\n        Evaluation. We start by giving an overview of Optimistic\n        Evaluation. We go on to present a formal model, which we use to\n        justify our design. We then detail how we have implemented\n        Optimistic Evaluation as part of an industrial-strength\n        compiler. Finally, we provide experimental results to back up\n        our claims.","bibo:AuthorList":["Ennals, Robert J."],"dc:date":"2008-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":12215,"sim:weight":0.411303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.380985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931527,"sim:weight":0.330256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931611,"sim:weight":0.327883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827026,"sim:weight":0.308199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91053,"sim:weight":0.305808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998292,"sim:weight":0.305511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998542,"sim:weight":0.303054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998409,"sim:weight":0.299492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56440,"sim:weight":0.299345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997535,"sim:weight":0.291114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98080,"sim:weight":0.282327,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997552,"sim:weight":0.274123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998406,"sim:weight":0.271604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931617,"sim:weight":0.268013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98092,"sim:weight":0.266163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":281392,"sim:weight":0.261431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931588,"sim:weight":0.249353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999263,"sim:weight":0.243518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934772,"sim:weight":0.243302,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72093,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Weighted spectral distribution","bibo:abstract":"Comparison of graph structures is a frequently encountered\n        problem across a number of problem domains. Comparing graphs\n        requires a metric to discriminate which features of the graphs\n        are considered important. The spectrum of a graph is often\n        claimed to contain all the information within a graph, but the\n        raw spectrum contains too much information to be directly used\n        as a useful metric. In this paper we introduce a metric, the\n        weighted spectral distribution, that improves on the raw\n        spectrum by discounting those eigenvalues believed to be\n        unimportant and emphasizing the contribution of those believed\n        to be important.\n        \n        We use this metric to optimize the selection of parameter values\n        for generating Internet topologies. Our metric leads to\n        parameter choices that appear sensible given prior knowledge of\n        the problem domain: the resulting choices are close to the\n        default values of the topology generators and, in the case of\n        the AB generator, fall within the expected region. This metric\n        provides a means for meaningfully optimizing parameter selection\n        when generating topologies intended to share structure with, but\n        not match exactly, measured graphs.","bibo:AuthorList":["Fay, Damien","Haddadi, Hamed","Uhlig, Steve","Moore, Andrew W.","Mortier, Richard","Jamakovic, Almerima"],"dc:date":"2008-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1383664,"sim:weight":0.302965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55148,"sim:weight":0.295182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.290335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187570,"sim:weight":0.271218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1384116,"sim:weight":0.244908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26732,"sim:weight":0.227047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43079,"sim:weight":0.208052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2183574,"sim:weight":0.20504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.196883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84788,"sim:weight":0.190757,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108991,"sim:weight":0.188934,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335622,"sim:weight":0.172895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2796563,"sim:weight":0.167639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932053,"sim:weight":0.165039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.163686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.162968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16008,"sim:weight":0.157394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102704,"sim:weight":0.156761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934278,"sim:weight":0.156184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.156083,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72095,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A robust efficient algorithm for point location in\n        triangulations","bibo:abstract":"This paper presents a robust alternative to previous approaches\n        to the problem of point location in triangulations represented\n        using the quadedge data structure. We generalise the reasons for\n        the failure of an earlier routine to terminate when applied to\n        certain non-Delaunay triangulations. This leads to our new\n        deterministic algorithm which we prove is guaranteed to\n        terminate. We also present a novel heuristic for choosing a\n        starting edge for point location queries and show that this\n        greatly enhances the efficiency of point location for the\n        general case.","bibo:AuthorList":["Brown, Peter J.C.","Faigle, Christopher T."],"dc:date":"1997-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934278,"sim:weight":0.295099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.291503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1134333,"sim:weight":0.24828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":329060,"sim:weight":0.203782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.165904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101400,"sim:weight":0.16552,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.156465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98526,"sim:weight":0.156453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19444,"sim:weight":0.153469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931954,"sim:weight":0.150063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98569,"sim:weight":0.149506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98723,"sim:weight":0.146399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931813,"sim:weight":0.143788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18180,"sim:weight":0.143786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75365,"sim:weight":0.14369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55166,"sim:weight":0.139627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.137175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998967,"sim:weight":0.137033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99456,"sim:weight":0.136778,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98318,"sim:weight":0.136406,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72097,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A novel auto-calibration system for wireless sensor\n        motes","bibo:abstract":"In recent years, Wireless Sensor Networks (WSNs) research has\n        undergone a quiet revolution, providing a new paradigm for\n        sensing and disseminating information from various environments.\n        In reality, the wireless propagation channel in many harsh\n        environments has a significant impact on the coverage range and\n        quality of the radio links between the wireless nodes (motes).\n        Therefore, the use of diversity techniques (e.g., frequency\n        diversity and spatial diversity) must be considered to\n        ameliorate the notoriously variable and unpredictable\n        point-to-point radio communication links. However, in order to\n        determine the space and frequency diversity characteristics of\n        the channel, accurate measurements need to be made. The most\n        representative and inexpensive solution is to use motes, however\n        they suffer poor accuracy owing to their low-cost and\n        compromised radio frequency (RF) performance.\n        \n        In this report we present a novel automated calibration system\n        for characterising mote RF performance. The proposed strategy\n        provides us with good knowledge of the actual mote transmit\n        power, RSSI characteristics and receive sensitivity by\n        establishing calibration tables for transmitting and receiving\n        mote pairs over their operating frequency range. The validated\n        results show that our automated calibration system can achieve\n        an increase of ±1.5 dB in the RSSI accuracy. In addition,\n        measurements of the mote transmit power show a significant\n        difference from that claimed in the manufacturer’s data sheet.\n        The proposed calibration method can also be easily applied to\n        wireless sensor motes from virtually any vendor, provided they\n        have a RF connector.","bibo:AuthorList":["Liu, Ruoshui","Wassell, Ian J."],"dc:date":"2008-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102539,"sim:weight":0.504901,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116295,"sim:weight":0.352748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008712,"sim:weight":0.310382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003850,"sim:weight":0.308963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390152,"sim:weight":0.304217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767364,"sim:weight":0.299293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960682,"sim:weight":0.299003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1584829,"sim:weight":0.270455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23406,"sim:weight":0.259688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.25664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2000894,"sim:weight":0.254452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4182207,"sim:weight":0.250854,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.239629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.23936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.237594,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.230628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902013,"sim:weight":0.226389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145893,"sim:weight":0.215327,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083622,"sim:weight":0.214018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.209452,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72099,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Modular fine-grained concurrency verification","bibo:abstract":"Traditionally, concurrent data structures are protected by a\n        single mutual exclusion lock so that only one thread may access\n        the data structure at any time. This coarse-grained approach\n        makes it relatively easy to reason about correctness, but it\n        severely limits parallelism. More advanced algorithms instead\n        perform synchronisation at a finer grain. They employ\n        sophisticated synchronisation schemes (both blocking and\n        non-blocking) and are usually written in low-level languages\n        such as C.\n        \n        This dissertation addresses the formal verification of such\n        algorithms. It proposes techniques that are modular (and hence\n        scalable), easy for programmers to use, and yet powerful enough\n        to verify complex algorithms. In doing so, it makes two\n        theoretical and two practical contributions to reasoning about\n        fine-grained concurrency.\n        \n        First, building on rely/guarantee reasoning and separation\n        logic, it develops a new logic, RGSep, that subsumes these two\n        logics and enables simple, modular proofs of fine-grained\n        concurrent algorithms that use complex dynamically allocated\n        data structures and may explicitly deallocate memory. RGSep\n        allows for ownership-based reasoning and ownership transfer\n        between threads, while maintaining the expressiveness of binary\n        relations to describe inter-thread interference.\n        \n        Second, it describes techniques for proving linearisability, the\n        standard correctness condition for fine-grained concurrent\n        algorithms. The main proof technique is to introduce auxiliary\n        single-assignment variables to capture the linearisation point\n        and to inline the abstract effect of the program at that point\n        as auxiliary code.\n        \n        Third, it demonstrates this approach by proving linearisability\n        of a collection of concurrent list and stack algorithms, as well\n        as providing the first correctness proofs of the RDCSS and MCAS\n        implementations of Harris et al.\n        \n        Finally, it describes a prototype safety checker, SmallfootRG,\n        for fine-grained concurrent programs that is based on RGSep.\n        SmallfootRG proves simple safety properties for a number of list\n        and stack algorithms and verifies the absence of memory leaks.","bibo:AuthorList":["Vafeiadis, Viktor"],"dc:date":"2008-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9658,"sim:weight":0.442508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931563,"sim:weight":0.408075,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.407488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.399677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931664,"sim:weight":0.399377,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931617,"sim:weight":0.390686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.39068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934464,"sim:weight":0.380522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931611,"sim:weight":0.363393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933016,"sim:weight":0.355823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.35254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931527,"sim:weight":0.349729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9767,"sim:weight":0.346112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931534,"sim:weight":0.344684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932538,"sim:weight":0.339942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934227,"sim:weight":0.33818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707945,"sim:weight":0.336764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38466,"sim:weight":0.320247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934390,"sim:weight":0.305983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997558,"sim:weight":0.292946,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72101,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Beyond node degree: evaluating AS topology\n        models","bibo:abstract":"Many models have been proposed to generate Internet Autonomous\n        System (AS) topologies, most of which make structural\n        assumptions about the AS graph. In this paper we compare AS\n        topology generation models with several observed AS topologies.\n        In contrast to most previous works, we avoid making assumptions\n        about which topological properties are important to characterize\n        the AS topology. Our analysis shows that, although matching\n        degree-based properties, the existing AS topology generation\n        models fail to capture the complexity of the local\n        interconnection structure between ASs. Furthermore, we use BGP\n        data from multiple vantage points to show that additional\n        measurement locations significantly affect local structure\n        properties, such as clustering and node centrality. Degree-based\n        properties, however, are not notably affected by additional\n        measurements locations. These observations are particularly\n        valid in the core. The shortcomings of AS topology generation\n        models stems from an underestimation of the complexity of the\n        connectivity in the core caused by inappropriate use of BGP\n        data.","bibo:AuthorList":["Haddadi, Hamed","Fay, Damien","Jamakovic, Almerima","Maennel, Olaf","Moore, Andrew W.","Mortier, Richard","Rio, Miguel","Uhlig, Steve"],"dc:date":"2008-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1026260,"sim:weight":0.426823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017995,"sim:weight":0.377629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102396,"sim:weight":0.271837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":119154,"sim:weight":0.262984,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335622,"sim:weight":0.241369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":66334,"sim:weight":0.234024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.230422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.217617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107698,"sim:weight":0.217119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84788,"sim:weight":0.213803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1384116,"sim:weight":0.212321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":333076,"sim:weight":0.209941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931241,"sim:weight":0.196397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2779656,"sim:weight":0.185845,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.18086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334060,"sim:weight":0.180584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.174769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26952,"sim:weight":0.174392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":981110,"sim:weight":0.169778,"sim:AssociationMethod":"similarity_cosine"},{"identifier":287089,"sim:weight":0.168273,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72103,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Animation manifolds for representing topological\n        alteration","bibo:abstract":"An animation manifold encapsulates an animation sequence of\n        surfaces contained within a higher dimensional manifold with one\n        dimension being time. An iso–surface extracted from this\n        structure is a frame of the animation sequence.\n        \n        In this dissertation I make an argument for the use of animation\n        manifolds as a representation of complex animation sequences. In\n        particular animation manifolds can represent transitions between\n        shapes with differing topological structure and polygonal\n        density.\n        \n        I introduce the animation manifold, and show how it can be\n        constructed from a keyframe animation sequence and rendered\n        using raytracing or graphics hardware. I then adapt three\n        Laplacian editing frameworks to the higher dimensional context.\n        I derive new boundary conditions for both primal and dual\n        Laplacian methods, and present a technique to adaptively\n        regularise the sampling of a deformed manifold after editing.\n        \n        The animation manifold can be used to represent a morph sequence\n        between surfaces of arbitrary topology. I present a novel\n        framework for achieving this by connecting planar cross sections\n        in a higher dimension with a new constrained Delaunay\n        triangulation. Topological alteration is achieved by using the\n        Voronoi skeleton, a novel structure which provides a fast medial\n        axis approximation.","bibo:AuthorList":["Southern, Richard"],"dc:date":"2008-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1445545,"sim:weight":0.501795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89048,"sim:weight":0.495289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393996,"sim:weight":0.444465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44411,"sim:weight":0.437373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":240353,"sim:weight":0.431438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573475,"sim:weight":0.429208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.410342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43087,"sim:weight":0.403693,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.403112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43397,"sim:weight":0.39608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45639,"sim:weight":0.395522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43103,"sim:weight":0.384766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.377717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43398,"sim:weight":0.376768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20620,"sim:weight":0.369797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000332,"sim:weight":0.366066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1496193,"sim:weight":0.354156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241263,"sim:weight":0.353607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101555,"sim:weight":0.34496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86085,"sim:weight":0.343176,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72105,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Energy-efficient sentient computing","bibo:abstract":"In a bid to improve the interaction between computers and\n        humans, it is becoming necessary to make increasingly larger\n        deployments of sensor networks. These clusters of small\n        electronic devices can be embedded in our surroundings and can\n        detect and react to physical changes. They will make computers\n        more proactive in general by gathering and interpreting useful\n        information about the physical environment through a combination\n        of measurements. Increasing the performance of these devices\n        will mean more intelligence can be embedded within the sensor\n        network. However, most conventional ways of increasing\n        performance often come with the burden of increased power\n        dissipation which is not an option for energy-constrained sensor\n        networks. This thesis proposes, develops and tests a design\n        methodology for performing greater amounts of processing within\n        a sensor network while satisfying the requirement for low energy\n        consumption. The crux of the thesis is that there is a great\n        deal of concurrency present in sensor networks which when\n        combined with a tightly-coupled group of small, fast,\n        energy-conscious processors can result in a significantly more\n        efficient network. The construction of a multiprocessor system\n        aimed at sensor networks is described in detail. It is shown\n        that a routine critical to sensor networks can be sped up with\n        the addition of a small set of primitives. The need for a very\n        fast inter-processor communication mechanism is highlighted, and\n        the hardware scheduler developed as part of this effort forms\n        the cornerstone of the new sentient computing framework by\n        facilitating thread operations and minimising the time required\n        for context-switching. The experimental results also show that\n        end-to-end latency can be reduced in a flexible way through\n        multiprocessing.","bibo:AuthorList":["Eyole-Monono, Mbou"],"dc:date":"2008-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":800134,"sim:weight":0.616534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.595619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.557274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2700500,"sim:weight":0.552474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932429,"sim:weight":0.546086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69292,"sim:weight":0.53246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70118,"sim:weight":0.522375,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003850,"sim:weight":0.521606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767364,"sim:weight":0.518892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":874037,"sim:weight":0.516521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5845339,"sim:weight":0.511889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70116,"sim:weight":0.509524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69301,"sim:weight":0.50808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934051,"sim:weight":0.506915,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.504782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932045,"sim:weight":0.503781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.501769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929957,"sim:weight":0.50113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960682,"sim:weight":0.499916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98222,"sim:weight":0.496837,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72108,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Investigating classification for natural language\n        processing tasks","bibo:abstract":"This report investigates the application of classification\n        techniques to four natural language processing (NLP) tasks. The\n        classification paradigm falls within the family of statistical\n        and machine learning (ML) methods and consists of a framework\n        within which a mechanical ‘learner’ induces a functional mapping\n        between elements drawn from a particular sample space and a set\n        of designated target classes. It is applicable to a wide range\n        of NLP problems and has met with a great deal of success due to\n        its flexibility and firm theoretical foundations.\n        \n        The first task we investigate, topic classification, is firmly\n        established within the NLP/ML communities as a benchmark\n        application for classification research. Our aim is to arrive at\n        a deeper understanding of how class granularity affects\n        classification accuracy and to assess the impact of\n        representational issues on different classification models. Our\n        second task, content-based spam filtering, is a highly topical\n        application for classification techniques due to the\n        ever-worsening problem of unsolicited email. We assemble a new\n        corpus and formulate a state-of-the-art classifier based on\n        structured language model components. Thirdly, we introduce the\n        problem of anonymisation, which has received little attention to\n        date within the NLP community. We define the task in terms of\n        obfuscating potentially sensitive references to real world\n        entities and present a new publicly-available benchmark corpus.\n        We explore the implications of the subjective nature of the\n        problem and present an interactive model for anonymising large\n        quantities of data based on syntactic analysis and active\n        learning. Finally, we investigate the task of hedge\n        classification, a relatively new application which is currently\n        of growing interest due to the expansion of research into the\n        application of NLP techniques to scientific literature for\n        information extraction. A high level of annotation agreement is\n        obtained using new guidelines and a new benchmark corpus is made\n        publicly available. As part of our investigation, we develop a\n        probabilistic model for training data acquisition within a\n        semi-supervised learning framework which is explored both\n        theoretically and experimentally.\n        \n        Throughout the report, many common themes of fundamental\n        importance to classification for NLP are addressed, including\n        sample representation, performance evaluation, learning model\n        selection, linguistically-motivated feature engineering, corpus\n        construction and real-world application.","bibo:AuthorList":["Medlock, Ben W."],"dc:date":"2008-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":757523,"sim:weight":0.566327,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147179,"sim:weight":0.518198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22492,"sim:weight":0.513451,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73259,"sim:weight":0.511334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20245,"sim:weight":0.51019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147582,"sim:weight":0.509364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19892,"sim:weight":0.508313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59850,"sim:weight":0.507041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766082,"sim:weight":0.501609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899710,"sim:weight":0.482558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22171,"sim:weight":0.481731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929791,"sim:weight":0.481126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826755,"sim:weight":0.480468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86868,"sim:weight":0.476684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22136,"sim:weight":0.475529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21807,"sim:weight":0.47503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19716,"sim:weight":0.47276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15586,"sim:weight":0.466765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931171,"sim:weight":0.458673,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826773,"sim:weight":0.458033,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72110,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A capability-based access control architecture for\n        multi-domain publish/subscribe systems","bibo:abstract":"Publish/subscribe is emerging as the favoured communication\n        paradigm for large-scale, wide-area distributed systems. The\n        publish/subscribe many-to-many interaction model together with\n        asynchronous messaging provides an efficient transport for\n        highly distributed systems in high latency environments with\n        direct peer-to-peer interactions amongst the participants.\n        \n        Decentralised publish/subscribe systems implement the event\n        service as a network of event brokers. The broker network makes\n        the system more resilient to failures and allows it to scale up\n        efficiently as the number of event clients increases. In many\n        cases such distributed systems will only be feasible when\n        implemented over the Internet as a joint effort spanning\n        multiple administrative domains. The participating members will\n        benefit from the federated event broker networks both with\n        respect to the size of the system as well as its\n        fault-tolerance.\n        \n        Large-scale, multi-domain environments require access control;\n        users will have different privileges for sending and receiving\n        instances of different event types. Therefore, we argue that\n        access control is vital for decentralised publish/subscribe\n        systems, consisting of multiple independent administrative\n        domains, to ever be deployable in large scale.\n        \n        This dissertation presents MAIA, an access control mechanism for\n        decentralised, type-based publish/subscribe systems. While the\n        work concentrates on type-based publish/subscribe the\n        contributions are equally applicable to both topic and\n        content-based publish/subscribe systems.\n        \n        Access control in distributed publish/subscribe requires secure,\n        distributed naming, and mechanisms for enforcing access control\n        policies. The first contribution of this thesis is a mechanism\n        for names to be referenced unambiguously from policy without\n        risk of forgeries. The second contribution is a model describing\n        how signed capabilities can be used to grant domains and their\n        members’ access rights to event types in a scalable and\n        expressive manner. The third contribution is a model for\n        enforcing access control in the decentralised event service by\n        encrypting event content.\n        \n        We illustrate the design and implementation of MAIA with a\n        running example of the UK Police Information Technology\n        Organisation and the UK police forces.","bibo:AuthorList":["Pesonen, Lauri I.W."],"dc:date":"2008-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":69261,"sim:weight":0.408302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.408132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934801,"sim:weight":0.389231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998829,"sim:weight":0.363499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69325,"sim:weight":0.358516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1107476,"sim:weight":0.335549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.327061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826954,"sim:weight":0.319234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.295759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.295512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934970,"sim:weight":0.281582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.269675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934177,"sim:weight":0.267654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184877,"sim:weight":0.262002,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934553,"sim:weight":0.246555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104940,"sim:weight":0.246355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003780,"sim:weight":0.246156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932589,"sim:weight":0.242867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999062,"sim:weight":0.241988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934111,"sim:weight":0.24158,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72112,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Intelligent Book: technologies for intelligent and\n        adaptive textbooks, focussing on Discrete Mathematics","bibo:abstract":"An “Intelligent Book” is a Web-based textbook that contains\n        exercises that are backed by computer models or reasoning\n        systems. Within the exercises, students work using appropriate\n        graphical notations and diagrams for the subject matter, and\n        comments and feedback from the book are related into the content\n        model of the book. The content model can be extended by its\n        readers. This dissertation examines the question of how to\n        provide an Intelligent Book that can support undergraduate\n        questions in Number Theory, and particularly questions that\n        allow the student to write a proof as the answer. Number Theory\n        questions pose a challenge not only because the student is\n        working on an unfamiliar topic in an unfamiliar syntax, but also\n        because there is no straightforward procedure for how to prove\n        an arbitrary Number Theory problem.\n        \n        The main contribution is a system for supporting student-written\n        proof exercises, backed by the Isabelle/HOL automated proof\n        assistant and a set of teaching scripts. Students write proofs\n        using MathsTiles: a graphical notation consisting of composable\n        tiles, each of which can contain an arbitrary piece of\n        mathematics or logic written by the teacher. These tiles\n        resemble parts of the proof as it might be written on paper, and\n        are translated into Isabelle/HOL’ws Isar syntax on the server.\n        Unlike traditional syntax-directed editors, MathsTiles allow\n        students to freely sketch out parts of an answer and do not\n        constrain the order in which an answer is written. They also\n        allow details of the language to change between or even during\n        questions.\n        \n        A number of smaller contributions are also presented. By using\n        the dynamic nature of MathsTiles, a type of proof exercise is\n        developed where the student must search for the statements he or\n        she wishes to use. This allows questions to be supported by\n        informal modelling, making them much easier to write, but still\n        ensures that the interface does not act as a prop for the\n        answer. The concept of searching for statements is extended to\n        develop “massively multiple choice” questions: a mid-point\n        between the multiple choice and short answer formats. The\n        question architecture that is presented is applicable across\n        different notational forms and different answer analysis\n        techniques. The content architecture uses an informal ontology\n        that enables students and untrained users to add and adapt\n        content within the book, including adding their own chapters,\n        while ensuring the content can also be referred to by the models\n        and systems that advise students during exercises.","bibo:AuthorList":["Billingsley, William H."],"dc:date":"2008-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98135,"sim:weight":0.489737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.460807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930966,"sim:weight":0.437506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.410317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43090,"sim:weight":0.400792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98127,"sim:weight":0.393026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98129,"sim:weight":0.384312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387213,"sim:weight":0.380107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18964,"sim:weight":0.349087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279236,"sim:weight":0.333446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43101,"sim:weight":0.327053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99483,"sim:weight":0.326216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2755110,"sim:weight":0.314831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1154630,"sim:weight":0.314726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109218,"sim:weight":0.311016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14195,"sim:weight":0.310014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1154677,"sim:weight":0.308111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4160794,"sim:weight":0.300896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4160793,"sim:weight":0.296227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43718,"sim:weight":0.294351,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72114,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Cooperative attack and defense in distributed\n        networks","bibo:abstract":"The advance of computer networking has made cooperation\n        essential to both attackers and defenders. Increased\n        decentralization of network ownership requires devices to\n        interact with entities beyond their own realm of control. The\n        distribution of intelligence forces decisions to be taken at the\n        edge. The exposure of devices makes multiple, simultaneous\n        attacker-chosen compromise a credible threat. Motivation for\n        this thesis derives from the observation that it is often easier\n        for attackers to cooperate than for defenders to do so. I\n        describe a number of attacks which exploit cooperation to\n        devastating effect. I also propose and evaluate defensive\n        strategies which require cooperation.\n        \n        I first investigate the security of decentralized, or ‘ad-hoc’,\n        wireless networks. Many have proposed pre-loading symmetric keys\n        onto devices. I describe two practical attacks on these schemes.\n        First, attackers may compromise several devices and share the\n        pre-loaded secrets to impersonate legitimate users. Second,\n        whenever some keys are not pre-assigned but exchanged upon\n        deployment, a revoked attacker can rejoin the network.\n        \n        I next consider defensive strategies where devices collectively\n        decide to remove a malicious device from the network. Existing\n        voting-based protocols are made resilient to the attacks I have\n        developed, and I propose alternative strategies that can be more\n        efficient and secure. First, I describe a reelection protocol\n        which relies on positive affirmation from peers to continue\n        participation. Then I describe a more radical alternative called\n        suicide: a good device removes a bad one unilaterally by\n        declaring both devices dead. Suicide offers significant\n        improvements in speed and efficiency compared to voting-based\n        decision mechanisms. I then apply suicide and voting to\n        revocation in vehicular networks.\n        \n        Next, I empirically investigate attack and defense in another\n        context: phishing attacks on the Internet. I have found evidence\n        that one group responsible for half of all phishing, the\n        rock-phish gang, cooperates by pooling hosting resources and by\n        targeting many banks simultaneously. These cooperative attacks\n        are shown to be far more effective.\n        \n        I also study the behavior of defenders – banks and Internet\n        service providers – who must cooperate to remove malicious\n        sites. I find that phishing-website lifetimes follow a\n        long-tailed lognormal distribution. While many sites are removed\n        quickly, others remain much longer. I examine several feeds from\n        professional ‘take-down’ companies and find that a lack of data\n        sharing helps many phishing sites evade removal for long time\n        periods.\n        \n        One anti-phishing organization has relied on volunteers to\n        submit and verify suspected phishing sites. I find its\n        voting-based decision mechanism to be slower and less\n        comprehensive than unilateral verification performed by\n        companies. I also note that the distribution of user\n        participation is highly skewed, leaving the scheme vulnerable to\n        manipulation.","bibo:AuthorList":["Moore, Tyler"],"dc:date":"2008-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":937415,"sim:weight":0.6303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9016165,"sim:weight":0.564169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1130963,"sim:weight":0.507356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980772,"sim:weight":0.484986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176812,"sim:weight":0.46037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934801,"sim:weight":0.452084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960711,"sim:weight":0.449584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041272,"sim:weight":0.448741,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932626,"sim:weight":0.447029,"sim:AssociationMethod":"similarity_cosine"},{"identifier":677817,"sim:weight":0.44495,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973022,"sim:weight":0.44369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865388,"sim:weight":0.443615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082620,"sim:weight":0.442478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894215,"sim:weight":0.437482,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865398,"sim:weight":0.437471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":955811,"sim:weight":0.434057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082668,"sim:weight":0.429059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083196,"sim:weight":0.426649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2702355,"sim:weight":0.424215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821034,"sim:weight":0.420245,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72116,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Psychologically-based simulation of human\n        behaviour","bibo:abstract":"The simulation of human behaviour is a key area of computer\n        graphics as there is currently a great demand for animations\n        consisting of virtual human characters, ranging from film\n        special effects to building design. Currently, animated\n        characters can either be laboriously created by hand, or by\n        using an automated system: however, results from the latter may\n        still look artificial and require much further manual work.\n        \n        The aim of this work is to improve the automated simulation of\n        human behaviour by making use of ideas from psychology research;\n        the ways in which this research has been used are made clear\n        throughout this thesis. It has influenced all aspects of the\n        design:\n        \n        • Collision avoidance techniques are based on observed\n        practices.\n        \n        • Actors have simulated vision and attention.\n        \n        • Actors can be given a variety of moods and emotions to affect\n        their\n        behaviour.\n        \n        This thesis discusses the benefits of the simulation of\n        attention; this technique recreates the eye movements of each\n        actor, and allows each actor to build up its own mental model of\n        its surroundings. It is this model that the actor then uses in\n        its decisions on how to behave: techniques for collision\n        prediction and collision avoidance are discussed. On top of this\n        basic behaviour, variability is introduced by allowing all\n        actors to have different sets of moods and emotions, which\n        influence all aspects of their behaviour. The real-time 3D\n        simulation created to demonstrate the actors’ behaviour is also\n        described.\n        \n        This thesis demonstrates that the use of techniques based on\n        psychology research leads to a qualitative and quantitative\n        improvement in the simulation of human behaviour; this is shown\n        through a variety of pictures and videos, and by results of\n        numerical experiments and user testing. Results are compared\n        with previous work in the field, and with real human behaviour.","bibo:AuthorList":["Rymill, Stephen Julian"],"dc:date":"2008-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1352239,"sim:weight":0.410193,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44852,"sim:weight":0.387949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999555,"sim:weight":0.383795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381997,"sim:weight":0.381018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.377384,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44390,"sim:weight":0.340184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56854,"sim:weight":0.331864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382037,"sim:weight":0.324175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5222154,"sim:weight":0.322668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86560,"sim:weight":0.318427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89048,"sim:weight":0.311196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55114,"sim:weight":0.304271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1443527,"sim:weight":0.300257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88712,"sim:weight":0.299577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.287011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1444978,"sim:weight":0.280576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88806,"sim:weight":0.27765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54562,"sim:weight":0.274686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.270761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54404,"sim:weight":0.25557,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72119,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"UpgradeJ: Incremental typechecking for class\n        upgrades","bibo:abstract":"One of the problems facing developers is the constant evolution\n        of components that are used to build applications. This\n        evolution is typical of any multi-person or multi-site software\n        project. How can we program in this environment? More precisely,\n        how can language design address such evolution? In this paper we\n        attack two significant issues that arise from constant component\n        evolution: we propose language- level extensions that permit\n        multiple, co-existing versions of classes and the ability to\n        dynamically upgrade from one version of a class to another,\n        whilst still maintaining type safety guarantees and requiring\n        only lightweight extensions to the runtime infrastructure. We\n        show how our extensions, whilst intuitive, provide a great deal\n        of power by giving a number of examples. Given the subtlety of\n        the problem, we formalize a core fragment of our language and\n        prove a number of important safety properties.","bibo:AuthorList":["Bierman, Gavin M.","Parkinson, Matthew J.","Noble, James"],"dc:date":"2008-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":114,"sim:weight":0.283978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.237321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549752,"sim:weight":0.22149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.220056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.216398,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57232,"sim:weight":0.213195,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.206824,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.199199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.196318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.194978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.192895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.185965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.184086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43272,"sim:weight":0.182605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145724,"sim:weight":0.182547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.180126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.179605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.167374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937303,"sim:weight":0.162361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707867,"sim:weight":0.161065,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72120,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On using fuzzy data in security mechanisms","bibo:abstract":"Under the microscope, every physical object has unique features.\n        It is impossible to clone an object, reproducing exactly the\n        same physical traits. This unclonability principle has been\n        applied in many security applications. For example, the science\n        of biometrics is about measuring unique personal features. It\n        can authenticate individuals with a high level of assurance.\n        Similarly, a paper document can be identified by measuring its\n        unique physical properties, such as randomly-interleaving fiber\n        structure.\n        \n        Unfortunately, when physical measurements are involved, errors\n        arise inevitably and the obtained data are fuzzy by nature. This\n        causes two main problems: 1) fuzzy data cannot be used as a\n        cryptographic key, as cryptography demands the key be precise;\n        2) fuzzy data cannot be sorted easily, which prevents efficient\n        information retrieval. In addition, biometric measurements\n        create a strong binding between a person and his unique\n        features, which may conflict with personal privacy. In this\n        dissertation, we study these problems in detail and propose\n        solutions.\n        \n        First, we propose a scheme to derive error-free keys from fuzzy\n        data, such as iris codes. There are two types of errors within\n        iris codes: background-noise errors and burst errors.\n        Accordingly, we devise a two-layer error correction technique,\n        which first corrects the background-noise errors using a\n        Hadamard code, then the burst errors using a Reed-Solomon code.\n        Based on a database of 700 iris images, we demonstrate that an\n        error-free key of 140 bits can be reliably reproduced from\n        genuine iris codes with a 99.5% success rate. In addition,\n        despite the irrevocability of the underlying biometric data, the\n        keys produced using our technique can be easily revoked or\n        updated.\n        \n        Second, we address the search problem for a large fuzzy database\n        that stores iris codes or data with a similar structure.\n        Currently, the algorithm used in all public deployments of iris\n        recognition is to search exhaustively through a database of iris\n        codes, looking for a match that is close enough. We propose a\n        much more efficient search algorithm: Beacon Guided Search\n        (BGS). BGS works by indexing iris codes, adopting a “multiple\n        colliding segments principle” along with an early termination\n        strategy to reduce the search range dramatically. We evaluate\n        this algorithm using 632,500 real-world iris codes, showing a\n        substantial speed-up over exhaustive search with a negligible\n        loss of precision. In addition, we demonstrate that our\n        empirical findings match theoretical analysis.\n        \n        Finally, we study the anonymous-veto problem, which is more\n        commonly known as the Dining Cryptographers problem: how to\n        perform a secure multiparty computation of the boolean-OR\n        function, while preserving the privacy of each input bit. The\n        solution to this problem has general applications in security\n        going way beyond biometrics. Even though there have been several\n        solutions presented over the past 20 years, we propose a new\n        solution called: Anonymous Veto Network (AV-net). Compared with\n        past work, the AV-net protocol provides the strongest protection\n        of each delegate’s privacy against collusion; it requires only\n        two rounds of broadcast, fewer than any other solutions; the\n        computational load and bandwidth usage are the lowest among the\n        available techniques; and our protocol does not require any\n        private channels or third parties. Overall, it seems unlikely\n        that, with the same underlying technology, there can be any\n        other solutions significantly more efficient than ours.","bibo:AuthorList":["Hao, Feng"],"dc:date":"2008-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":973017,"sim:weight":0.672099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116740,"sim:weight":0.670049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1079937,"sim:weight":0.656534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003816,"sim:weight":0.649885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756019,"sim:weight":0.621322,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757067,"sim:weight":0.571885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102373,"sim:weight":0.544833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":611,"sim:weight":0.491537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":870290,"sim:weight":0.47282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819992,"sim:weight":0.446751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990048,"sim:weight":0.435598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729439,"sim:weight":0.419536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933097,"sim:weight":0.41097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901956,"sim:weight":0.407212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958526,"sim:weight":0.39776,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083675,"sim:weight":0.38639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":779128,"sim:weight":0.384226,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102432,"sim:weight":0.37638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008804,"sim:weight":0.362701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083691,"sim:weight":0.361364,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72122,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A wide-area file system for migrating virtual\n        machines","bibo:abstract":"Improvements in processing power and core bandwidth set against\n        fundamental constraints on wide-area latency increasingly\n        emphasise the position in the network at which services are\n        deployed. The XenoServer project is building a platform for\n        distributed computing that facilitates the migration of services\n        between hosts to minimise client latency and balance load in\n        response to changing patterns of demand. Applications run inside\n        whole-system virtual machines, allowing the secure multiplexing\n        of host resources.\n        \n        Since services are specified in terms of a complete root file\n        system and kernel image, a key component of this architecture is\n        a substrate that provides an abstraction akin to local disks for\n        these virtual machines, whether they are running, migrating or\n        suspended. However, the same combination of wide-area latency,\n        constrained bandwidth and global scale that motivates the\n        XenoServer platform itself impedes the location, management and\n        rapid transfer of storage between deployment sites. This\n        dissertation describes Xest, a novel wide-area file system that\n        aims to address these challenges.\n        \n        I examine Xest’s design, centred on the abstraction of virtual\n        disks, volumes that allow only a single writer yet are\n        transparently available despite migration. Virtual disks support\n        the creation of snapshots and may be rapidly forked into copies\n        that can be modified independently. This encourages an\n        architectural separation into node-local file system and global\n        content distribution framework and reduces the dependence of\n        local operations on wide-area interactions.\n        \n        I then describe how Xest addresses the dual problem of latency\n        and scale by managing, caching, advertising and retrieving\n        storage on the basis of groups, sets of files that correspond to\n        portions of inferred working sets of client applications.\n        Coarsening the granularity of these interfaces further decouples\n        local and global activity: fewer units can lead to fewer\n        interactions and the maintenance of less addressing state. The\n        precision of these interfaces is retained by clustering\n        according to observed access patterns and, in response to\n        evidence of poor clusterings, selectively degrading groups into\n        their constituent elements.\n        \n        I evaluate a real deployment of Xest over a wide-area testbed.\n        Doing so entails developing new tools for capturing and\n        replaying traces to simulate virtual machine workloads. My\n        results demonstrate the practicality and high performance of my\n        design and illustrate the trade-offs involved in modifying the\n        granularity of established storage interfaces.","bibo:AuthorList":["Moreton, Tim"],"dc:date":"2008-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1145576,"sim:weight":0.520346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.45219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930971,"sim:weight":0.443528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931344,"sim:weight":0.428821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.426188,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.425021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920086,"sim:weight":0.420003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.398808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71065,"sim:weight":0.387466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.382159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931237,"sim:weight":0.381905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.363044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.360665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2731318,"sim:weight":0.354517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15627,"sim:weight":0.349937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778849,"sim:weight":0.330452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336372,"sim:weight":0.329726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69260,"sim:weight":0.322468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.32194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930967,"sim:weight":0.311767,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72124,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"People are the network: experimental design and\n        evaluation of social-based forwarding algorithms","bibo:abstract":"Cooperation binds but also divides human society into\n        communities. Members of the same community interact with each\n        other preferentially. There is structure in human society.\n        Within society and its communities, individuals have varying\n        popularity. Some people are more popular and interact with more\n        people than others; we may call them hubs. I develop methods to\n        extract this kind of social information from experimental traces\n        and use it to choose the next hop forwarders in Pocket Switched\n        Networks (PSNs). I find that by incorporating social\n        information, forwarding efficiency can be significantly\n        improved. For practical reasons, I also develop distributed\n        algorithms for inferring communities.\n        \n        Forwarding in Delay Tolerant Networks (DTNs), or more\n        particularly PSNs, is a challenging problem since human mobility\n        is usually difficult to predict. In this thesis, I aim to tackle\n        this problem using an experimental approach by studying real\n        human mobility. I perform six mobility experiments in different\n        environments. The resultant experimental datasets are valuable\n        for the research community. By analysing the experimental data,\n        I find out that the inter-contact time of humans follows a\n        power-law distribution with coefficient smaller than 1 (over the\n        range of 10 minutes to 1 day). I study the limits of “oblivious”\n        forwarding in the experimental environment and also the impact\n        of the power-law coefficient on message delivery.\n        \n        In order to study social-based forwarding, I develop methods to\n        infer human communities from the data and use these in the study\n        of social-aware forwarding. I propose several social-aware\n        forwarding schemes and evaluate them on different datasets. I\n        find out that by combining community and centrality information,\n        forwarding efficiency can be significantly improved, and I call\n        this scheme BUBBLE forwarding with the analogy that each\n        community is a BUBBLE with big bubbles containing smaller\n        bubbles. For practical deployment of these algorithms, I propose\n        distributed community detection schemes, and also propose\n        methods to approximate node centrality in the system.\n        \n        Besides the forwarding study, I also propose a layerless\n        data-centric architecture for the PSN scenario to address the\n        problem with the status quo in communication (e.g. an\n        infrastructuredependent and synchronous API), which brings PSN\n        one step closer to real-world deployment.","bibo:AuthorList":["Hui, Pan"],"dc:date":"2008-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2043317,"sim:weight":0.59311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929453,"sim:weight":0.546622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107698,"sim:weight":0.507623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897450,"sim:weight":0.48393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5852084,"sim:weight":0.475563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21973,"sim:weight":0.464759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96764,"sim:weight":0.461126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958378,"sim:weight":0.441229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821006,"sim:weight":0.439582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931678,"sim:weight":0.43731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":971216,"sim:weight":0.423022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901369,"sim:weight":0.420395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003881,"sim:weight":0.41995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":720262,"sim:weight":0.416606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617464,"sim:weight":0.41536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":825844,"sim:weight":0.411286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821034,"sim:weight":0.408741,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20463,"sim:weight":0.408571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083643,"sim:weight":0.407952,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102572,"sim:weight":0.406964,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72127,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Flash-exposure high dynamic range imaging: virtual\n        photography and depth-compensating flash","bibo:abstract":"I present a revised approach to flash-exposure high dynamic\n        range (HDR) imaging and demonstrate two applications of this\n        image representation. The first application enables the creation\n        of realistic ‘virtual photographs’ for arbitrary flash-exposure\n        settings, based on a single flash-exposure HDR image. The second\n        application is a novel tone mapping operator for flash-exposure\n        HDR images based on the idea of an ‘intelligent flash’. It\n        compensates for the depth-related brightness fall-off occurring\n        in flash photographs by taking the ambient illumination into\n        account.","bibo:AuthorList":["Richardt, Christian"],"dc:date":"2008-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":269260,"sim:weight":0.353102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757861,"sim:weight":0.29842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757885,"sim:weight":0.238293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767458,"sim:weight":0.227891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929808,"sim:weight":0.197465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.160023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.144272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385676,"sim:weight":0.130287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.129044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.128373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.124196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176871,"sim:weight":0.120647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931836,"sim:weight":0.120395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931810,"sim:weight":0.120229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56544,"sim:weight":0.11418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44224,"sim:weight":0.113613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98519,"sim:weight":0.113361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9432761,"sim:weight":0.105913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109098,"sim:weight":0.0985236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99107,"sim:weight":0.0973886,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72129,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Thinking inside the box: system-level failures of tamper\n        proofing","bibo:abstract":"PIN entry devices (PEDs) are critical security components in EMV\n        smartcard payment systems as they receive a customer’s card and\n        PIN. Their approval is subject to an extensive suite of\n        evaluation and certification procedures. In this paper, we\n        demonstrate that the tamper proofing of PEDs is unsatisfactory,\n        as is the certification process. We have implemented practical\n        low-cost attacks on two certified, widely-deployed PEDs – the\n        Ingenico i3300 and the Dione Xtreme. By tapping inadequately\n        protected smartcard communications, an attacker with basic\n        technical skills can expose card details and PINs, leaving\n        cardholders open to fraud. We analyze the anti-tampering\n        mechanisms of the two PEDs and show that, while the specific\n        protection measures mostly work as intended, critical\n        vulnerabilities arise because of the poor integration of\n        cryptographic, physical and procedural protection. As these\n        vulnerabilities illustrate a systematic failure in the design\n        process, we propose a methodology for doing it better in the\n        future. They also demonstrate a serious problem with the Common\n        Criteria. We discuss the incentive structures of the\n        certification process, and show how they can lead to problems of\n        the kind we identified. Finally, we recommend changes to the\n        Common Criteria framework in light of the lessons learned.\n        \n        An abridged version of this paper is to appear at the IEEE\n        Symposium on Security and Privacy, May 2008, Oakland, CA, US.","bibo:AuthorList":["Drimer, Saar","Murdoch, Steven J.","Anderson, Ross"],"dc:date":"2008-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":684257,"sim:weight":0.361875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.346939,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.324444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46838,"sim:weight":0.290411,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017249,"sim:weight":0.235126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106379,"sim:weight":0.221355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12059,"sim:weight":0.221038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.21481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.189786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187729,"sim:weight":0.187455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186346,"sim:weight":0.185871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707867,"sim:weight":0.179526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1442,"sim:weight":0.177171,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96261,"sim:weight":0.176973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.173712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.157699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.156825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.156825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.156825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.156825,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72131,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Event structures with persistence","bibo:abstract":"Increasingly, the style of computation is changing. Instead of\n        one machine running a program sequentially, we have systems with\n        many individual agents running in parallel. The need for\n        mathematical models of such computations is therefore ever\n        greater.\n        \n        There are many models of concurrent computations. Such models\n        can, for example, provide a semantics to process calculi and\n        thereby suggest behavioural equivalences between processes. They\n        are also key to the development of automated tools for reasoning\n        about concurrent systems. In this thesis we explore some\n        applications and generalisations of one particular model – event\n        structures. We describe a variety of kinds of morphism between\n        event structures. Each kind expresses a different sort of\n        behavioural relationship. We demonstrate the way in which event\n        structures can model both processes and types of processes by\n        recalling a semantics for Affine HOPLA, a higher order process\n        language. This is given in terms of asymmetric spans of event\n        structures. We show that such spans support a trace\n        construction. This allows the modelling of feedback and suggests\n        a semantics for non-deterministic dataflow processes in terms of\n        spans. The semantics given is shown to be consistent with Kahn’s\n        fixed point construction when we consider spans modelling\n        deterministic processes.\n        \n        A generalisation of event structures to include persistent\n        events is proposed. Based on previously described morphisms\n        between classical event structures, we define several categories\n        of event structures with persistence. We show that, unlike for\n        the corresponding categories of classical event structures, all\n        are isomorphic to Kleisli categories of monads on the most\n        restricted category. Amongst other things, this provides us with\n        a way of understanding the asymmetric spans mentioned previously\n        as symmetric spans where one morphism is modified by a monad.\n        Thus we provide a general setting for future investigations\n        involving event structures.","bibo:AuthorList":["Brace-Evans, Lucy G."],"dc:date":"2008-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934392,"sim:weight":0.316639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.308097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934348,"sim:weight":0.303759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.299186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.299186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.285486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.267265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.266114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.264304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.254321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.245896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.225472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47235,"sim:weight":0.222604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.20744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691224,"sim:weight":0.206577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.206319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1578933,"sim:weight":0.200852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99157,"sim:weight":0.200317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.194285,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99347,"sim:weight":0.191485,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72133,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Protocols and technologies for security in pervasive\n        computing and communications","bibo:abstract":"As the state-of-the-art edges towards Mark Weiser’s vision of\n        ubiquitous computing (ubicomp), we found that we have to revise\n        some previous assumptions about security engineering for this\n        domain. Ubicomp devices have to be networked together to be able\n        to realize their promise. To communicate securely amongst\n        themselves, they have to establish secret session keys, but this\n        is a difficult problem when this is done primarily over radio in\n        an ad-hoc scenario, i.e. without the aid of an infrastructure\n        (such as a PKI), and when it is assumed that the devices are\n        resource-constrained and cannot perform complex calculations.\n        Secondly, when ubicomp devices are carried by users as personal\n        items, their permanent identifiers inadvertently allow the users\n        to be tracked, to the detriment of user privacy. Unless there\n        are deliberate improvements in designing for location privacy,\n        ubicomp devices can be trivially detected, and linked to\n        individual users, with discomfiting echoes of a surveillance\n        society. Our findings and contributions are thus as follow. In\n        considering session key establishment, we learnt that asymmetric\n        cryptography is not axiomatically infeasible, and may in fact be\n        essential, to counter possible attackers, for some of the more\n        computationally capable (and important) devices. We next found\n        existing attacker models to be inadequate, along with existing\n        models of bootstrapping security associations, in ubicomp. We\n        address the inadequacies with a contribution which we call:\n        ‘multi-channel security protocols’, by leveraging on multiple\n        channels, with different properties, existing in the said\n        environment. We gained an appreciation of the fact that location\n        privacy is really a multi-layer problem, particularly so in\n        ubicomp, where an attacker often may have access to different\n        layers. Our contributions in this area are to advance the design\n        for location privacy by introducing a MAC-layer proposal with\n        stronger unlinkability, and a physical-layer proposal with\n        stronger unobservability.","bibo:AuthorList":["Wong, Ford Long"],"dc:date":"2008-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":390236,"sim:weight":0.572988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":728843,"sim:weight":0.555421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390229,"sim:weight":0.550139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934801,"sim:weight":0.538535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91442,"sim:weight":0.536114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980772,"sim:weight":0.519788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865398,"sim:weight":0.516678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116755,"sim:weight":0.515702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.497956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.496733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819441,"sim:weight":0.496523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70145,"sim:weight":0.490231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.488542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138774,"sim:weight":0.488361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023853,"sim:weight":0.483873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932626,"sim:weight":0.483266,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041272,"sim:weight":0.478422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397465,"sim:weight":0.472159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.471443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22395,"sim:weight":0.466561,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72135,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"IDRM: Inter-Domain Routing Protocol for Mobile Ad Hoc\n        Networks","bibo:abstract":"Inter-domain routing is an important component to allow\n        interoperation among heterogeneous network domains operated by\n        different organizations. Although inter-domain routing has been\n        extensively studied in the Internet, it remains relatively\n        unexplored in the Mobile Ad Hoc Networks (MANETs) space. In\n        MANETs, the inter-domain routing problem is challenged by: (1)\n        dynamic network topology, and (2) diverse intra-domain ad hoc\n        routing protocols. In this paper, we propose a networking\n        protocol called IDRM (Inter-Domain Routing Protocol for MANETs)\n        to enable interoperation among MANETs. IDRM can handle the\n        dynamic nature of MANETs and support policy-based routing\n        similarly to BGP. We first discuss the design challenges for\n        inter-domain routing in MANETs, and then present the design of\n        IDRM with illustrative examples. Finally, we present a\n        simulation-based study to understand the operational\n        effectiveness of inter-domain routing and show that the overhead\n        of IDRM is moderate.","bibo:AuthorList":["Chau, Chi-Kin","Crowcroft, Jon","Lee, Kang-Won","Wong, Starsky H.Y."],"dc:date":"2008-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":768360,"sim:weight":0.541487,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929729,"sim:weight":0.536083,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929963,"sim:weight":0.514359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929743,"sim:weight":0.504429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991467,"sim:weight":0.504428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821035,"sim:weight":0.496702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083193,"sim:weight":0.492308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":824815,"sim:weight":0.472899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767477,"sim:weight":0.461644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749092,"sim:weight":0.458983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820293,"sim:weight":0.457601,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023851,"sim:weight":0.448166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":844784,"sim:weight":0.443223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083679,"sim:weight":0.441875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729000,"sim:weight":0.440035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1124009,"sim:weight":0.435156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1039286,"sim:weight":0.434099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919368,"sim:weight":0.4278,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937314,"sim:weight":0.427256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77141,"sim:weight":0.414162,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72137,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Complexity-effective superscalar embedded processors\n        using instruction-level distributed processing","bibo:abstract":"Modern trends in mobile and embedded devices require ever\n        increasing levels of performance, while maintaining low power\n        consumption and silicon area usage. This thesis presents a new\n        architecture for a high-performance embedded processor, based\n        upon the instruction-level distributed processing (ILDP)\n        methodology. A qualitative analysis of the complexity of an ILDP\n        implementation as compared to both a typical scalar RISC CPU and\n        a superscalar design is provided, which shows that the ILDP\n        architecture eliminates or greatly reduces the size of a number\n        of structures present in a superscalar architecture, allowing\n        its complexity and power consumption to compare favourably with\n        a simple scalar design.\n        \n        The performance of an implementation of the ILDP architecture is\n        compared to some typical processors used in high-performance\n        embedded systems. The effect on performance of a number of the\n        architectural parameters is analysed, showing that many of the\n        parallel structures used within the processor can be scaled to\n        provide less parallelism with little cost to the overall\n        performance. In particular, the size of the register file can be\n        greatly reduced with little average effect on performance – a\n        size of 32 registers, with 16 visible in the instruction set, is\n        shown to provide a good trade-off between area/power and\n        performance.\n        \n        Several novel developments to the ILDP architecture are then\n        described and analysed. Firstly, a scheme to halve the number of\n        processing elements and thus greatly reduce silicon area and\n        power consumption is outlined but proves to result in a 12–14%\n        drop in performance. Secondly, a method to reduce the area and\n        power requirements of the memory logic in the architecture is\n        presented which can achieve similar performance to the original\n        architecture with a large reduction in area and power\n        requirements or, at an increased area/power cost, can improve\n        performance by approximately 24%. Finally, a new organisation\n        for the register file is proposed, which reduces the silicon\n        area used by the register file by approximately three-quarters\n        and allows even greater power savings, especially in the case\n        where processing elements are power gated.\n        \n        Overall, it is shown that the ILDP methodology is a viable\n        approach for future embedded system design, and several new\n        variants on the architecture are contributed. Several areas of\n        useful future research are highlighted, especially with respect\n        to compiler design for the ILDP paradigm.","bibo:AuthorList":["Caulfield, Ian"],"dc:date":"2007-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43115,"sim:weight":0.505054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80584,"sim:weight":0.403234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88838,"sim:weight":0.38727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.371157,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008746,"sim:weight":0.364793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80580,"sim:weight":0.337938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276807,"sim:weight":0.319688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.315444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":777570,"sim:weight":0.313199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902422,"sim:weight":0.308769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.281111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933839,"sim:weight":0.278057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80590,"sim:weight":0.27592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45662,"sim:weight":0.275207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023968,"sim:weight":0.275109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933804,"sim:weight":0.273179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.27061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.26288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.256849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934598,"sim:weight":0.250711,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72139,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Covert channel vulnerabilities in anonymity\n        systems","bibo:abstract":"The spread of wide-scale Internet surveillance has spurred\n        interest in anonymity systems that protect users’ privacy by\n        restricting unauthorised access to their identity. This\n        requirement can be considered as a flow control policy in the\n        well established field of multilevel secure systems. I apply\n        previous research on covert channels (unintended means to\n        communicate in violation of a security policy) to analyse\n        several anonymity systems in an innovative way.\n        \n        One application for anonymity systems is to prevent collusion in\n        competitions. I show how covert channels may be exploited to\n        violate these protections and construct defences against such\n        attacks, drawing from previous covert channel research and\n        collusion-resistant voting systems.\n        \n        In the military context, for which multilevel secure systems\n        were designed, covert channels are increasingly eliminated by\n        physical separation of interconnected single-role computers.\n        Prior work on the remaining network covert channels has been\n        solely based on protocol specifications. I examine some protocol\n        implementations and show how the use of several covert channels\n        can be detected and how channels can be modified to resist\n        detection.\n        \n        I show how side channels (unintended information leakage) in\n        anonymity networks may reveal the behaviour of users. While\n        drawing on previous research on traffic analysis and covert\n        channels, I avoid the traditional assumption of an omnipotent\n        adversary. Rather, these attacks are feasible for an attacker\n        with limited access to the network. The effectiveness of these\n        techniques is demonstrated by experiments on a deployed\n        anonymity network, Tor.\n        \n        Finally, I introduce novel covert and side channels which\n        exploit thermal effects. Changes in temperature can be remotely\n        induced through CPU load and measured by their effects on\n        crystal clock skew. Experiments show this to be an effective\n        attack against Tor. This side channel may also be usable for\n        geolocation and, as a covert channel, can cross supposedly\n        infallible air-gap security boundaries.\n        \n        This thesis demonstrates how theoretical models and generic\n        methodologies relating to covert channels may be applied to find\n        practical solutions to problems in real-world anonymity systems.\n        These findings confirm the existing hypothesis that covert\n        channel analysis, vulnerabilities and defences developed for\n        multilevel secure systems apply equally well to anonymity\n        systems.","bibo:AuthorList":["Murdoch, Steven J."],"dc:date":"2007-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":46649,"sim:weight":0.462218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26733,"sim:weight":0.439297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.407218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.407172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2731318,"sim:weight":0.4027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930532,"sim:weight":0.396473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98125,"sim:weight":0.396444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1004044,"sim:weight":0.382723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1027099,"sim:weight":0.359874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2690995,"sim:weight":0.35235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1133481,"sim:weight":0.349273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15628,"sim:weight":0.335449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98431,"sim:weight":0.331086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99269,"sim:weight":0.329012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104540,"sim:weight":0.327031,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998975,"sim:weight":0.322234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91442,"sim:weight":0.322164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865209,"sim:weight":0.294881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184406,"sim:weight":0.27986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5845464,"sim:weight":0.278532,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72141,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Optimizing compilation with the Value State Dependence\n        Graph","bibo:abstract":"Most modern compilers are based on variants of the Control Flow\n        Graph. Developments on this representation—specifically, SSA\n        form and the Program Dependence Graph (PDG)—have focused on\n        adding and refining data dependence information, and these\n        suggest the next step is to use a purely data-dependence-based\n        representation such as the VDG (Ernst et al.) or VSDG (Johnson\n        et al.).\n        \n        This thesis studies such representations, identifying key\n        differences in the information carried by the VSDG and several\n        restricted forms of PDG, which relate to functional programming\n        and continuations. We unify these representations in a new\n        framework for specifying the sharing of resources across a\n        computation.\n        \n        We study the problems posed by using the VSDG, and argue that\n        existing techniques have not solved the sequentialization\n        problem of mapping VSDGs back to CFGs. We propose a new compiler\n        architecture breaking sequentialization into several stages\n        which focus on different characteristics of the input VSDG, and\n        tend to be concerned with different properties of the output and\n        target machine. The stages integrate a wide variety of important\n        optimizations, exploit opportunities offered by the VSDG to\n        address many common phase-order problems, and unify many\n        operations previously considered distinct.\n        \n        Focusing on branch-intensive code, we demonstrate how effective\n        control flow—sometimes superior to that of the original source\n        code, and comparable to the best CFG optimization techniques—can\n        be reconstructed from just the dataflow information comprising\n        the VSDG. Further, a wide variety of more invasive optimizations\n        involving the duplication and specialization of program elements\n        are eased because the VSDG relaxes the CFG’s overspecification\n        of instruction and branch ordering. Specifically we identify the\n        optimization of nested branches as generalizing the problem of\n        minimizing boolean expressions.\n        \n        We conclude that it is now practical to discard the control flow\n        information rather than maintain it in parallel as is done in\n        many previous approaches (e.g. the PDG).","bibo:AuthorList":["Lawrence, Alan C."],"dc:date":"2007-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":12215,"sim:weight":0.479769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19742,"sim:weight":0.46314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710661,"sim:weight":0.458025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.433635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998542,"sim:weight":0.42921,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.417509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19537,"sim:weight":0.414538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003750,"sim:weight":0.409682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50956,"sim:weight":0.403246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239106,"sim:weight":0.40259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930772,"sim:weight":0.385109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176948,"sim:weight":0.371268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932022,"sim:weight":0.350965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933898,"sim:weight":0.337961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931555,"sim:weight":0.335964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698695,"sim:weight":0.334138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20125,"sim:weight":0.332602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.331507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19522,"sim:weight":0.330231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931534,"sim:weight":0.327417,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72143,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Complexity and infinite games on finite\n        graphs","bibo:abstract":"This dissertation investigates the interplay between complexity,\n        infinite games, and finite graphs. We present a general\n        framework for considering two-player games on finite graphs\n        which may have an infinite number of moves and we consider the\n        computational complexity of important related problems. Such\n        games are becoming increasingly important in the field of\n        theoretical computer science, particularly as a tool for formal\n        verification of non-terminating systems. The framework\n        introduced enables us to simultaneously consider problems on\n        many types of games easily, and this is demonstrated by\n        establishing previously unknown complexity bounds on several\n        types of games.\n        \n        We also present a general framework which uses infinite games to\n        define notions of structural complexity for directed graphs.\n        Many important graph parameters, from both a graph theoretic and\n        algorithmic perspective, can be defined in this system. By\n        considering natural generalizations of these games to directed\n        graphs, we obtain a novel feature of digraph complexity:\n        directed connectivity. We show that directed connectivity is an\n        algorithmically important measure of complexity by showing that\n        when it is limited, many intractable problems can be efficiently\n        solved. Whether it is structurally an important measure is yet\n        to be seen, however this dissertation makes a preliminary\n        investigation in this direction.\n        \n        We conclude that infinite games on finite graphs play an\n        important role in the area of complexity in theoretical computer\n        science.","bibo:AuthorList":["Hunter, Paul William"],"dc:date":"2007-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":85318,"sim:weight":0.522568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187481,"sim:weight":0.481897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21376,"sim:weight":0.457249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71329,"sim:weight":0.453903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98720,"sim:weight":0.441206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18295,"sim:weight":0.431918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931554,"sim:weight":0.429351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.426559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21440,"sim:weight":0.425129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20884,"sim:weight":0.42006,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21173,"sim:weight":0.406643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96523,"sim:weight":0.405615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930504,"sim:weight":0.401029,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50956,"sim:weight":0.398791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81271,"sim:weight":0.393291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20142,"sim:weight":0.392683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21881,"sim:weight":0.389899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20166,"sim:weight":0.389821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21169,"sim:weight":0.386425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47353,"sim:weight":0.385791,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72145,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Lazy Susan: dumb waiting as proof of work","bibo:abstract":"The open nature of Internet services has been of great value to\n        users, enabling dramatic innovation and evolution of services.\n        However, this openness permits many abuses of open-access\n        Internet services such as web, email, and DNS. To counteract\n        such abuses, a number of so called proof-of-work schemes have\n        been proposed. They aim to prevent or limit such abuses by\n        demanding potential clients of the service to prove that they\n        have carried out some amount of work before they will be served.\n        In this paper we show that existing resource-based schemes have\n        several problems, and instead propose latency-based\n        proof-of-work as a solution. We describe centralised and\n        distributed variants, introducing the problem class of\n        non-parallelisable shared secrets in the process. We also\n        discuss application of this technique at the network layer as a\n        way to prevent Internet distributed denial-of-service attacks.","bibo:AuthorList":["Crowcroft, Jon","Deegan, Tim","Kreibich, Christian","Mortier, Richard","Weaver, Nicholas"],"dc:date":"2007-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":684257,"sim:weight":0.33202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108018,"sim:weight":0.273175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549812,"sim:weight":0.249239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.243536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.241627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98764,"sim:weight":0.23444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.230465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393493,"sim:weight":0.230418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756999,"sim:weight":0.22973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.229214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69321,"sim:weight":0.228782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934843,"sim:weight":0.22364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929812,"sim:weight":0.218712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187679,"sim:weight":0.212907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082694,"sim:weight":0.210043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934640,"sim:weight":0.196308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.195522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082633,"sim:weight":0.194135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933440,"sim:weight":0.193612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187775,"sim:weight":0.189997,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72147,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Relationships for object-oriented programming\n        languages","bibo:abstract":"Object-oriented approaches to software design and implementation\n        have gained enormous popularity over the past two decades.\n        However, whilst models of software systems routinely allow\n        software engineers to express relationships between objects,\n        object-oriented programming languages lack this ability.\n        Instead, relationships must be encoded using complex reference\n        structures. When the model cannot be expressed directly in code,\n        it becomes more difficult for programmers to see a\n        correspondence between design and implementation – the model no\n        longer faithfully documents the code. As a result, programmer\n        intuition is lost, and error becomes more likely, particularly\n        during maintenance of an unfamiliar software system.\n        \n        This thesis explores extensions to object-oriented languages so\n        that relationships may be expressed with the same ease as\n        objects. Two languages with relationships are specified: RelJ,\n        which offers relationships in a class-based language based on\n        Java, and QSigma, which is an object calculus with heap query.\n        \n        In RelJ, relationship declarations exist at the same level as\n        class declarations: relationships are named, they may have\n        fields and methods, they may inherit from one another and their\n        instances may be referenced just like objects. Moving into the\n        object-based world, QSigma is based on the sigma-calculi of\n        Abadi and Cardelli, extended with the ability to query the heap.\n        Heap query allows objects to determine how they are referenced\n        by other objects, such that single references are sufficient for\n        establishing an inter-object relationship observable by all\n        participants. Both RelJ and QSigma are equipped with a formal\n        type system and semantics to ensure type safety in the presence\n        of these extensions.\n        \n        By giving formal models of relationships in both class- and\n        object-based settings, we can obtain general principles for\n        relationships in programming languages and, therefore, establish\n        a correspondence between implementation and design.","bibo:AuthorList":["Wren, Alisdair"],"dc:date":"2007-11","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147},{"rawReferenceText":"A Wren. (2007). Relationships for object-oriented programming languages,","authors":[],"bibo:shortTitle":"Relationships for object-oriented programming languages,","dc:date":"2007","refDocId":72147}],"similarities":[{"identifier":43185,"sim:weight":0.486117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89999,"sim:weight":0.476775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617465,"sim:weight":0.468687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.440952,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.420702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.379214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.377744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38466,"sim:weight":0.344458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.334662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.332437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.305435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276605,"sim:weight":0.297751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9651,"sim:weight":0.289192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.281791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.260493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.259669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.257238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.256079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.253964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.252873,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72149,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Vector microprocessors for cryptography","bibo:abstract":"Embedded security devices like ‘Trusted Platforms’ require both\n        scalability (of power, performance and area) and flexibility (of\n        software and countermeasures). This thesis illustrates how data\n        parallel techniques can be used to implement scalable\n        architectures for cryptography. Vector processing is used to\n        provide high performance, power efficient and scalable\n        processors. A programmable vector 4-stage pipelined\n        co-processor, controlled by a scalar MIPS compatible processor,\n        is described. The instruction set of the co-processor is defined\n        for cryptographic algorithms like AES and Montgomery modular\n        multiplication for RSA and ECC. The instructions are assessed\n        using an instruction set simulator based on the ArchC tool. This\n        instruction set simulator is used to see the impact of varying\n        the vector register depth (p) and the number of vector\n        processing units (r). Simulations indicate that for vector\n        versions of AES, RSA and ECC the performance improves in\n        O(log(r)). A cycle-accurate synthesisable Verilog model of the\n        system (VeMICry) is implemented in TSMC’s 90nm technology and\n        used to show that the best area/power/performance tradeoff is\n        reached for r \u003d (p/4). Also, this highly scalable design allows\n        area/power/performance trade-offs to be made for a panorama of\n        applications ranging from smart-cards to servers. This thesis\n        is, to my best knowledge, the first attempt to implement\n        embedded cryptography using vector processing techniques.","bibo:AuthorList":["Fournier, Jacques Jean-Alain"],"dc:date":"2007-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":478173,"sim:weight":0.422892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.414754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80584,"sim:weight":0.414733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88838,"sim:weight":0.398587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008795,"sim:weight":0.38482,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778563,"sim:weight":0.351683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":969578,"sim:weight":0.349071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80580,"sim:weight":0.347767,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003740,"sim:weight":0.344391,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003741,"sim:weight":0.342751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058072,"sim:weight":0.33356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.33176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":777570,"sim:weight":0.327509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":870288,"sim:weight":0.322986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1106446,"sim:weight":0.31757,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.308765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902596,"sim:weight":0.301955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1024606,"sim:weight":0.300256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2674394,"sim:weight":0.297428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":998701,"sim:weight":0.29739,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72151,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Context aware service composition","bibo:abstract":"Context aware applications respond and adapt to changes in the\n        computing environment. For example, they may react when the\n        location of the user or the capabilities of the device used\n        change. Despite the increasing importance and popularity of such\n        applications, advances in application models to support their\n        development have not kept up. Legacy application design models,\n        which embed contextual dependencies in the form of if-then rules\n        specifying how applications should react to context changes, are\n        still widely used. Such models are impractical to accommodate\n        the large variety of possibly even unanticipated context types\n        and their values.\n        \n        This dissertation proposes a new application model for building\n        context aware applications, considering them as dynamically\n        composed sequences of calls to services, software components\n        that perform well-defined computational operations and export\n        open interfaces through which they can be invoked. This work\n        employs goal-oriented inferencing from planning technologies for\n        selecting the services and assembling the sequence of their\n        execution, allowing different compositions to result from\n        different context parameters such as resources available, time\n        constraints, and user location. Contextual changes during the\n        execution of the services may trigger further re-composition\n        causing the application to evolve dynamically.\n        \n        An important challenge in providing a context aware service\n        composition facility is dealing with failures that may occur,\n        for instance as a result of context changes or missing service\n        descriptions. To handle composition failures, this dissertation\n        introduces GoalMorph, a system which transforms failed\n        composition requests into alternative ones that can be solved.\n        \n        This dissertation describes the design and implementation of the\n        proposed framework for context aware service composition.\n        Experimental evaluation of a realistic infotainment application\n        demonstrates that the framework provides an effcient and\n        scalable solution. Furthermore, it shows that GoalMorph\n        transforms goals successfully, increasing the utility of\n        achieved goals without imposing a prohibitive composition time\n        overhead.\n        \n        By developing the proposed framework for fault-tolerant, context\n        aware service composition this work ultimately lowers the\n        barrier for building extensible applications that automatically\n        adapt to the user’s context. This represents a step towards a\n        new paradigm for developing adaptive software to accommodate the\n        increasing dynamicity of computing environments.","bibo:AuthorList":["Vuković, Maja"],"dc:date":"2007-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":103167,"sim:weight":0.589236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826904,"sim:weight":0.539385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18820,"sim:weight":0.535523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932652,"sim:weight":0.531856,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827086,"sim:weight":0.531553,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997469,"sim:weight":0.530263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2696,"sim:weight":0.5299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931262,"sim:weight":0.527597,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1056940,"sim:weight":0.527525,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930840,"sim:weight":0.525598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000300,"sim:weight":0.523674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18786,"sim:weight":0.514231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998838,"sim:weight":0.508018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997786,"sim:weight":0.506139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793209,"sim:weight":0.49834,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23991,"sim:weight":0.498167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49678,"sim:weight":0.497865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41122,"sim:weight":0.496559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000343,"sim:weight":0.494889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003796,"sim:weight":0.493005,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72152,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A smooth manifold based construction of approximating\n        lofted surfaces","bibo:abstract":"We present a new method for constructing a smooth manifold\n        approximating a curve network or control mesh. In our two-step\n        method, smooth vertex patches are initially defined by\n        extrapolating and then blending a univariate or bivariate\n        surface representation. Each face is then constructed by\n        blending together the segments of each vertex patch\n        corresponding to the face corners. By approximating the input\n        curve network, rather than strictly interpolating it, we have\n        greater flexibility in controlling surface behaviour and have\n        local control. Additionally no initial control mesh fitting or\n        fairing needs to be performed, and no derivative information is\n        needed to ensure continuity at patch boundaries.","bibo:AuthorList":["Southern, Richard","Dodgson, Neil A."],"dc:date":"2007-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":334843,"sim:weight":0.278025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334920,"sim:weight":0.25895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334764,"sim:weight":0.255256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.247585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":240353,"sim:weight":0.247419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999894,"sim:weight":0.246556,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44411,"sim:weight":0.23961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765905,"sim:weight":0.220077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397942,"sim:weight":0.219283,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.218266,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.216538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":135150,"sim:weight":0.214193,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43397,"sim:weight":0.208113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109200,"sim:weight":0.200232,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43138,"sim:weight":0.199644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.199444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334869,"sim:weight":0.192408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766700,"sim:weight":0.191741,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334549,"sim:weight":0.190862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":649821,"sim:weight":0.187124,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72154,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Pulse-based, on-chip interconnect","bibo:abstract":"This thesis describes the development of an on-chip\n        point-to-point link, with particular emphasis on the reduction\n        of its global metal area footprint.\n        \n        To reduce its metal footprint, the interconnect uses a serial\n        transmission approach. 8-bit data is sent using just two wires,\n        through a pulse-based technique, inspired by the GasP\n        interconnect from Sun Microsystems. Data and control signals are\n        transmitted bi-directionally on a wire using this double-edged,\n        pulse-based signalling protocol, and formatted using a variant\n        of dual-rail encoding. These choices enable a reduction in the\n        number of wires needed, an improvement in the acknowledgement\n        overhead of the asynchronous protocol, and the ability to cross\n        clock domains without synchronisation hazards.\n        \n        New, stateful, repeaters are demonstrated, and results from\n        spice simulations of the system show that data can be\n        transferred at over 1Gbit/s, over 1mm of minimum-sized,\n        minimally-spaced metal 5 wiring, on a 180nm (0.18um) technology.\n        This reduces to only 926Mbit/s, when 10mm of wiring is\n        considered, and represents a channel utilisation of a very\n        attractive 45% of theoretical capacity at this length. Analysis\n        of latencies, energy consumption, and area use are also\n        provided.\n        \n        The point-to-point link is then expanded with the invention and\n        demonstration of a router and an arbitrated merge element, to\n        produce a Network-on-Chip (NoC) design, called RasP. The full\n        system is then evaluated, and peak throughput is shown to be\n        763Mbit/s for 1mm of wiring, reducing to 599Mbit/s for 10mm of\n        the narrow metal 5 interconnect.\n        \n        Finally, RasP is compared in performance with the Chain\n        interconnect from the University of Manchester. Results for the\n        metrics of throughput, latency, energy consumption and area\n        footprint show that the two systems perform very similarly — the\n        maximum absolute deviation is under 25% for throughput, latency\n        and area; and the energy-efficiency of RasP is approximately\n        twice that of Chain. Between the two systems, RasP has the\n        smaller latency, energy and area requirements and is shown to be\n        a viable alternative NoC design.","bibo:AuthorList":["Hollis, Simon J."],"dc:date":"2007-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":71316,"sim:weight":0.624173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68155,"sim:weight":0.557682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68154,"sim:weight":0.537089,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68796,"sim:weight":0.522032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68810,"sim:weight":0.490878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68795,"sim:weight":0.479614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68811,"sim:weight":0.468213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68153,"sim:weight":0.464886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68129,"sim:weight":0.454142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68152,"sim:weight":0.450058,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68130,"sim:weight":0.445358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68151,"sim:weight":0.436199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.435855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71317,"sim:weight":0.391137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24665,"sim:weight":0.383893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932111,"sim:weight":0.382721,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827024,"sim:weight":0.382239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68798,"sim:weight":0.365392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85232,"sim:weight":0.361201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930669,"sim:weight":0.355495,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72156,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Scaling Mount Concurrency: scalability and progress in\n        concurrent algorithms","bibo:abstract":"As processor speeds plateau, chip manufacturers are turning to\n        multi-processor and multi-core designs to increase performance.\n        As the number of simultaneous threads grows, Amdahl’s Law means\n        the performance of programs becomes limited by the cost that\n        does not scale: communication, via the memory subsystem.\n        Algorithm design is critical in minimizing these costs.\n        \n        In this dissertation, I first show that existing instruction set\n        architectures must be extended to allow general scalable\n        algorithms to be built. Since it is impractical to entirely\n        abandon existing hardware, I then present a reasonably scalable\n        implementation of a map built on the widely-available\n        compare-and-swap primitive, which outperforms existing\n        algorithms for a range of usages.\n        \n        Thirdly, I introduce a new primitive operation, and show that it\n        provides efficient and scalable solutions to several problems\n        before proving that it satisfies strong theoretical properties.\n        Finally, I outline possible hardware implementations of the\n        primitive with different properties and costs, and present\n        results from a hardware evaluation, demonstrating that the new\n        primitive can provide good practical performance.","bibo:AuthorList":["Purcell, Chris J."],"dc:date":"2007-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8826908,"sim:weight":0.305095,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.262527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934816,"sim:weight":0.241224,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.233666,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041558,"sim:weight":0.228208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393928,"sim:weight":0.21717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45662,"sim:weight":0.212894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.205841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.20372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653036,"sim:weight":0.194518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.184376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2073694,"sim:weight":0.176532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87106,"sim:weight":0.16768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.165751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1651709,"sim:weight":0.161839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.159345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.156483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.155442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960779,"sim:weight":0.155083,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710548,"sim:weight":0.15495,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72157,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An introduction to inertial navigation","bibo:abstract":"Until recently the weight and size of inertial sensors has\n        prohibited their use in domains such as human motion capture.\n        Recent improvements in the performance of small and lightweight\n        micro-machined electromechanical systems (MEMS) inertial sensors\n        have made the application of inertial techniques to such\n        problems possible. This has resulted in an increased interest in\n        the topic of inertial navigation, however current introductions\n        to the subject fail to sufficiently describe the error\n        characteristics of inertial systems.\n        \n        We introduce inertial navigation, focusing on strapdown systems\n        based on MEMS devices. A combination of measurement and\n        simulation is used to explore the error characteristics of such\n        systems. For a simple inertial navigation system (INS) based on\n        the Xsens Mtx inertial measurement unit (IMU), we show that the\n        average error in position grows to over 150 m after 60 seconds\n        of operation. The propagation of orientation errors caused by\n        noise perturbing gyroscope signals is identified as the critical\n        cause of such drift. By simulation we examine the significance\n        of individual noise processes perturbing the gyroscope signals,\n        identifying white noise as the process which contributes most to\n        the overall drift of the system.\n        \n        Sensor fusion and domain specific constraints can be used to\n        reduce drift in INSs. For an example INS we show that sensor\n        fusion using magnetometers can reduce the average error in\n        position obtained by the system after 60 seconds from over 150 m\n        to around 5 m. We conclude that whilst MEMS IMU technology is\n        rapidly improving, it is not yet possible to build a MEMS based\n        INS which gives sub-meter position accuracy for more than one\n        minute of operation.","bibo:AuthorList":["Woodman, Oliver J."],"dc:date":"2007-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":387088,"sim:weight":0.36307,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.322261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617471,"sim:weight":0.314303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549746,"sim:weight":0.307536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.291859,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68067,"sim:weight":0.289747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1496193,"sim:weight":0.286962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.269645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23396,"sim:weight":0.248698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":31990,"sim:weight":0.247314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26371,"sim:weight":0.239938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.20774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10716,"sim:weight":0.202788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709966,"sim:weight":0.19782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.193418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26528,"sim:weight":0.169141,"sim:AssociationMethod":"similarity_cosine"},{"identifier":281289,"sim:weight":0.167618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101267,"sim:weight":0.162131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46552,"sim:weight":0.16098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145893,"sim:weight":0.158035,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72160,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Efficient maximum-likelihood decoding of spherical\n        lattice codes","bibo:abstract":"A new framework for efficient and exact Maximum-Likelihood (ML)\n        decoding of spherical lattice codes is developed. It employs a\n        double-tree structure: The first is that which underlies\n        established tree-search decoders; the second plays the crucial\n        role of guiding the primary search by specifying admissible\n        candidates and is our focus in this report. Lattice codes have\n        long been of interest due to their rich structure, leading to\n        numerous decoding algorithms for unbounded lattices, as well as\n        those with axis-aligned rectangular shaping regions. Recently,\n        spherical Lattice Space-Time (LAST) codes were proposed to\n        realize the optimal diversity-multiplexing tradeoff of MIMO\n        channels. We address the so-called boundary control problem\n        arising from the spherical shaping region defining these codes.\n        This problem is complicated because of the varying number of\n        candidates potentially under consideration at each search stage;\n        it is not obvious how to address it effectively within the\n        frameworks of existing schemes. Our proposed strategy is\n        compatible with all sequential tree-search detectors, as well as\n        auxiliary processing such as the MMSE-GDFE and lattice\n        reduction. We demonstrate the superior performance and\n        complexity profiles achieved when applying the proposed boundary\n        control in conjunction with two current efficient ML detectors\n        and show an improvement of 1dB over the state-of-the-art at a\n        comparable complexity.","bibo:AuthorList":["Su, Karen","Berenguer, Inaki","Wassell, Ian J.","Wang, Xiaodong"],"dc:date":"2007-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26422,"sim:weight":0.282304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145609,"sim:weight":0.276006,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26044,"sim:weight":0.25747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.256731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933706,"sim:weight":0.247997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997781,"sim:weight":0.241584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933009,"sim:weight":0.231458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931515,"sim:weight":0.225014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933439,"sim:weight":0.223526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930535,"sim:weight":0.211216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146173,"sim:weight":0.207166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26626,"sim:weight":0.207009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512302,"sim:weight":0.19112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932053,"sim:weight":0.189205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931367,"sim:weight":0.188819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931965,"sim:weight":0.18363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23410,"sim:weight":0.174973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146078,"sim:weight":0.165832,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710610,"sim:weight":0.162563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930429,"sim:weight":0.161078,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72162,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Anti-Ω: the weakest failure detector for set\n        agreement","bibo:abstract":"In the set agreement problem, n processes have to decide on at\n        most n−1 of the proposed values. This paper shows that the\n        anti-Ω failure detector is both sufficient and necessary to\n        implement set agreement in an asynchronous shared-memory system\n        equipped with registers. Each query to anti-Ω returns a single\n        process id; the specification ensures that there is a correct\n        process whose id is returned only finitely many times.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2007-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.265058,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26045,"sim:weight":0.233716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43272,"sim:weight":0.206828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.17391,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116788,"sim:weight":0.168983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.168782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999088,"sim:weight":0.156434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.152132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.151424,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.150527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.149319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19444,"sim:weight":0.149135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.147695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.14355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.141766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.137975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.135359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.134183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931237,"sim:weight":0.129775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.126251,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72164,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automatic classification of eventual failure\n        detectors","bibo:abstract":"Eventual failure detectors, such as Ω or ♢P, can make\n        arbitrarily many mistakes before they start providing correct\n        information. This paper shows that any detector implementable in\n        an purely asynchronous system can be implemented as a function\n        of only the order of most-recently heard-from processes. The\n        finiteness of this representation means that eventual failure\n        detectors can be enumerated and their relative strengths tested\n        automatically. The results for systems with two and three\n        processes are presented.\n        \n        Implementability can also be modelled as a game between Prover\n        and Disprover. This approach not only speeds up automatic\n        implementability testing, but also results in shorter and more\n        intuitive proofs. I use this technique to identify the new\n        weakest failure detector anti-Ω and prove its properties. Anti-Ω\n        outputs process ids and, while not necessarily stabilizing, it\n        ensures that some correct process is eventually never output.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2007-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43272,"sim:weight":0.25078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998976,"sim:weight":0.206759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707682,"sim:weight":0.202531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.200924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.180735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.173955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.168721,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85083,"sim:weight":0.166404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277825,"sim:weight":0.159267,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707701,"sim:weight":0.159048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.156287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74038,"sim:weight":0.155099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933163,"sim:weight":0.152476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.146663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.146592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.142067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":61040,"sim:weight":0.142004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.13979,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.139151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386398,"sim:weight":0.136716,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72166,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Toward an undergraduate programme in Interdisciplinary\n        Design","bibo:abstract":"This technical report describes an experimental syllabus\n        proposal that was developed for the Cambridge Computer Science\n        Tripos (the standard undergraduate degree programme in Computer\n        Science at Cambridge). The motivation for the proposal was to\n        create an innovative research-oriented taught course that would\n        be compatible with the broader policy goals of the Crucible\n        network for research in interdisciplinary design. As the course\n        is not proceeding, the syllabus is published here for use by\n        educators and educational researchers with interests in design\n        teaching.","bibo:AuthorList":["Blackwell, Alan F."],"dc:date":"2007-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":109218,"sim:weight":0.446681,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.417398,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.34106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.326714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.315509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99976,"sim:weight":0.302116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2754878,"sim:weight":0.244635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4160767,"sim:weight":0.237521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146140,"sim:weight":0.231185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101584,"sim:weight":0.208302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8120,"sim:weight":0.198079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931404,"sim:weight":0.196528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12701,"sim:weight":0.184112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55042,"sim:weight":0.180948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1154677,"sim:weight":0.180685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573491,"sim:weight":0.17736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81716,"sim:weight":0.176323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45362,"sim:weight":0.173611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3172,"sim:weight":0.173517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2755110,"sim:weight":0.171481,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72168,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Preconditions on geometrically sensitive subdivision\n        schemes","bibo:abstract":"Our objective is to create subdivision schemes with limit\n        surfaces which are surfaces useful in engineering (spheres,\n        cylinders, cones etc.) without resorting to special cases. The\n        basic idea explored by us previously in the curve case is that\n        if the property that all vertices lie on an object of the\n        required class can be preserved through the subdivision\n        refinement, it will be preserved into the limit surface also.\n        The next obvious step was to try a bivariate example. We\n        therefore identified the simplest possible scheme and\n        implemented it. However, this misbehaved quite dramatically.\n        This report, by doing the limit analysis, identifies why the\n        misbehaviour occurred, and draws conclusions about how the\n        problems should be avoided.","bibo:AuthorList":["Dodgson, Neil A.","Sabin, Malcolm A.","Southern, Richard"],"dc:date":"2007-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":18180,"sim:weight":0.299037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":31990,"sim:weight":0.287752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.270504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.259903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98638,"sim:weight":0.257731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334869,"sim:weight":0.192857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381904,"sim:weight":0.188351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929882,"sim:weight":0.179086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.178293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44865,"sim:weight":0.177724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43405,"sim:weight":0.175722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108659,"sim:weight":0.173632,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.169464,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.167161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.165287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72959,"sim:weight":0.164852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.16423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933522,"sim:weight":0.161469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99260,"sim:weight":0.160551,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74415,"sim:weight":0.157775,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72170,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Cluster storage for commodity computation","bibo:abstract":"Standards in the computer industry have made basic components\n        and entire architectures into commodities, and commodity\n        hardware is increasingly being used for the heavy lifting\n        formerly reserved for specialised platforms. Now software and\n        services are following. Modern updates to virtualization\n        technology make it practical to subdivide commodity servers and\n        manage groups of heterogeneous services using commodity\n        operating systems and tools, so services can be packaged and\n        managed independent of the hardware on which they run.\n        Computation as a commodity is soon to follow, moving beyond the\n        specialised applications typical of today’s utility computing.\n        \n        In this dissertation, I argue for the adoption of service\n        clusters—clusters of commodity machines under central control,\n        but running services in virtual machines for arbitrary,\n        untrusted clients—as the basic building block for an economy of\n        flexible commodity computation. I outline the requirements this\n        platform imposes on its storage system and argue that they are\n        necessary for service clusters to be practical, but are not\n        found in existing systems.\n        \n        Next I introduce Envoy, a distributed file system for service\n        clusters. In addition to meeting the needs of a new environment,\n        Envoy introduces a novel file distribution scheme that organises\n        metadata and cache management according to runtime demand. In\n        effect, the file system is partitioned and control of each part\n        given to the client that uses it the most; that client in turn\n        acts as a server with caching for other clients that require\n        concurrent access. Scalability is limited only by runtime\n        contention, and clients share a perfectly consistent cache\n        distributed across the cluster. As usage patterns change, the\n        partition boundaries are updated dynamically, with urgent\n        changes made quickly and more minor optimisations made over a\n        longer period of time.\n        \n        Experiments with the Envoy prototype demonstrate that service\n        clusters can support cheap and rapid deployment of services,\n        from isolated instances to groups of cooperating components with\n        shared storage demands.","bibo:AuthorList":["Ross, Russell Glen"],"dc:date":"2007-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1145576,"sim:weight":0.484356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931344,"sim:weight":0.452623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920086,"sim:weight":0.449753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698588,"sim:weight":0.429296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105172,"sim:weight":0.42231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930971,"sim:weight":0.41978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69259,"sim:weight":0.413755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023877,"sim:weight":0.409945,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69260,"sim:weight":0.401315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.393987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69320,"sim:weight":0.392932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999220,"sim:weight":0.383449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51538,"sim:weight":0.380001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1397146,"sim:weight":0.378824,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008743,"sim:weight":0.378061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997939,"sim:weight":0.377823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932164,"sim:weight":0.377789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000404,"sim:weight":0.375473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69318,"sim:weight":0.373821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69286,"sim:weight":0.373245,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72172,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Removing polar rendering artifacts in subdivision\n        surfaces","bibo:abstract":"There is a belief that subdivision schemes require the\n        subdominant eigenvalue, λ, to be the same around extraordinary\n        vertices as in the regular regions of the mesh. This belief is\n        owing to the polar rendering artifacts which occur around\n        extraordinary points when λ is significantly larger than in the\n        regular regions. By constraining the tuning of subdivision\n        schemes to solutions which fulfill this condition we may prevent\n        ourselves from finding the optimal limit surface. We show that\n        the perceived problem is purely a rendering artifact and that it\n        does not reflect the quality of the underlying limit surface.\n        Using the bounded curvature Catmull-Clark scheme as an example,\n        we describe three practical methods by which this rendering\n        artifact can be removed, thereby allowing us to tune subdivision\n        schemes using any appropriate values of λ.","bibo:AuthorList":["Augsdörfer, Ursula H.","Dodgson, Neil A.","Sabin, Malcolm A."],"dc:date":"2007-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":334869,"sim:weight":0.317513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998620,"sim:weight":0.308756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51966,"sim:weight":0.302364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.284477,"sim:AssociationMethod":"similarity_cosine"},{"identifier":337836,"sim:weight":0.250544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929808,"sim:weight":0.219413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.197432,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43138,"sim:weight":0.187868,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98638,"sim:weight":0.175763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.17206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43084,"sim:weight":0.171816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44411,"sim:weight":0.169351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664641,"sim:weight":0.168756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43144,"sim:weight":0.163443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1665559,"sim:weight":0.162668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.15857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109200,"sim:weight":0.15759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1633954,"sim:weight":0.15621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568638,"sim:weight":0.155761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43397,"sim:weight":0.151478,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72174,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Name-passing process calculi: operational models and\n        structural operational semantics","bibo:abstract":"This thesis is about the formal semantics of name-passing\n        process calculi. We study operational models by relating various\n        different notions of model, and we analyse structural\n        operational semantics by extracting a congruence rule format\n        from a model theory. All aspects of structural operational\n        semantics are addressed: behaviour, syntax, and rule-based\n        inductive definitions.\n        \n        A variety of models for name-passing behaviour are considered\n        and developed. We relate classes of indexed labelled transition\n        systems, proposed by Cattani and Sewell, with coalgebraic models\n        proposed by Fiore and Turi. A general notion of structured\n        coalgebra is introduced and developed, and a natural notion of\n        structured bisimulation is related to Sangiorgi’s open\n        bisimulation for the π-calculus. At first the state spaces are\n        organised as presheaves, but it is reasonable to constrain the\n        models to sheaves in a category known as the Schanuel topos.\n        This sheaf topos is exhibited as equivalent to a category of\n        named-sets proposed by Montanari and Pistore for efficient\n        verification of name-passing systems.\n        \n        Syntax for name-passing calculi involves variable binding and\n        substitution. Gabbay and Pitts proposed nominal sets as an\n        elegant model for syntax with binding, and we develop a\n        framework for substitution in this context. The category of\n        nominal sets is equivalent to the Schanuel topos, and so syntax\n        and behaviour can be studied within one universe.\n        \n        An abstract account of structural operational semantics was\n        developed by Turi and Plotkin. They explained the inductive\n        specification of a system by rules in the GSOS format of Bloom\n        et al., in terms of initial algebra recursion for lifting a\n        monad of syntax to a category of behaviour. The congruence\n        properties of bisimilarity can be observed at this level of\n        generality. We study this theory in the general setting of\n        structured coalgebras, and then for the specific case of\n        name-passing systems, based on categories of nominal sets.\n        \n        At the abstract level of category theory, classes of rules are\n        understood as natural transformations. In the concrete domain,\n        though, rules for name-passing systems are formulae in a\n        suitable logical framework. By imposing a format on rules in\n        Pitts’s nominal logic, we characterise a subclass of rules in\n        the abstract domain. Translating the abstract results, we\n        conclude that, for a name-passing process calculus defined by\n        rules in this format, a variant of open bisimilarity is a\n        congruence.","bibo:AuthorList":["Staton, Sam"],"dc:date":"2007-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934327,"sim:weight":0.541127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.496742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385348,"sim:weight":0.492103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934469,"sim:weight":0.480988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934455,"sim:weight":0.47925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.470048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934428,"sim:weight":0.469445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934255,"sim:weight":0.452426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934421,"sim:weight":0.451578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934348,"sim:weight":0.449829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934473,"sim:weight":0.443413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19260,"sim:weight":0.441091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.441015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934476,"sim:weight":0.435363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934282,"sim:weight":0.433289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934343,"sim:weight":0.424481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":332867,"sim:weight":0.421893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997444,"sim:weight":0.419855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.418715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.418715,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72176,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A marriage of rely/guarantee and separation\n        logic","bibo:abstract":"In the quest for tractable methods for reasoning about\n        concurrent algorithms both rely/guarantee logic and separation\n        logic have made great advances. They both seek to tame, or\n        control, the complexity of concurrent interactions, but neither\n        is the ultimate approach. Rely-guarantee copes naturally with\n        interference, but its specifications are complex because they\n        describe the entire state. Conversely separation logic has\n        difficulty dealing with interference, but its specifications are\n        simpler because they describe only the relevant state that the\n        program accesses.\n        \n        We propose a combined system which marries the two approaches.\n        We can describe interference naturally (using a relation as in\n        rely/guarantee), and where there is no interference, we can\n        reason locally (as in separation logic). We demonstrate the\n        advantages of the combined approach by verifying a lock-coupling\n        list algorithm, which actually disposes/frees removed nodes.","bibo:AuthorList":["Vafeiadis, Viktor","Parkinson, Matthew"],"dc:date":"2007-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98816,"sim:weight":0.365944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.319593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.281825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.257818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.21542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.201104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.192655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.165683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.154698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.151931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.149556,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.14537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.141636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.132203,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.131912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393493,"sim:weight":0.129751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87106,"sim:weight":0.12698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.126856,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932053,"sim:weight":0.126689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48414,"sim:weight":0.126636,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72178,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Dependable systems for Sentient Computing","bibo:abstract":"Computers and electronic devices are continuing to proliferate\n        throughout our lives. Sentient Computing systems aim to reduce\n        the time and effort required to interact with these devices by\n        composing them into systems which fade into the background of\n        the user’s perception. Failures are a significant problem in\n        this scenario because their occurrence will pull the system into\n        the foreground as the user attempts to discover and understand\n        the fault. However, attempting to exist and interact with users\n        in a real, unpredictable, physical environment rather than a\n        well-constrained virtual environment makes failures inevitable.\n        \n        This dissertation describes a study of dependability. A\n        dependable system permits applications to discover the extent of\n        failures and to adapt accordingly such that their continued\n        behaviour is intuitive to users of the system.\n        \n        Cantag, a reliable marker-based machine-vision system, has been\n        developed to aid the investigation of dependability. The\n        description of Cantag includes specific contributions for marker\n        tracking such as rotationally invariant coding schemes and\n        reliable back-projection for circular tags. An analysis of\n        Cantag’s theoretical performance is presented and compared to\n        its real-world behaviour. This analysis is used to develop\n        optimised tag designs and performance metrics. The use of\n        validation is proposed to permit runtime calculation of\n        observable metrics and verification of system components. Formal\n        proof methods are combined with a logical validation framework\n        to show the validity of performance optimisations.","bibo:AuthorList":["Rice, Andrew C."],"dc:date":"2007-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43157,"sim:weight":0.44762,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10949,"sim:weight":0.426983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999668,"sim:weight":0.424211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.412667,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934116,"sim:weight":0.400269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70218,"sim:weight":0.385592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70108,"sim:weight":0.384077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19833,"sim:weight":0.380538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21207,"sim:weight":0.379346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997985,"sim:weight":0.378007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999647,"sim:weight":0.376074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932118,"sim:weight":0.372545,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999871,"sim:weight":0.372273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70111,"sim:weight":0.371853,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20660,"sim:weight":0.36841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70110,"sim:weight":0.365148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70150,"sim:weight":0.361238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70155,"sim:weight":0.359086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70109,"sim:weight":0.357995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70249,"sim:weight":0.357706,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72181,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Effect of severe image compression on iris recognition\n        performance","bibo:abstract":"We investigate three schemes for severe compression of iris\n        images, in order to assess what their impact would be on\n        recognition performance of the algorithms deployed today for\n        identifying persons by this biometric feature. Currently,\n        standard iris images are 600 times larger than the IrisCode\n        templates computed from them for database storage and search;\n        but it is administratively desired that iris data should be\n        stored, transmitted, and embedded in media in the form of images\n        rather than as templates computed with proprietary algorithms.\n        To reconcile that goal with its implications for bandwidth and\n        storage, we present schemes that combine region-of-interest\n        isolation with JPEG and JPEG2000 compression at severe levels,\n        and we test them using a publicly available government database\n        of iris images. We show that it is possible to compress iris\n        images to as little as 2 KB with minimal impact on recognition\n        performance. Only some 2% to 3% of the bits in the IrisCode\n        templates are changed by such severe image compression. Standard\n        performance metrics such as error trade-off curves document very\n        good recognition performance despite this reduction in data size\n        by a net factor of 150, approaching a convergence of image data\n        size and template size.","bibo:AuthorList":["Daugman, John","Downing, Cathryn"],"dc:date":"2007-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":764653,"sim:weight":0.594748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003648,"sim:weight":0.583605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756019,"sim:weight":0.540705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764394,"sim:weight":0.376827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019153,"sim:weight":0.366069,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2734386,"sim:weight":0.320634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003382,"sim:weight":0.304286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1555646,"sim:weight":0.303938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123295,"sim:weight":0.300465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":822416,"sim:weight":0.287549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":870280,"sim:weight":0.284784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982184,"sim:weight":0.284176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.278497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4181792,"sim:weight":0.26627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.262742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397980,"sim:weight":0.25944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52390,"sim:weight":0.254823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":953494,"sim:weight":0.24724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.241544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101200,"sim:weight":0.239966,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72182,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bubble Rap: Forwarding in small world DTNs in ever\n        decreasing circles","bibo:abstract":"In this paper we seek to improve understanding of the structure\n        of human mobility, and to use this in the design of forwarding\n        algorithms for Delay Tolerant Networks for the dissemination of\n        data amongst mobile users.\n        \n        Cooperation binds but also divides human society into\n        communities. Members of the same community interact with each\n        other preferentially. There is structure in human society.\n        Within society and its communities, individuals have varying\n        popularity. Some people are more popular and interact with more\n        people than others; we may call them hubs. Popularity ranking is\n        one facet of the population. In many physical networks, some\n        nodes are more highly connected to each other than to the rest\n        of the network. The set of such nodes are usually called\n        clusters, communities, cohesive groups or modules. There is\n        structure to social networking. Different metrics can be used\n        such as information flow, Freeman betweenness, closeness and\n        inference power, but for all of them, each node in the network\n        can be assigned a global centrality value.\n        \n        What can be inferred about individual popularity, and the\n        structure of human society from measurements within a network?\n        How can the local and global characteristics of the network be\n        used practically for information dissemination? We present and\n        evaluate a sequence of designs for forwarding algorithms for\n        Pocket Switched Networks, culminating in Bubble, which exploit\n        increasing levels of information about mobility and interaction.","bibo:AuthorList":["Hui, Pan","Crowcroft, Jon"],"dc:date":"2007-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2043317,"sim:weight":0.427426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.383366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.378417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766083,"sim:weight":0.372375,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.34638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107698,"sim:weight":0.343014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568724,"sim:weight":0.338292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1634050,"sim:weight":0.335711,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512135,"sim:weight":0.333843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929903,"sim:weight":0.333152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933428,"sim:weight":0.320314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.314684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757447,"sim:weight":0.297705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109246,"sim:weight":0.295659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931241,"sim:weight":0.294685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44051,"sim:weight":0.29249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41286,"sim:weight":0.287958,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.284918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2779656,"sim:weight":0.283175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.275789,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72185,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Simulation of colliding constrained rigid\n        bodies","bibo:abstract":"I describe the development of a program to simulate the dynamic\n        behaviour of interacting rigid bodies. Such a simulation may be\n        used to generate animations of articulated characters in 3D\n        graphics applications. Bodies may have an arbitrary shape,\n        defined by a triangle mesh, and may be connected with a variety\n        of different joints. Joints are represented by constraint\n        functions which are solved at run-time using Lagrange\n        multipliers. The simulation performs collision detection and\n        prevents penetration of rigid bodies by applying impulses to\n        colliding bodies and reaction forces to bodies in resting\n        contact.\n        \n        The simulation is shown to be physically accurate and is tested\n        on several different scenes, including one of an articulated\n        human character falling down a flight of stairs.\n        \n        An appendix describes how to derive arbitrary constraint\n        functions for the Lagrange multiplier method. Collisions and\n        joints are both represented as constraints, which allows them to\n        be handled with a unified algorithm. The report also includes\n        some results relating to the use of quaternions in dynamic\n        simulations.","bibo:AuthorList":["Kleppmann, Martin"],"dc:date":"2007-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1386251,"sim:weight":0.428506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.428097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.416818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.415545,"sim:AssociationMethod":"similarity_cosine"},{"identifier":31990,"sim:weight":0.372948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381997,"sim:weight":0.367765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934402,"sim:weight":0.36367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386758,"sim:weight":0.358707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.311667,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10716,"sim:weight":0.307993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286778,"sim:weight":0.214932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":287223,"sim:weight":0.194886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.188122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43589,"sim:weight":0.185595,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929452,"sim:weight":0.184949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43154,"sim:weight":0.18331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.173442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147453,"sim:weight":0.168547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43103,"sim:weight":0.165995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47659,"sim:weight":0.16296,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72187,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Translating HOL functions to hardware","bibo:abstract":"Delivering error-free products is still a major challenge for\n        hardware and software engineers. Due to the increasingly growing\n        complexity of computing systems, there is a demand for higher\n        levels of automation in formal verification.\n        \n        This dissertation proposes an approach to generate formally\n        verified circuits automatically. The main outcome of our project\n        is a compiler implemented on top of the theorem prover HOL4\n        which translates a subset of higher-order logic to circuits. The\n        subset of the logic is a first-order tail-recursive functional\n        language. The compiler takes a function f as argument and\n        automatically produces the theorem “⊢ C implements f” where C is\n        a circuit and “implements” is a correctness relation between a\n        circuit and a function. We achieve full mechanisation of proofs\n        by defining theorems which are composable. The correctness of a\n        circuit can be mechanically determined by the correctness of its\n        sub-circuits. This technology allows the designer to focus on\n        higher levels of abstraction instead of reasoning and verifying\n        systems at the gate level.\n        \n        A pretty-printer translates netlists described in higher-order\n        logic to structural Verilog. Our compiler is integrated with\n        Altera tools to run our circuits in FPGAs. Thus the theorem\n        prover is used as an environment for supporting the development\n        process from formal specification to implementation.\n        \n        Our approach has been tested with fairly substantial case\n        studies. We describe the design and the verification of a\n        multiplier and a simple microcomputer which has shown us that\n        the compiler supports small and medium-sized applications.\n        Although this approach does not scale to industrial-sized\n        applications yet, it is a first step towards the implementation\n        of a new technology that can raise the level of mechanisation in\n        formal verification.","bibo:AuthorList":["Iyoda, Juliano"],"dc:date":"2007-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.339005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.335617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930922,"sim:weight":0.33359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.33204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.292102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.291206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.278056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.277919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57391,"sim:weight":0.277578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932992,"sim:weight":0.274288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.268981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.265855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.263156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.262368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.259074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.231993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765423,"sim:weight":0.224092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.219038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":939320,"sim:weight":0.215082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918246,"sim:weight":0.215044,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72188,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Indirect channels: a bandwidth-saving technique for\n        fault-tolerant protocols","bibo:abstract":"Sending large messages known to the recipient is a waste of\n        bandwidth. Nevertheless, many fault-tolerant agreement protocols\n        send the same large message between each pair of participating\n        processes. This practical problem has recently been addressed in\n        the context of Atomic Broadcast by presenting a specialized\n        algorithm.\n        \n        This paper proposes a more general solution by providing virtual\n        indirect channels that physically transmit message ids instead\n        of full messages if possible. Indirect channels are transparent\n        to the application; they can be used with any distributed\n        algorithm, even with unreliable channels or malicious\n        participants. At the same time, they provide rigorous\n        theoretical properties.\n        \n        Indirect channels are conservative: they do not allow\n        manipulating message ids if full messages are not known. This\n        paper also investigates the consequences of relaxing this\n        assumption on the latency and correctness of Consensus and\n        Atomic Broadcast implementations: new algorithms and lower\n        bounds are shown.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2007-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":56752,"sim:weight":0.277056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897432,"sim:weight":0.257008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916906,"sim:weight":0.232128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44839,"sim:weight":0.218523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.215465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.196544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.193262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933180,"sim:weight":0.190936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.185104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":896259,"sim:weight":0.179301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764482,"sim:weight":0.172781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.170892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43303,"sim:weight":0.165735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.164282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.162847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1004044,"sim:weight":0.159559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.153421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.146593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1133484,"sim:weight":0.142154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.140992,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72190,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Haggle: Clean-slate networking for mobile\n        devices","bibo:abstract":"Haggle is a layerless networking architecture for mobile\n        devices. It is motivated by the infrastructure dependence of\n        applications such as email and web browsing, even in situations\n        where infrastructure is not necessary to accomplish the end user\n        goal, e.g. when the destination is reachable by ad hoc\n        neighbourhood communication. In this paper we present details of\n        Haggle’s architecture, and of the prototype implementation which\n        allows existing email and web applications to become\n        infrastructure-independent, as we show with an experimental\n        evaluation.","bibo:AuthorList":["Su, Jing","Scott, James","Hui, Pan","Upton, Eben","Lim, Meng How","Diot, Christophe","Crowcroft, Jon","Goel, Ashvin","de Lara, Eyal"],"dc:date":"2007-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.291577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821032,"sim:weight":0.280203,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.269486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.268713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.260739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.257275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549727,"sim:weight":0.256295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991071,"sim:weight":0.244927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931392,"sim:weight":0.237637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393912,"sim:weight":0.237473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819440,"sim:weight":0.225753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70127,"sim:weight":0.219405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933440,"sim:weight":0.216267,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749092,"sim:weight":0.207681,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023851,"sim:weight":0.206668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934804,"sim:weight":0.198789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821040,"sim:weight":0.198299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186234,"sim:weight":0.194655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.193084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931234,"sim:weight":0.186208,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72192,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automatic summarising: a review and discussion of the\n        state of the art","bibo:abstract":"This paper reviews research on automatic summarising over the\n        last decade. This period has seen a rapid growth of work in the\n        area stimulated by technology and by several system evaluation\n        programmes. The review makes use of several frameworks to\n        organise the review, for summarising, for systems, for the task\n        factors affecting summarising, and for evaluation design and\n        practice.\n        \n        The review considers the evaluation strategies that have been\n        applied to summarising and the issues they raise, and the major\n        summary evaluation programmes. It examines the input, purpose\n        and output factors that have been investigated in summarising\n        research in the last decade, and discusses the classes of\n        strategy, both extractive and non-extractive, that have been\n        explored, illustrating the range of systems that have been\n        built. This analysis of strategies is amplified by accounts of\n        specific exemplar systems.\n        \n        The conclusions drawn from the review are that automatic\n        summarisation research has made valuable progress in the last\n        decade, with some practically useful approaches, better\n        evaluation, and more understanding of the task. However as the\n        review also makes clear, summarising systems are often poorly\n        motivated in relation to the factors affecting summaries, and\n        evaluation needs to be taken significantly further so as to\n        engage with the purposes for which summaries are intended and\n        the contexts in which they are used.\n        \n        A reduced version of this report, entitled ‘Automatic\n        summarising: the state of the art’ will appear in Information\n        Processing and Management, 2007.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"2007-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8933287,"sim:weight":0.514509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.466938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16094,"sim:weight":0.425566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19673,"sim:weight":0.407347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.388996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19933,"sim:weight":0.388069,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933322,"sim:weight":0.387476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933255,"sim:weight":0.362017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.360705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21972,"sim:weight":0.345996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22068,"sim:weight":0.315132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933430,"sim:weight":0.303751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933310,"sim:weight":0.299516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277021,"sim:weight":0.271289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383625,"sim:weight":0.2418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43077,"sim:weight":0.235131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4155556,"sim:weight":0.228229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.227345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.227345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.227345,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72194,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Compact forbidden-set routing","bibo:abstract":"We study the compact forbidden-set routing problem. We describe\n        the first compact forbidden-set routing schemes that do not\n        suffer from non-convergence problems often associated with\n        Bellman-Ford iterative schemes such as the interdomain routing\n        protocol, BGP. For degree-d n-node graphs of treewidth t, our\n        schemes use space O(t² d polylog(n)) bits per node; a trivial\n        scheme uses O(n²) and routing trees use Ω(n) per node (these\n        results have since been improved and extended – see [Courcelle,\n        Twigg, Compact forbidden-set routing, 24th Symposium on\n        Theoretical Aspects of Computer Science, Aachen 2007]. We also\n        show how to do forbidden-set routing on planar graphs between\n        nodes whose distance is less than a parameter l. We prove a\n        lower bound on the space requirements of forbidden-set routing\n        for general graphs, and show that the problem is related to\n        constructing an efficient distributed representation of all the\n        separators of an undirected graph. Finally, we consider routing\n        while taking into account path costs of intermediate nodes and\n        show that this requires large routing labels. We also study a\n        novel way of approximating forbidden-set routing using quotient\n        graphs of low treewidth.","bibo:AuthorList":["Twigg, Andrew D."],"dc:date":"2006-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":19742,"sim:weight":0.583517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50956,"sim:weight":0.51247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20125,"sim:weight":0.476386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":708339,"sim:weight":0.452162,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187481,"sim:weight":0.451634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931554,"sim:weight":0.429121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21376,"sim:weight":0.427023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.423001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146072,"sim:weight":0.405835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933273,"sim:weight":0.402935,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931644,"sim:weight":0.394853,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931555,"sim:weight":0.390505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20166,"sim:weight":0.383677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":95036,"sim:weight":0.382399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18295,"sim:weight":0.379771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102630,"sim:weight":0.379202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96578,"sim:weight":0.37646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147685,"sim:weight":0.372443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898134,"sim:weight":0.368474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058053,"sim:weight":0.368071,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72196,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"ECCO: Data centric asynchronous communication","bibo:abstract":"This dissertation deals with data centric networking in\n        distributed systems, which relies on content addressing instead\n        of host addressing for participating nodes, thus providing\n        network independence for applications. Publish/subscribe\n        asynchronous group communication realises the vision of data\n        centric networking that is particularly important for networks\n        supporting mobile clients over heterogeneous wireless networks.\n        In such networks, client applications prefer to receive specific\n        data and require selective data dissemination. Underlying\n        mechanisms such as asynchronous message passing, distributed\n        message filtering and query/subscription management are\n        essential. Furthermore, recent progress in wireless sensor\n        networks brought a new dimension of data processing in\n        ubiquitous computing, where the sensors are used to gather high\n        volumes of different data types and to feed them as contexts to\n        a wide range of applications.\n        \n        Particular emphasis has been placed on fundamental design of\n        event representation. Besides existing event attributes, event\n        order, and continuous context information such as time or\n        geographic location can be incorporated within an event\n        description. Data representation of event and query will be even\n        more important in future ubiquitous computing, where events flow\n        over heterogeneous networks. This dissertation presents a\n        multidimensional event representation (i.e., Hypercube structure\n        in RTree) for efficient indexing, filtering, matching, and\n        scalability in publish/subscribe systems. The hypercube event\n        with a typed content-based publish/subscribe system for\n        wide-area networks is demonstrated for improving the event\n        filtering process.\n        \n        As a primary focus, this dissertation investigates a\n        structureless, asynchronous group communication over wireless ad\n        hoc networks named ‘ECCO Pervasive Publish/Subscribe’\n        (ECCO-PPS). ECCO-PPS uses context-adaptive controlled flooding,\n        which takes a cross-layer approach between middleware and\n        network layers and provides a content-based publish/subscribe\n        paradigm. Traditionally events have been payload data within\n        network layer components; the network layer never touches the\n        data contents. However, application data have more influence on\n        data dissemination in ubiquitous computing scenarios.\n        \n        The state information of the local node may be the event\n        forwarding trigger. Thus, the model of publish/subscribe must\n        become more symmetric, with events being disseminated based on\n        rules and conditions defined by the events themselves. The event\n        can thus choose the destinations instead of relying on the\n        potential receivers’ decision. The publish/subscribe system\n        offers a data centric approach, where the destination address is\n        not described with any explicit network address. The symmetric\n        publish/subscribe paradigm brings another level to the\n        data-centric paradigm, leading to a fundamental change in\n        functionality at the network level of asynchronous group\n        communication and membership maintenance.\n        \n        To add an additional dimension of event processing in global\n        computing, It is important to understand event aggregation,\n        filtering and correlation. Temporal ordering of events is\n        essential for event correlation over distributed systems. This\n        dissertation introduces generic composite event semantics with\n        interval-based semantics for event detection. This precisely\n        defines complex timing constraints among correlated event\n        instances.\n        \n        In conclusion, this dissertation provides advanced data-centric\n        asynchronous communication, which provides efficiency,\n        reliability, and robustness, while adapting to the underlying\n        network environments.","bibo:AuthorList":["Yoneki, Eiko"],"dc:date":"2006-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1925982,"sim:weight":0.666521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23128,"sim:weight":0.503024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.491419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.485674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44051,"sim:weight":0.479858,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91434,"sim:weight":0.457473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800134,"sim:weight":0.454015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.453649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":870287,"sim:weight":0.447331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69261,"sim:weight":0.441254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69292,"sim:weight":0.440744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934051,"sim:weight":0.440715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5834919,"sim:weight":0.439826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91444,"sim:weight":0.437719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082620,"sim:weight":0.437297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884421,"sim:weight":0.434123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70167,"sim:weight":0.433505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931875,"sim:weight":0.432297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":825842,"sim:weight":0.430658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9432707,"sim:weight":0.430548,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72198,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Road traffic analysis using MIDAS data: journey time\n        prediction","bibo:abstract":"The project described in this report was undertaken within the\n        Department for Transport’s second call for proposals in the\n        Horizons research programme under the theme of “Investigating\n        the handling of large transport related datasets”. The project\n        looked at the variability of journey times across days in three\n        day categories: Mondays, midweek days and Fridays. Two\n        estimators using real-time data were considered: a\n        simple-to-implement regression-based method and a more\n        computationally demanding k-nearest neighbour method. Our\n        example scenario of UK data was taken from the M25 London\n        orbital motorway during 2003 and the results compared in terms\n        of the root-mean-square prediction error. It was found that\n        where the variability was greatest (typically during the rush\n        hours periods or periods of flow breakdowns) the regression and\n        nearest neighbour estimators reduced the prediction error\n        substantially compared with a naive estimator constructed from\n        the historical mean journey time. Only as the lag between the\n        decision time and the journey start time increased to beyond\n        around 2 hours did the potential to improve upon the historical\n        mean estimator diminish. Thus, there is considerable scope for\n        prediction methods combined with access to real-time data to\n        improve the accuracy in journey time estimates. In so doing,\n        they reduce the uncertainty in estimating the generalized cost\n        of travel. The regression-based prediction estimator has a\n        particularly low computational overhead, in contrast to the\n        nearest neighbour estimator, which makes it entirely suitable\n        for an online implementation. Finally, the project demonstrates\n        both the value of preserving historical archives of transport\n        related datasets as well as provision of access to real-time\n        measurements.","bibo:AuthorList":["Gibbens, R.J.","Saacti, Y."],"dc:date":"2006-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.308434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41234,"sim:weight":0.282289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.270873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.254596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54028,"sim:weight":0.237506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43218,"sim:weight":0.22694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.221373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101248,"sim:weight":0.209329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43897,"sim:weight":0.204405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.199549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43462,"sim:weight":0.191557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269973,"sim:weight":0.190207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.185051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98604,"sim:weight":0.184873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.18185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.18185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.18185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.18185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.18185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.18185,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72201,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Computational models for first language\n        acquisition","bibo:abstract":"This work investigates a computational model of first language\n        acquisition; the Categorial Grammar Learner or CGL. The model\n        builds on the work of Villavicenio, who created a parametric\n        Categorial Grammar learner that organises its parameters into an\n        inheritance hierarchy, and also on the work of Buszkowski and\n        Kanazawa, who demonstrated the learnability of a k-valued\n        Classic Categorial Grammar (which uses only the rules of\n        function application) from strings. The CGL is able to learn a\n        k-valued General Categorial Grammar (which uses the rules of\n        function application, function composition and Generalised Weak\n        Permutation). The novel concept of Sentence Objects (simple\n        strings, augmented strings, unlabelled structures and\n        functor-argument structures) are presented as potential points\n        from which learning may commence. Augmented strings (which are\n        strings augmented with some basic syntactic information) are\n        suggested as a sensible input to the CGL as they are cognitively\n        plausible objects and have greater information content than\n        strings alone. Building on the work of Siskind, a method for\n        constructing augmented strings from unordered logic forms is\n        detailed and it is suggested that augmented strings are simply a\n        representation of the constraints placed on the space of\n        possible parses due to a strings associated semantic content.\n        The CGL makes crucial use of a statistical Memory Module\n        (constructed from a Type Memory and Word Order Memory) that is\n        used to both constrain hypotheses and handle data which is noisy\n        or parametrically ambiguous. A consequence of the Memory Module\n        is that the CGL learns in an incremental fashion. This echoes\n        real child learning as documented in Browns Stages of Language\n        Development and also as alluded to by an included corpus study\n        of child speech. Furthermore, the CGL learns faster when\n        initially presented with simpler linguistic data; a further\n        corpus study of child-directed speech suggests that this echos\n        the input provided to children. The CGL is demonstrated to learn\n        from real data. It is evaluated against previous parametric\n        learners (the Triggering Learning Algorithm of Gibson and Wexler\n        and the Structural Triggers Learner of Fodor and Sakas) and is\n        found to be more efficient.","bibo:AuthorList":["Buttery, Paula J."],"dc:date":"2006-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931161,"sim:weight":0.510434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826744,"sim:weight":0.466691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85014,"sim:weight":0.435723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.404986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19400,"sim:weight":0.376971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85011,"sim:weight":0.367725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19912,"sim:weight":0.364123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56211,"sim:weight":0.355204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85331,"sim:weight":0.348903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19460,"sim:weight":0.346611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85506,"sim:weight":0.344565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.338315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22033,"sim:weight":0.327192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18454,"sim:weight":0.326127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19401,"sim:weight":0.321937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22524,"sim:weight":0.318887,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897516,"sim:weight":0.313792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19896,"sim:weight":0.310796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99120,"sim:weight":0.300851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241324,"sim:weight":0.300086,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72203,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Landmark Guided Forwarding","bibo:abstract":"Wireless mobile ad hoc network routing presents some extremely\n        challenging research problems. While primarily trying to provide\n        connectivity, algorithms may also be designed to minimise\n        resource consumption such as power, or to trade off global\n        optimisation against the routing protocol overheads. In this\n        thesis, we focus on the problems of maintaining network\n        connectivity in the presence of node mobility whilst providing a\n        balance between global efficiency and robustness. The common\n        design goal among existing wireless ad hoc routing solutions is\n        to search for an optimal topological path between a source and a\n        destination for some shortest path metric. We argue that the\n        goal of establishing an end to end globally optimal path is\n        unsustainable as the network diameter, traffic volume and number\n        of nodes all increase in the presence of moderate node mobility.\n        \n        Some researchers have proposed using geographic position-based\n        forwarding, rather than a topological-based approach. In\n        position-based forwarding, besides knowing about its own\n        geographic location, every node also acquires the geographic\n        position of its surrounding neighbours. Packet delivery in\n        general is achieved by first learning the destination position\n        from a location service. This is followed by addressing the\n        packet with the destination position before forwarding the\n        packet on to a neighbour that, amongst all other neighbours, is\n        geographically nearest to the destination. It is clear that in\n        the ad hoc scenario, forwarding only by geodesic position could\n        result in situations that prevent the packet from advancing\n        further. To resolve this, some researchers propose improving\n        delivery guarantees by routing the packet along a planar graph\n        constructed from a Gabriel (GG) or a Relative Neighbour Graph\n        (RNG). This approach however has been shown to fail frequently\n        when position information is inherently inaccurate, or\n        neighbourhood state is stale, such as is the case in many\n        plausible deployment scenarios, e.g. due to relative mobility\n        rates being higher than location service update frequency.\n        \n        We propose Landmark Guided Forwarding (LGF), an algorithm that\n        harnesses the strengths of both topological and geographical\n        routing algorithms. LGF is a hybrid scheme that leverages the\n        scaling property of the geographic approach while using local\n        topology knowledge to mitigate location uncertainty. We\n        demonstrate through extensive simulations that LGF is suited\n        both to situations where there are high mobility rates, and\n        deployment when there is inherently less accurate position data.\n        Our results show that Landmark Guided Forwarding converges\n        faster, scales better and is more flexible in a range of\n        plausible mobility scenarios than representative protocols from\n        the leading classes of existing solutions, namely GPSR, AODV and\n        DSDV.","bibo:AuthorList":["Lim, Meng How"],"dc:date":"2006-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":960005,"sim:weight":0.568816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":896512,"sim:weight":0.55086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919950,"sim:weight":0.542979,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778561,"sim:weight":0.540441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083643,"sim:weight":0.529669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1000803,"sim:weight":0.518908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":971216,"sim:weight":0.515985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948892,"sim:weight":0.512771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.504373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":762347,"sim:weight":0.502318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919005,"sim:weight":0.501278,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894195,"sim:weight":0.495282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.494143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":893330,"sim:weight":0.485028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1136537,"sim:weight":0.475713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003628,"sim:weight":0.470812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990891,"sim:weight":0.464828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1020446,"sim:weight":0.463732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008801,"sim:weight":0.463567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":895670,"sim:weight":0.46107,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72205,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Probabilistic word sense disambiguation : Analysis and\n        techniques for combining knowledge sources","bibo:abstract":"This thesis shows that probabilistic word sense disambiguation\n        systems based on established statistical methods are strong\n        competitors to current state-of-the-art word sense\n        disambiguation (WSD) systems.\n        \n        We begin with a survey of approaches to WSD, and examine their\n        performance in the systems submitted to the SENSEVAL-2 WSD\n        evaluation exercise. We discuss existing resources for WSD, and\n        investigate the amount of training data needed for effective\n        supervised WSD.\n        \n        We then present the design of a new probabilistic WSD system.\n        The main feature of the design is that it combines multiple\n        probabilistic modules using both Dempster-Shafer theory and\n        Bayes Rule. Additionally, the use of Lidstone’s smoothing\n        provides a uniform mechanism for weighting modules based on\n        their accuracy, removing the need for an additional weighting\n        scheme.\n        \n        Lastly, we evaluate our probabilistic WSD system using\n        traditional evaluation methods, and introduce a novel task-based\n        approach. When evaluated on the gold standard used in the\n        SENSEVAL-2 competition, the performance of our system lies\n        between the first and second ranked WSD system submitted to the\n        English all words task.\n        \n        Task-based evaluations are becoming more popular in natural\n        language processing, being an absolute measure of a system’s\n        performance on a given task. We present a new evaluation method\n        based on subcategorization frame acquisition. Experiments with\n        our probabilistic WSD system give an extremely high correlation\n        between subcategorization frame acquisition performance and WSD\n        performance, thus demonstrating the suitability of SCF\n        acquisition as a WSD evaluation task.","bibo:AuthorList":["Preiss, Judita"],"dc:date":"2006-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":22368,"sim:weight":0.533025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":794077,"sim:weight":0.516745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008739,"sim:weight":0.513975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279619,"sim:weight":0.479925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85989,"sim:weight":0.47744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21225,"sim:weight":0.452423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.442914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18507,"sim:weight":0.441871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116773,"sim:weight":0.440793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51070,"sim:weight":0.427692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15733,"sim:weight":0.418347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56724,"sim:weight":0.405868,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225570,"sim:weight":0.395899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19943,"sim:weight":0.373134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19526,"sim:weight":0.371047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1012043,"sim:weight":0.362404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241155,"sim:weight":0.360671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98750,"sim:weight":0.35133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22120,"sim:weight":0.335994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19949,"sim:weight":0.332152,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72206,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Decomposing file data into discernible items","bibo:abstract":"The development of the different persistent data models shows a\n        constant pattern: the higher the level of abstraction a storage\n        system exposes the greater the payoff for programmers. The file\n        API offers a simple storage model that is agnostic of any\n        structure or data types in file contents. As a result,\n        developers employ substantial programming effort in writing\n        persistent code. At the other extreme, orthogonally persistent\n        programming languages reduce the impedance mismatch between the\n        volatile and the persistent data spaces by exposing persistent\n        data as conventional programming objects. Consequently,\n        developers spend considerably less effort in developing\n        persistent code.\n        \n        This dissertation addresses the lack of ability in the file API\n        to exploit the advantages of gaining access to the logical\n        composition of file content. It argues that the trade-off\n        between efficiency and ease of programmability of persistent\n        code in the context of the file API is unbalanced. Accordingly,\n        in this dissertation I present and evaluate two practical\n        strategies to disclose structure and type in file data.\n        \n        First, I investigate to what extent it is possible to identify\n        specific portions of file content in diverse data sets through\n        the implementation and evaluation of techniques for data\n        redundancy detection. This study is interesting not only because\n        it characterises redundancy levels in storage systems content,\n        but also because redundant portions of data at a sub-file level\n        can be an indication of internal file data structure. Although\n        these techniques have been used by previous work, my analysis of\n        data redundancy is the first that makes an in-depth comparison\n        of them and highlights the trade-offs in their employment.\n        \n        Second, I introduce a novel storage system API, called Datom,\n        that departs from the view of file content as a monolithic\n        object. Through a minimal set of commonly-used abstract data\n        types, it discloses a judicious degree of structure and type in\n        the logical composition of files and makes the data access\n        semantics of applications explicit. The design of the Datom API\n        weighs the addition of advanced functionality and the overheads\n        introduced by their employment, taking into account the\n        requirements of the target application domain. The\n        implementation of the Datom API is evaluated according to\n        different criteria such as usability, impact at the source-code\n        level, and performance. The experimental results demonstrate\n        that the Datom API reduces work-effort and improves software\n        quality by providing a storage interface based on high-level\n        abstractions.","bibo:AuthorList":["Policroniades-Borraz, Calicrates"],"dc:date":"2006-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":268168,"sim:weight":0.504549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.446277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.424604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698588,"sim:weight":0.417122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.416032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.414826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.399171,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958419,"sim:weight":0.390825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":621796,"sim:weight":0.386985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.379436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106936,"sim:weight":0.345072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933122,"sim:weight":0.342087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.340489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767115,"sim:weight":0.339225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381374,"sim:weight":0.338845,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86530,"sim:weight":0.334904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1086042,"sim:weight":0.334059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":619031,"sim:weight":0.328299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009549,"sim:weight":0.327892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71065,"sim:weight":0.327731,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72208,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Low-latency Atomic Broadcast in the presence of\n        contention","bibo:abstract":"The Atomic Broadcast algorithm described in this paper can\n        deliver messages in two communication steps, even if multiple\n        processes broadcast at the same time. It tags all broadcast\n        messages with the local real time, and delivers all messages in\n        order of these timestamps. The Ω-elected leader simulates\n        processes it suspects to have crashed (◇S). For fault-tolerance,\n        it uses a new cheap Generic Broadcast algorithm that requires\n        only a majority of correct processes (n \u003e 2f) and, in\n        failure-free runs, delivers all non-conflicting messages in two\n        steps. The main algorithm satisfies several new lower bounds,\n        which are proved in this paper.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2006-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1394170,"sim:weight":0.370017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1396133,"sim:weight":0.327771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017988,"sim:weight":0.276428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931416,"sim:weight":0.275589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933701,"sim:weight":0.257871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.219099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933180,"sim:weight":0.214736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897432,"sim:weight":0.207361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56752,"sim:weight":0.20323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394156,"sim:weight":0.192702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932989,"sim:weight":0.181468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982198,"sim:weight":0.168317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980014,"sim:weight":0.16625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.166039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.165464,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916906,"sim:weight":0.159717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":652163,"sim:weight":0.159121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.157647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":540374,"sim:weight":0.15622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707704,"sim:weight":0.151076,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72210,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On the application of program analysis and\n        transformation to high reliability hardware","bibo:abstract":"Safety- and mission-critical systems must be both correct and\n        reliable. Electronic systems must behave as intended and, where\n        possible, do so at the first attempt – the fabrication costs of\n        modern VLSI devices are such that the iterative design/code/test\n        methodology endemic to the software world is not financially\n        feasible. In aerospace applications it is also essential to\n        establish that systems will, with known probability, remain\n        operational for extended periods, despite being exposed to very\n        low or very high temperatures, high radiation, large G-forces,\n        hard vacuum and severe vibration.\n        \n        Hardware designers have long understood the advantages of formal\n        mathematical techniques. Notably, model checking and automated\n        theorem proving both gained acceptance within the electronic\n        design community at an early stage, though more recently the\n        research focus in validation and verification has drifted toward\n        software. As a consequence, the newest and most powerful\n        techniques have not been significantly applied to hardware; this\n        work seeks to make a modest contribution toward redressing the\n        imbalance.\n        \n        An abstract interpretation-based formalism is introduced,\n        transitional logic, that supports formal reasoning about dynamic\n        behaviour of combinational asynchronous circuits. The behaviour\n        of majority voting circuits with respect to single-event\n        transients is analysed, demonstrating that such circuits are not\n        SET-immune. This result is generalised to show that SET immunity\n        is impossible for all delay-insensitive circuits.\n        \n        An experimental hardware partial evaluator, HarPE, is used to\n        demonstrate the 1st Futamura projection in hardware – a small\n        CPU is specialised with respect to a ROM image, yielding results\n        that are equivalent to compiling the program into hardware.\n        HarPE is then used alongside an experimental non-clausal SAT\n        solver to implement an automated transformation system that is\n        capable of repairing FPGAs that have suffered cosmic ray damage.\n        This approach is extended to support automated configuration,\n        dynamic testing and dynamic error recovery of reconfigurable\n        spacecraft wiring harnesses.","bibo:AuthorList":["Thompson, Sarah"],"dc:date":"2006-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43096,"sim:weight":0.530313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76975,"sim:weight":0.474451,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.454469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43288,"sim:weight":0.44329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26661,"sim:weight":0.431133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.429137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997979,"sim:weight":0.423596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934952,"sim:weight":0.418809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24665,"sim:weight":0.413722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.409953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.409323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934285,"sim:weight":0.405831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71317,"sim:weight":0.403005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933273,"sim:weight":0.402927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9658,"sim:weight":0.399608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933400,"sim:weight":0.392174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930772,"sim:weight":0.390358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71066,"sim:weight":0.390173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931954,"sim:weight":0.389995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708241,"sim:weight":0.389599,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72212,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Active privilege management for distributed access\n        control systems","bibo:abstract":"The last decade has seen the explosive uptake of technologies to\n        support true Internet-scale distributed systems, many of which\n        will require security.\n        \n        The policy dictating authorisation and privilege restriction\n        should be decoupled from the services being protected: (1)\n        policy can be given its own independent language syntax and\n        semantics, hopefully in an application independent way; (2)\n        policy becomes portable – it can be stored away from the\n        services it protects; and (3) the evolution of policy can be\n        effected dynamically.\n        \n        Management of dynamic privileges in wide-area distributed\n        systems is a challenging problem. Supporting fast credential\n        revocation is a simple example of dynamic privilege management.\n        More complex examples include policies that are sensitive to the\n        current state of a principal, such as dynamic separation of\n        duties.\n        \n        The Open Architecture for Secure Interworking Services (OASIS),\n        an expressive distributed role-based access control system, is\n        traced to the development of the Clinical and Biomedical\n        Computing Limited (CBCL) OASIS implementation. Two OASIS\n        deployments are discussed – an Electronic Health Record\n        framework, and an inter-organisational distributed courseware\n        system.\n        \n        The Event-based Distributed Scalable Authorisation Control\n        architecture for the 21st century (EDSAC21, or just EDSAC) is\n        then presented along with its four design layers. It builds on\n        OASIS, adding support for the collaborative enforcement of\n        distributed dynamic constraints, and incorporating\n        publish/subscribe messaging to allow scalable and flexible\n        deployment. The OASIS policy language is extended to support\n        delegation, dynamic separation of duties, and obligation\n        policies.\n        \n        An EDSAC prototype is examined. We show that our architecture is\n        ideal for experiments performed into location-aware access\n        control. We then demonstrate how event-based features specific\n        to EDSAC facilitate integration of an ad hoc workflow monitor\n        into an access control system.\n        \n        The EDSAC architecture is powerful, flexible and extensible. It\n        is intended to have widespread applicability as the basis for\n        designing next-generation security middleware and implementing\n        distributed, dynamic privilege management.","bibo:AuthorList":["Eyers, David M."],"dc:date":"2006-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932135,"sim:weight":0.482565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69285,"sim:weight":0.477976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933585,"sim:weight":0.452006,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106421,"sim:weight":0.449593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934200,"sim:weight":0.441001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026822,"sim:weight":0.438079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932106,"sim:weight":0.437562,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930883,"sim:weight":0.436728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934801,"sim:weight":0.435783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.435438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":810,"sim:weight":0.434852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":372982,"sim:weight":0.432939,"sim:AssociationMethod":"similarity_cosine"},{"identifier":36610,"sim:weight":0.429972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1397106,"sim:weight":0.428578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88996,"sim:weight":0.426747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933129,"sim:weight":0.422229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826954,"sim:weight":0.416656,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70445,"sim:weight":0.416205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.412292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67528,"sim:weight":0.411772,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72214,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Optimistically Terminating Consensus","bibo:abstract":"Optimistically Terminating Consensus (OTC) is a variant of\n        Consensus that decides if all correct processes propose the same\n        value. It is surprisingly easy to implement: processes broadcast\n        their proposals and decide if sufficiently many processes report\n        the same proposal. This paper shows an OTC-based framework which\n        can reconstruct all major asynchronous Consensus algorithms,\n        even in Byzantine settings, with no overhead in latency or the\n        required number of processes. This result does not only deepen\n        our understanding of Consensus, but also reduces the problem of\n        designing new, modular distributed agreement protocols to\n        choosing the parameters of OTC.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2006-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26045,"sim:weight":0.195427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":889153,"sim:weight":0.128045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.117844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386709,"sim:weight":0.117352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.116957,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.105116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930518,"sim:weight":0.104919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21022,"sim:weight":0.101978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998017,"sim:weight":0.101833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982198,"sim:weight":0.10126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.0966708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933897,"sim:weight":0.0952493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.0947576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.0939982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.0938115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897432,"sim:weight":0.0924032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1510610,"sim:weight":0.0919308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998128,"sim:weight":0.0912547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.0907904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.0902419,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72216,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Minimizing latency of agreement protocols","bibo:abstract":"Maintaining consistency of fault-tolerant distributed systems is\n        notoriously difficult to achieve. It often requires non-trivial\n        agreement abstractions, such as Consensus, Atomic Broadcast, or\n        Atomic Commitment. This thesis investigates implementations of\n        such abstractions in the asynchronous model, extended with\n        unreliable failure detectors or eventual synchrony. The main\n        objective is to develop protocols that minimize the number of\n        communication steps required in failure-free scenarios but\n        remain correct if failures occur. For several agreement problems\n        and their numerous variants, this thesis presents such\n        low-latency algorithms and lower-bound theorems proving their\n        optimality.\n        \n        The observation that many agreement protocols share the same\n        round-based structure helps to cope with a large number of\n        agreement problems in a uniform way. One of the main\n        contributions of this thesis is “Optimistically Terminating\n        Consensus” (OTC) – a new lightweight agreement abstraction that\n        formalizes the notion of a round. It is used to provide simple\n        modular solutions to a large variety of agreement problems,\n        including Consensus, Atomic Commitment, and Interactive\n        Consistency. The OTC abstraction tolerates malicious\n        participants and has no latency overhead; agreement protocols\n        constructed in the OTC framework require no more communication\n        steps than their ad-hoc counterparts.\n        \n        The attractiveness of this approach lies in the fact that the\n        correctness of OTC algorithms can be tested automatically. A\n        theory developed in this thesis allows us to quickly evaluate\n        OTC algorithm candidates without the time-consuming examination\n        of their entire state space. This technique is then used to scan\n        the space of possible solutions in order to automatically\n        discover new low-latency OTC algorithms. From these, one can now\n        easily obtain new implementations of Consensus and similar\n        agreement problems such as Atomic Commitment or Interactive\n        Consistency.\n        \n        Because of its continuous nature, Atomic Broadcast is considered\n        separately from other agreement abstractions. I first show that\n        no algorithm can guarantee a latency of less than three\n        communication steps in all failure-free scenarios. Then, I\n        present new Atomic Broadcast algorithms that achieve the\n        two-step latency in some special cases, while still guaranteeing\n        three steps for other failure-free scenarios. The special cases\n        considered here are: Optimistic Atomic Broadcast, (Optimistic)\n        Generic Broadcast, and closed-group Atomic Broadcast. For each\n        of these, I present an appropriate algorithm and prove its\n        latency to be optimal.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2006-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4873811,"sim:weight":0.295093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56752,"sim:weight":0.280952,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931416,"sim:weight":0.273865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000261,"sim:weight":0.262106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.254156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933701,"sim:weight":0.245046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933751,"sim:weight":0.242663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.235014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.233548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932442,"sim:weight":0.206525,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998159,"sim:weight":0.206429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80132,"sim:weight":0.205395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21289,"sim:weight":0.193542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50962,"sim:weight":0.186199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.176319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43272,"sim:weight":0.174793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9600,"sim:weight":0.174458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.173295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932523,"sim:weight":0.16458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.164554,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72218,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A pact with the Devil","bibo:abstract":"We study malware propagation strategies which exploit not the\n        incompetence or naivety of users, but instead their own greed,\n        malice and short-sightedness. We demonstrate that interactive\n        propagation strategies, for example bribery and blackmail of\n        computer users, are effective mechanisms for malware to survive\n        and entrench, and present an example employing these techniques.\n        We argue that in terms of propagation, there exists a continuum\n        between legitimate applications and pure malware, rather than a\n        quantised scale.","bibo:AuthorList":["Bond, Mike","Danezis, George"],"dc:date":"2006-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":20601,"sim:weight":0.544137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":716601,"sim:weight":0.482309,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1108340,"sim:weight":0.46819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707861,"sim:weight":0.363034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44768,"sim:weight":0.355423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.344769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.34333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.332259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707852,"sim:weight":0.330566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.321971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98987,"sim:weight":0.311544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138800,"sim:weight":0.309189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99435,"sim:weight":0.282003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45186,"sim:weight":0.268335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47545,"sim:weight":0.189091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":893348,"sim:weight":0.172317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512571,"sim:weight":0.14139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18230,"sim:weight":0.131159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8223,"sim:weight":0.122318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026834,"sim:weight":0.112971,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72220,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Security evaluation at design time for cryptographic\n        hardware","bibo:abstract":"Consumer security devices are becoming ubiquitous, from pay-TV\n        through mobile phones, PDA, prepayment gas meters to smart\n        cards. There are many ongoing research efforts to keep these\n        devices secure from opponents who try to retrieve key\n        information by observation or manipulation of the chip’s\n        components. In common industrial practise, it is after the chip\n        has been manufactured that security evaluation is performed. Due\n        to design time oversights, however, weaknesses are often\n        revealed in fabricated chips. Furthermore, post manufacture\n        security evaluation is time consuming, error prone and very\n        expensive. This evokes the need of “design time security\n        evaluation” techniques in order to identify avoidable mistakes\n        in design.\n        \n        This thesis proposes a set of “design time security evaluation”\n        methodologies covering the well-known non-invasive side-channel\n        analysis attacks, such as power analysis and electromagnetic\n        analysis attacks. The thesis also covers the recently published\n        semi-invasive optical fault injection attacks. These security\n        evaluation technologies examine the system under test by\n        reproducing attacks through simulation and observing its\n        subsequent response.\n        \n        The proposed “design time security evaluation” methodologies can\n        be easily implemented into the standard integrated circuit\n        design flow, requiring only commonly used EDA tools. So it adds\n        little non-recurrent engineering (NRE) cost to the chip design\n        but helps identify the security weaknesses at an early stage,\n        avoids costly silicon re-spins, and helps succeed in industrial\n        evaluation for faster time-to-market.","bibo:AuthorList":["Li, Huiyun"],"dc:date":"2006-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":276803,"sim:weight":0.414247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960274,"sim:weight":0.393988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76975,"sim:weight":0.373782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.339649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930958,"sim:weight":0.288261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.243836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282604,"sim:weight":0.235413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.231997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.215371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":490778,"sim:weight":0.201106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282435,"sim:weight":0.196027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.191777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336978,"sim:weight":0.18795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.181668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151979,"sim:weight":0.181463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.180491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710106,"sim:weight":0.180231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.166823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932741,"sim:weight":0.16649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98898,"sim:weight":0.15953,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72222,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Designing knowledge: An interdisciplinary experiment in\n        research infrastructure for shared description","bibo:abstract":"The report presents the experimental development, evaluation and\n        refinement of a method for doing adventurous design work, in\n        contexts where academics must work in collaboration with\n        corporate and public policy strategists and researchers. The\n        intention has been to do applied social science, in which a\n        reflective research process has resulted in a “new social form”,\n        as expressed in the title of the research grant that funded the\n        project. The objective in doing so is not simply to produce new\n        theories, or to enjoy interdisciplinary encounters (although\n        both of those have been side effects of this work). My purpose\n        in doing the work and writing this report is purely instrumental\n        – working as a technologist among social scientists, the outcome\n        described in this report is intended for adoption as a kind of\n        social technology. I have given this product a name: the\n        “Blackwell-Leach Process” for interdisciplinary design. The\n        Blackwell-Leach process has since been applied and proven useful\n        in several novel situations, and I believe is now sufficiently\n        mature to justify publication of the reports that describe both\n        the process and its development.","bibo:AuthorList":["Blackwell, Alan F."],"dc:date":"2006-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8930481,"sim:weight":0.570309,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383546,"sim:weight":0.539796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.527685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383592,"sim:weight":0.518209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.479989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.476971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45075,"sim:weight":0.436971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999507,"sim:weight":0.414086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99976,"sim:weight":0.326493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":90465,"sim:weight":0.276665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710651,"sim:weight":0.269789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43022,"sim:weight":0.266598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.260057,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72224,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Syntax-driven analysis of context-free languages with\n        respect to fuzzy relational semantics","bibo:abstract":"A grammatical framework is presented that augments context-free\n        production rules with semantic production rules that rely on\n        fuzzy relations as representations of fuzzy natural language\n        concepts. It is shown how the well-known technique of\n        syntax-driven semantic analysis can be used to infer from an\n        expression in a language defined in such a semantically\n        augmented grammar a weak ordering on the possible worlds it\n        describes. Considering the application of natural language query\n        processing, we show how to order elements in the domain of a\n        relational database scheme according to the degree to which they\n        fulfill the intuition behind a given natural language statement\n        like “Carol lives in a small city near San Francisco”.","bibo:AuthorList":["Bergmair, Richard"],"dc:date":"2006-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":937453,"sim:weight":0.427362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":776702,"sim:weight":0.383639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930751,"sim:weight":0.350612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4265,"sim:weight":0.319037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108366,"sim:weight":0.298761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46190,"sim:weight":0.286106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46196,"sim:weight":0.274119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.267895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46073,"sim:weight":0.267092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.265202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.264898,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.263204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.253778,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16269,"sim:weight":0.244028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1510168,"sim:weight":0.236783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70542,"sim:weight":0.231119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146176,"sim:weight":0.203661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710234,"sim:weight":0.203328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.197536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934682,"sim:weight":0.196366,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72226,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An introduction to tag sequence grammars and the RASP\n        system parser","bibo:abstract":"This report describes the tag sequence grammars released as part\n        of the Robust Accurate Statistical Parsing (RASP) system. It is\n        intended to help users of RASP understand the linguistic and\n        engineering rationale behind the grammars and prepare them to\n        customise the system for their application. It also contains a\n        fairly exhaustive list of references to extant work utilising\n        the RASP parser.","bibo:AuthorList":["Briscoe, Ted"],"dc:date":"2006-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":112941,"sim:weight":0.383929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897516,"sim:weight":0.371942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47228,"sim:weight":0.356776,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18877,"sim:weight":0.34399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.303884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43975,"sim:weight":0.284202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98072,"sim:weight":0.252197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008571,"sim:weight":0.24205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":941741,"sim:weight":0.239648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972872,"sim:weight":0.234743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98084,"sim:weight":0.224773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19459,"sim:weight":0.215205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708484,"sim:weight":0.202976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20447,"sim:weight":0.179014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86265,"sim:weight":0.165644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765620,"sim:weight":0.160794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43158,"sim:weight":0.156185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19460,"sim:weight":0.152936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":116781,"sim:weight":0.149915,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44655,"sim:weight":0.148033,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72227,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Compatible RMRS representations from RASP and the\n        ERG","bibo:abstract":"Various applications could potentially benefit from the\n        integration of deep and shallow processing techniques. A\n        universal representation, compatible between deep and shallow\n        parsers, would enable such integration, allowing the advantages\n        of both to be combined. This paper describes efforts to make\n        RMRS such a representation. This work was done as part of\n        DeepThought, funded under the 5th Framework Program of the\n        European Commission (contract reference IST-2001-37836).","bibo:AuthorList":["Ritchie, Anna"],"dc:date":"2006-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":47228,"sim:weight":0.26541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46816,"sim:weight":0.265054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.25812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.239972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.221872,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46898,"sim:weight":0.207895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98750,"sim:weight":0.207778,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10774,"sim:weight":0.176001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112941,"sim:weight":0.159754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101247,"sim:weight":0.14247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1440868,"sim:weight":0.14103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383437,"sim:weight":0.128673,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99091,"sim:weight":0.126538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108761,"sim:weight":0.112609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187684,"sim:weight":0.109672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45399,"sim:weight":0.107076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.102318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9285,"sim:weight":0.0994413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997502,"sim:weight":0.0964452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271215,"sim:weight":0.0936065,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72230,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Static program analysis based on virtual register\n        renaming","bibo:abstract":"Static single assignment form (SSA) is a popular program\n        intermediate representation (IR) for static analysis. SSA\n        programs differ from equivalent control flow graph (CFG)\n        programs only in the names of virtual registers, which are\n        systematically transformed to comply with the naming convention\n        of SSA. Static single information form (SSI) is a recently\n        proposed extension of SSA that enforces a greater degree of\n        systematic virtual register renaming than SSA. This dissertation\n        develops the principles, properties, and practice of SSI\n        construction and data flow analysis. Further, it shows that SSA\n        and SSI are two members of a larger family of related IRs, which\n        are termed virtual register renaming schemes (VRRSs). SSA and\n        SSI analyses can be generalized to operate on any VRRS family\n        member. Analysis properties such as accuracy and efficiency\n        depend on the underlying VRRS.\n        \n        This dissertation makes four significant contributions to the\n        field of static analysis research.\n        \n        First, it develops the SSI representation. Although SSI was\n        introduced five years ago, it has not yet received widespread\n        recognition as an interesting IR in its own right. This\n        dissertation presents a new SSI definition and an optimistic\n        construction algorithm. It also sets SSI in context among the\n        broad range of IRs for static analysis.\n        \n        Second, it demonstrates how to reformulate existing data flow\n        analyses using new sparse SSI-based techniques. Examples include\n        liveness analysis, sparse type inference and program slicing. It\n        presents algorithms, together with empirical results of these\n        algorithms when implemented within a research compiler\n        framework.\n        \n        Third, it provides the only major comparative evaluation of the\n        merits of SSI for data flow analysis. Several qualitative and\n        quantitative studies in this dissertation compare SSI with other\n        similar IRs.\n        \n        Last, it identifies the family of VRRSs, which are all CFGs with\n        different virtual register naming conventions. Many extant IRs\n        are classified as VRRSs. Several new IRs are presented, based on\n        a consideration of previously unspecified members of the VRRS\n        family. General analyses can operate on any family member. The\n        required level of accuracy or efficiency can be selected by\n        working in terms of the appropriate family member.","bibo:AuthorList":["Singer, Jeremy"],"dc:date":"2006-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":12215,"sim:weight":0.364067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930772,"sim:weight":0.35674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.345649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.33839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9661,"sim:weight":0.325497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.318124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934772,"sim:weight":0.317134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9015106,"sim:weight":0.315465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.305376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932022,"sim:weight":0.304463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017983,"sim:weight":0.302922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21339,"sim:weight":0.297885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899695,"sim:weight":0.291334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933898,"sim:weight":0.283949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.283454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335981,"sim:weight":0.281176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70196,"sim:weight":0.27989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934167,"sim:weight":0.278762,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757000,"sim:weight":0.278525,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707650,"sim:weight":0.27774,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72231,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A safety proof of a lazy concurrent list-based set\n        implementation","bibo:abstract":"We prove the safety of a practical concurrent list-based\n        implementation due to Heller et al. It exposes an interface of\n        an integer set with methods contains, add, and remove. The\n        implementation uses a combination of fine-grain locking,\n        optimistic and lazy synchronisation. Our proofs are\n        hand-crafted. They use rely-guarantee reasoning and thereby\n        illustrate its power and applicability, as well as some of its\n        limitations. For each method, we identify the linearisation\n        point, and establish its validity. Hence we show that the\n        methods are safe, linearisable and implement a high-level\n        specification. This report is a companion document to our PPoPP\n        2006 paper entitled “Proving correctness of highly-concurrent\n        linearisable objects”.","bibo:AuthorList":["Vafeiadis, Viktor","Herlihy, Maurice","Hoare, Tony","Shapiro, Marc"],"dc:date":"2006-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931886,"sim:weight":0.251241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.234625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931951,"sim:weight":0.229385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.195116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.189233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.17034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.169987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.166388,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.164742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.16078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.158081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.155417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.149403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48414,"sim:weight":0.145847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.145366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.140585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.13192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.129806,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.129195,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933510,"sim:weight":0.128757,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72234,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Intrinsic point-based surface processing","bibo:abstract":"The need for the processing of surface geometry represents an\n        ubiquitous problem in computer graphics and related disciplines.\n        It arises in numerous important applications such as\n        computer-aided design, reverse engineering, rapid prototyping,\n        medical imaging, cultural heritage acquisition and preservation,\n        video gaming and the movie industry. Existing surface processing\n        techniques predominantly follow an extrinsic approach using\n        combinatorial mesh data structures in the embedding Euclidean\n        space to represent, manipulate and visualise the surfaces. This\n        thesis advocates, firstly, the intrinsic processing of surfaces,\n        i.e. processing directly across the surface rather than in its\n        embedding space. Secondly, it continues the trend towards the\n        use of point primitives for the processing and representation of\n        surfaces.\n        \n        The discussion starts with the design of an intrinsic point\n        sampling algorithm template for surfaces. This is followed by\n        the presentation of a module library of template instantiations\n        for surfaces in triangular mesh or point cloud form. The latter\n        is at the heart of the intrinsic meshless surface simplification\n        algorithm also put forward. This is followed by the introduction\n        of intrinsic meshless surface subdivision, the first intrinsic\n        meshless surface subdivision scheme and a new method for the\n        computation of geodesic centroids on manifolds. The meshless\n        subdivision scheme uses an intrinsic neighbourhood concept for\n        point-sampled geometry also presented in this thesis. Its main\n        contributions can therefore be summarised as follows:\n        \n        – An intrinsic neighbourhood concept for point-sampled geometry.\n        \n        – An intrinsic surface sampling algorithm template with sampling\n        density guarantee.\n        \n        – A modular library of template instantiations for the sampling\n        of\n        planar domains and surfaces in triangular mesh or point cloud\n        form.\n        \n        – A new method for the computation of geodesic centroids on\n        manifolds.\n        \n        – An intrinsic meshless surface simplification algorithm.\n        \n        – The introduction of the notion of intrinsic meshless surface\n        subdivision.\n        \n        – The first intrinsic meshless surface subdivision scheme.\n        \n        The overall result is a set of algorithms for the processing of\n        point-sampled geometry centering around a generic sampling\n        template for surfaces in the most widely-used forms of\n        representation. The intrinsic nature of these point-based\n        algorithms helps to overcome limitations associated with the\n        more traditional extrinsic, mesh-based processing of surfaces\n        when dealing with highly complex point-sampled geometry as is\n        typically encountered today.","bibo:AuthorList":["Moenning, Carsten"],"dc:date":"2006-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43144,"sim:weight":0.429199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000332,"sim:weight":0.427846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.420409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43397,"sim:weight":0.417394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":240353,"sim:weight":0.417143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45639,"sim:weight":0.409521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53283,"sim:weight":0.394708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51966,"sim:weight":0.392878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269949,"sim:weight":0.365598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20620,"sim:weight":0.340957,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239599,"sim:weight":0.339719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109200,"sim:weight":0.337218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22009,"sim:weight":0.330863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397942,"sim:weight":0.319465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45605,"sim:weight":0.314833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573446,"sim:weight":0.298513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998619,"sim:weight":0.284042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":78040,"sim:weight":0.281482,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47238,"sim:weight":0.279353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":7329,"sim:weight":0.270463,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72236,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Security protocol design by composition","bibo:abstract":"The aim of this research is to present a new methodology for the\n        systematic design of compound protocols from their parts. Some\n        security properties can be made accumulative, i.e. can be put\n        together without interfering with one another, by carefully\n        selecting the mechanisms which implement them. Among them are\n        authentication, secrecy and non-repudiation. Based on this\n        observation, a set of accumulative protocol mechanisms called\n        protocol primitives are proposed and their correctness is\n        verified. These protocol primitives are obtained from common\n        mechanisms found in many security protocols such as challenge\n        and response. They have been carefully designed not to interfere\n        with each other. This feature makes them flexible building\n        blocks in the proposed methodology. Equipped with these protocol\n        primitives, a scheme for the systematic construction of a\n        complicated protocol from simple protocol primitives is\n        presented, namely, design by composition. This design scheme\n        allows the combination of several simple protocol parts into a\n        complicated protocol without destroying the security properties\n        established by each independent part. In other words, the\n        composition framework permits the specification of a complex\n        protocol to be decomposed into the specifications of simpler\n        components, and thus makes the design and verification of the\n        protocol easier to handle. Benefits of this approach are similar\n        to those gained when using a modular approach to software\n        development.\n        \n        The applicability and practicality of the proposed methodology\n        are validated through many design examples of protocols found in\n        many different environments and with various initial\n        assumptions. The method is not aimed to cover all existent\n        design issues, but a reasonable range of protocols is addressed.","bibo:AuthorList":["Choi, Hyun-Jin"],"dc:date":"2006-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":397476,"sim:weight":0.64181,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.597848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.589171,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.572826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102472,"sim:weight":0.499506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.471789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102482,"sim:weight":0.468561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999810,"sim:weight":0.465946,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999811,"sim:weight":0.456674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75907,"sim:weight":0.451658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397465,"sim:weight":0.438233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.423573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397386,"sim:weight":0.416966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.413344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.412356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958530,"sim:weight":0.394943,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.393086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.389123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.37612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.26843,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72238,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Seamless mobility in 4G systems","bibo:abstract":"The proliferation of radio access technologies, wireless\n        networking devices, and mobile services has encouraged intensive\n        nomadic computing activity. When travelling, mobile users\n        experience connectivity disturbances, particularly when they\n        handoff between two access points that belong to the same\n        wireless network and when they change from one access technology\n        to another. Nowadays, an average mobile user might connect to\n        many different wireless networks in the course of a day to\n        obtain diverse services, whilst demanding transparent operation.\n        Current protocols offer portability and transparent mobility.\n        However, they fail to cope with huge delays caused by different\n        link-layer characteristics when roaming between independent\n        disparate networks. In this dissertation, I address this\n        deficiency by introducing and evaluating practical methods and\n        solutions that minimise connection disruptions and support\n        transparent mobility in future communication systems.","bibo:AuthorList":["Vidales, Pablo"],"dc:date":"2005-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2708264,"sim:weight":0.707802,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009559,"sim:weight":0.605707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":997971,"sim:weight":0.593227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2680135,"sim:weight":0.583322,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765541,"sim:weight":0.553715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918709,"sim:weight":0.552151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336545,"sim:weight":0.54073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":377179,"sim:weight":0.52913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336463,"sim:weight":0.504153,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980774,"sim:weight":0.500755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008705,"sim:weight":0.498449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15030,"sim:weight":0.495342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":881205,"sim:weight":0.461402,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.455302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.448534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186340,"sim:weight":0.443096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":997984,"sim:weight":0.430465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008704,"sim:weight":0.424141,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117394,"sim:weight":0.417541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083185,"sim:weight":0.416645,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72240,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Wearing proper combinations","bibo:abstract":"This paper discusses the proper treatment of multiple indexing\n        fields, representations, or streams, in document retrieval.\n        Previous experiments by Robertson and his colleagues have shown\n        that, with a widely used type of term weighting and fields that\n        share keys, document scores should be computed using term\n        frequencies over fields rather than by combining field scores.\n        Here I examine a wide range of document and query indexing\n        situations, and consider their implications for this approach to\n        document scoring.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"2005-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":99088,"sim:weight":0.411323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.398248,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.3914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.371994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019191,"sim:weight":0.361664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000309,"sim:weight":0.356313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":794081,"sim:weight":0.329729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98750,"sim:weight":0.322186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394176,"sim:weight":0.320296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394174,"sim:weight":0.294809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394002,"sim:weight":0.256739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917627,"sim:weight":0.247034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394205,"sim:weight":0.235084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56310,"sim:weight":0.228635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51209,"sim:weight":0.228159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51210,"sim:weight":0.218976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933430,"sim:weight":0.210075,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147630,"sim:weight":0.204799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106610,"sim:weight":0.203276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105383,"sim:weight":0.202761,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72242,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Local reasoning for Java","bibo:abstract":"This thesis develops the local reasoning approach of separation\n        logic for common forms of modularity such as abstract datatypes\n        and objects. In particular, this thesis focuses on the\n        modularity found in the Java programming language.\n        \n        We begin by developing a formal semantics for a core imperative\n        subset of Java, Middleweight Java (MJ), and then adapt\n        separation logic to reason about this subset. However, a naive\n        adaption of separation logic is unable to reason about\n        encapsulation or inheritance: it provides no support for\n        modularity.\n        \n        First, we address the issue of encapsulation with the novel\n        concept of an abstract predicate, which is the logical analogue\n        of an abstract datatype. We demonstrate how this method can\n        encapsulate state, and provide a mechanism for ownership\n        transfer: the ability to transfer state safely between a module\n        and its client. We also show how abstract predicates can be used\n        to express the calling protocol of a class.\n        \n        However, the encapsulation provided by abstract predicates is\n        too restrictive for some applications. In particular, it cannot\n        reason about multiple datatypes that have shared read-access to\n        state, for example list iterators. To compensate, we alter the\n        underlying model to allow the logic to express properties about\n        read-only references to state. Additionally, we provide a model\n        that allows both sharing and disjointness to be expressed\n        directly in the logic.\n        \n        Finally, we address the second modularity issue: inheritance. We\n        do this by extending the concept of abstract predicates to\n        abstract predicate families. This extension allows a predicate\n        to have multiple definitions that are indexed by class, which\n        allows subclasses to have a different internal representation\n        while remaining behavioural subtypes. We demonstrate the\n        usefulness of this concept by verifying a use of the visitor\n        design pattern.","bibo:AuthorList":["Parkinson, Matthew J."],"dc:date":"2005-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":12215,"sim:weight":0.395179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.395039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931534,"sim:weight":0.355848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43185,"sim:weight":0.352276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.334652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65304,"sim:weight":0.325573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.269255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.263613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.259993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52798,"sim:weight":0.256375,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932263,"sim:weight":0.250823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.248709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.237202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.234781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16269,"sim:weight":0.226135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.219297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.213513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.20382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.202911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27378,"sim:weight":0.200738,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72244,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Anonymity and traceability in cyberspace","bibo:abstract":"Traceability is the ability to map events in cyberspace,\n        particularly on the Internet, back to real-world instigators,\n        often with a view to holding them accountable for their actions.\n        Anonymity is present when traceability fails.\n        \n        I examine how traceability on the Internet actually works,\n        looking first at a classical approach from the late 1990s that\n        emphasises the rôle of activity logging and reporting on the\n        failures that are known to occur. Failures of traceability, with\n        consequent unintentional anonymity, have continued as the\n        technology has changed. I present an analysis that ascribes\n        these failures to the mechanisms at the edge of the network\n        being inherently inadequate for the burden that traceability\n        places upon them. The underlying reason for this continuing\n        failure is a lack of economic incentives for improvement. The\n        lack of traceability at the edges is further illustrated by a\n        new method of stealing another person’s identity on an Ethernet\n        Local Area Network that existing tools and procedures would\n        entirely fail to detect.\n        \n        Preserving activity logs is seen, especially by Governments, as\n        essential for the traceability of illegal cyberspace activity. I\n        present a new and efficient method of processing email server\n        logs to detect machines sending bulk unsolicited email “spam” or\n        email infected with “viruses”. This creates a clear business\n        purpose for creating logs, but the new detector is so effective\n        that the logs can be discarded within days, which may hamper\n        general traceability.\n        \n        Preventing spam would be far better than tracing its origin or\n        detecting its transmission. Many analyse spam in economic terms,\n        and wish to levy a small charge for sending each email. I\n        consider an oft-proposed approach using computational\n        “proof-of-work” that is elegant and anonymity preserving. I show\n        that, in a world of high profit margins and insecure end-user\n        machines, it is impossible to find a payment level that stops\n        the spam without affecting legitimate usage of email.\n        \n        Finally, I consider a content-blocking system with a hybrid\n        design that has been deployed by a UK Internet Service Provider\n        to inhibit access to child pornography. I demonstrate that the\n        two-level design can be circumvented at either level, that\n        content providers can use the first level to attack the second,\n        and that the selectivity of the first level can be used as an\n        “oracle” to extract a list of the sites being blocked. Although\n        many of these attacks can be countered, there is an underlying\n        failure that cannot be fixed. The system’s database holds\n        details of the traceability of content, as viewed from a single\n        location at a single time. However, a blocking system may be\n        deployed at many sites and must track content as it moves in\n        space and time; functions which traceability, as currently\n        realized, cannot deliver.","bibo:AuthorList":["Clayton, Richard"],"dc:date":"2005-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934801,"sim:weight":0.561346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.539643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4880707,"sim:weight":0.519347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.518592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899177,"sim:weight":0.516401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.485934,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68067,"sim:weight":0.483717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4316,"sim:weight":0.483317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41254,"sim:weight":0.480941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.476889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.470561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998247,"sim:weight":0.460306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998240,"sim:weight":0.459985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.459857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707867,"sim:weight":0.454743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2732135,"sim:weight":0.453126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.452528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.452172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":60081,"sim:weight":0.452033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4892681,"sim:weight":0.447218,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72246,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Discriminative training methods and their applications\n        to handwriting recognition","bibo:abstract":"This thesis aims to improve the performance of handwriting\n        recognition systems by introducing the use of discriminative\n        training methods. Discriminative training methods use data from\n        all competing classes when training the recogniser for each\n        class. We develop discriminative training methods for two\n        popular classifiers: Hidden Markov Models (HMMs) and a\n        prototype-based classifier. At the expense of additional\n        computations in the training process, discriminative training\n        has demonstrated significant improvements in recognition\n        accuracies from the classifiers that are not discriminatively\n        optimised. Our studies focus on isolated character recognition\n        problems with an emphasis on, but not limited to, off-line\n        handwritten Thai characters.\n        \n        The thesis is organised as followed. First, we develop an\n        HMM-based classifier that employs a Maximum Mutual Information\n        (MMI) discriminative training criterion. HMMs have an increasing\n        number of applications to character recognition in which they\n        are usually trained by Maximum Likelihood (ML) using the\n        Baum-Welch algorithm. However, ML training does not take into\n        account the data of other competing categories, and thus is\n        considered non-discriminative. By contrast, MMI provides an\n        alternative training method with the aim of maximising the\n        mutual information between the data and their correct\n        categories. One of our studies highlights the efficiency of MMI\n        training that improves the recognition results from ML training,\n        despite being applied to a highly constrained system\n        (tied-mixture density HMMs). Various aspects of MMI training are\n        investigated, including its optimisation algorithms and a set of\n        optimised parameters that yields maximum discriminabilities.\n        \n        Second, a system for Thai handwriting recognition based on HMMs\n        and MMI training is introduced. In addition, novel feature\n        extraction methods using block-based PCA and composite images\n        are proposed and evaluated. A technique to improve\n        generalisation of the MMI-trained systems and the use of N-best\n        lists to efficiently compute the probabilities are described. By\n        applying these techniques, the results from extensive\n        experiments are compelling, showing up to 65% relative error\n        reduction, compared to conventional ML training without the\n        proposed features. The best results are comparable to those\n        achieved by other high performance systems.\n        \n        Finally, we focus on the Prototype-Based Minimum Error\n        Classifier (PBMEC), which uses a discriminative Minimum\n        Classification Error (MCE) training method to generate the\n        prototypes. MCE tries to minimise recognition errors during the\n        training process using data from all classes. Several key\n        findings are revealed, including the setting of smoothing\n        parameters and a proposed clustering method that are more\n        suitable for PBMEC than using the conventional methods. These\n        studies reinforce the effectiveness of discriminative training\n        and are essential as a foundation for its application to the\n        more difficult problem of cursive handwriting recognition.","bibo:AuthorList":["Nopsuwanchai, Roongroj"],"dc:date":"2005-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":899700,"sim:weight":0.469086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51856,"sim:weight":0.466844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103109,"sim:weight":0.45333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793668,"sim:weight":0.451689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916435,"sim:weight":0.440718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86308,"sim:weight":0.43883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101382,"sim:weight":0.437577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21194,"sim:weight":0.437443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277015,"sim:weight":0.430247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948869,"sim:weight":0.429486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1055786,"sim:weight":0.42729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999851,"sim:weight":0.422173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9633954,"sim:weight":0.420974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5852190,"sim:weight":0.415978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21195,"sim:weight":0.409931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":966664,"sim:weight":0.409511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19364,"sim:weight":0.408896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2680559,"sim:weight":0.406259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20801,"sim:weight":0.405958,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9612447,"sim:weight":0.405705,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72248,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"End-user programming in multiple languages","bibo:abstract":"Advances in user interface technology have removed the need for\n        the majority of users to program, but they do not allow the\n        automation of repetitive or indirect tasks. End-user programming\n        facilities solve this problem without requiring users to learn\n        and use a conventional programming language, but must be\n        tailored to specific types of end user. In situations where the\n        user population is particularly diverse, this presents a\n        problem.\n        \n        In addition, studies have shown that the performance of tasks\n        based on the manipulation and interpretation of data depends on\n        the way in which the data is represented. Different\n        representations may facilitate different tasks, and there is not\n        necessarily a single, optimal representation that is best for\n        all tasks. In many cases, the choice of representation is also\n        constrained by other factors, such as display size. It would be\n        advantageous for an end-user programming system to provide\n        multiple, interchangeable representations of programs.\n        \n        This dissertation describes an architecture for providing\n        end-user programming facilities in the networked home, a context\n        with a diverse user population, and a wide variety of input and\n        output devices. The Media Cubes language, a novel end-user\n        programming language, is introduced as the context that lead to\n        the development of the architecture. A framework for translation\n        between languages via a common intermediate form is then\n        described, with particular attention paid to the requirements of\n        mappings between languages and the intermediate form. The\n        implementation of Lingua Franca, a system realizing this\n        framework in the given context, is described.\n        \n        Finally, the system is evaluated by considering several end-user\n        programming languages implemented within this system. It is\n        concluded that translation between programming languages, via a\n        common intermediate form, is viable for systems within a limited\n        domain, and the wider applicability of the technique is\n        discussed.","bibo:AuthorList":["Hague, Rob"],"dc:date":"2005-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2593,"sim:weight":0.536999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.522365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.48656,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930966,"sim:weight":0.478045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929659,"sim:weight":0.473324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.472822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.47166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106936,"sim:weight":0.466684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91444,"sim:weight":0.440087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387213,"sim:weight":0.425358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71065,"sim:weight":0.421515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43141,"sim:weight":0.420628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000309,"sim:weight":0.410251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.387063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767115,"sim:weight":0.386563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98094,"sim:weight":0.382194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933688,"sim:weight":0.377359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998342,"sim:weight":0.372444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933386,"sim:weight":0.371146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934452,"sim:weight":0.370757,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72250,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Parallel iterative solution method for large sparse\n        linear equation systems","bibo:abstract":"Solving sparse systems of linear equations is at the heart of\n        scientific computing. Large sparse systems often arise in\n        science and engineering problems. One such problem we consider\n        in this paper is the steady-state analysis of Continuous Time\n        Markov Chains (CTMCs). CTMCs are a widely used formalism for the\n        performance analysis of computer and communication systems. A\n        large variety of useful performance measures can be derived from\n        a CTMC via the computation of its steady-state probabilities. A\n        CTMC may be represented by a set of states and a transition rate\n        matrix containing state transition rates as coefficients, and\n        can be analysed using probabilistic model checking. However,\n        CTMC models for realistic systems are very large. We address\n        this largeness problem in this paper, by considering\n        parallelisation of symbolic methods. In particular, we consider\n        Multi-Terminal Binary Decision Diagrams (MTBDDs) to store CTMCs,\n        and, using Jacobi iterative method, present a parallel method\n        for the CTMC steady-state solution. Employing a 24-node\n        processor bank, we report results of the sparse systems with\n        over a billion equations and eighteen billion nonzeros.","bibo:AuthorList":["Mehmood, Rashid","Crowcroft, Jon"],"dc:date":"2005-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":80481,"sim:weight":0.445915,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.340349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286588,"sim:weight":0.306241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929166,"sim:weight":0.298938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.291236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.287981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286995,"sim:weight":0.272872,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286587,"sim:weight":0.268584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286438,"sim:weight":0.267792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929201,"sim:weight":0.262758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75571,"sim:weight":0.255324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334866,"sim:weight":0.248911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117216,"sim:weight":0.236596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":287170,"sim:weight":0.235577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47315,"sim:weight":0.22863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77446,"sim:weight":0.22773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286585,"sim:weight":0.227091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335240,"sim:weight":0.226784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286867,"sim:weight":0.225514,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.224115,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72252,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The decolorize algorithm for contrast enhancing, color\n        to grayscale conversion","bibo:abstract":"We present a new contrast enhancing color to grayscale\n        conversion algorithm which works in real-time. It incorporates\n        novel techniques for image sampling and dimensionality\n        reduction, sampling color differences by Gaussian pairing and\n        analyzing color differences by predominant component analysis.\n        In addition to its speed and simplicity, the algorithm has the\n        advantages of continuous mapping, global consistency, and\n        grayscale preservation, as well as predictable luminance,\n        saturation, and hue ordering properties. We give an extensive\n        range of examples and compare our method with other recently\n        published algorithms.","bibo:AuthorList":["Grundland, Mark","Dodgson, Neil A."],"dc:date":"2005-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":981120,"sim:weight":0.372306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116703,"sim:weight":0.353356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009673,"sim:weight":0.273785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019007,"sim:weight":0.26711,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1090442,"sim:weight":0.261168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929842,"sim:weight":0.250228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934117,"sim:weight":0.244116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901535,"sim:weight":0.242286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767458,"sim:weight":0.215227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991542,"sim:weight":0.21223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":951025,"sim:weight":0.196356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820275,"sim:weight":0.176148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1387823,"sim:weight":0.170003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.163237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.155122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799378,"sim:weight":0.152414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.143986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43398,"sim:weight":0.139486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.138026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19444,"sim:weight":0.137282,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72255,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Cassandra: flexible trust management and its application\n        to electronic health records","bibo:abstract":"The emergence of distributed applications operating on\n        large-scale, heterogeneous and decentralised networks poses new\n        and challenging problems of concern to society as a whole, in\n        particular for data security, privacy and confidentiality. Trust\n        management and authorisation policy languages have been proposed\n        to address access control and authorisation in this context.\n        Still, many key problems have remained unsolved. Existing\n        systems are often not expressive enough, or are so expressive\n        that access control becomes undecidable; their semantics is not\n        formally specified; and they have not been shown to meet the\n        requirements set by actual real-world applications.\n        \n        This dissertation addresses these problems. We present\n        Cassandra, a role-based language and system for expressing\n        authorisation policy, and the results of a substantial case\n        study, a policy for a national electronic health record (EHR)\n        system, based on the requirements of the UK National Health\n        Service’s National Programme for Information Technology (NPfIT).\n        \n        Cassandra policies are expressed in a language derived from\n        Datalog with constraints. Cassandra supports credential-based\n        authorisation (eg between administrative domains), and rules can\n        refer to remote policies (for credential retrieval and trust\n        negotiation). The expressiveness of the language (and its\n        computational complexity) can be tuned by choosing an\n        appropriate constraint domain. The language is small and has a\n        formal semantics for both query evaluation and the access\n        control engine.\n        \n        There has been a lack of real-world examples of complex security\n        policies: our NPfIT case study fills this gap. The resulting\n        Cassandra policy (with 375 rules) demonstrates that the policy\n        language is expressive enough for a real-world application. We\n        thus demonstrate that a general-purpose trust management system\n        can be designed to be highly flexible, expressive, formally\n        founded and meet the complex requirements of real-world\n        applications.","bibo:AuthorList":["Becker, Moritz Y."],"dc:date":"2005-10","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"Moritz Y Becker. (2005). Cassandra: Flexible trust management and its application to electronic health records.","authors":[],"bibo:shortTitle":"Cassandra: Flexible trust management and its application to electronic health records.","dc:date":"2005","refDocId":72255}],"similarities":[{"identifier":9034590,"sim:weight":0.326156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9015636,"sim:weight":0.314452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100616,"sim:weight":0.312699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.293755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934200,"sim:weight":0.280861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":810,"sim:weight":0.275481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145717,"sim:weight":0.273502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934111,"sim:weight":0.268974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":6205875,"sim:weight":0.2663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187729,"sim:weight":0.26168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932135,"sim:weight":0.255865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.250354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930937,"sim:weight":0.244181,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38466,"sim:weight":0.243646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4896009,"sim:weight":0.235559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997499,"sim:weight":0.23233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9552805,"sim:weight":0.232188,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.231427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934098,"sim:weight":0.230562,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.228728,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72257,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An agent architecture for simulation of end-users in\n        programming-like tasks","bibo:abstract":"We present some motivation and technical details for a software\n        simulation of an end-user performing programming-like tasks. The\n        simulation uses an agent/agenda model by breaking tasks down\n        into subgoals, based on work of A. Blackwell. This document was\n        distributed at the CHI 2002 workshop on Cognitive Models of\n        Programming-Like Processes.","bibo:AuthorList":["Staton, Sam"],"dc:date":"2005-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998220,"sim:weight":0.320528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1914779,"sim:weight":0.284189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.266846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.266654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48414,"sim:weight":0.264032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102604,"sim:weight":0.263025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998517,"sim:weight":0.262439,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1494397,"sim:weight":0.261847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.259035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.257109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767104,"sim:weight":0.246011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998087,"sim:weight":0.236566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41028,"sim:weight":0.231536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998462,"sim:weight":0.222902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083693,"sim:weight":0.215816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998504,"sim:weight":0.209875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998147,"sim:weight":0.203442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.20312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.202602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819987,"sim:weight":0.19482,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72258,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"RFID is X-ray vision","bibo:abstract":"Making RFID tags as ubiquitous as barcodes will enable machines\n        to see and recognize any tagged object in their vicinity, better\n        than they ever could with the smartest image processing\n        algorithms. This opens many opportunities for “sentient\n        computing” applications.\n        \n        However, in so far as this new capability has some of the\n        properties of X-ray vision, it opens the door to abuses. To\n        promote discussion, I won’t elaborate on low level technological\n        solutions; I shall instead discuss a simple security policy\n        model that addresses most of the privacy issues. Playing devil’s\n        advocate, I shall also indicate why it is currently unlikely\n        that consumers will enjoy the RFID privacy that some of them\n        vociferously demand.","bibo:AuthorList":["Stajano, Frank"],"dc:date":"2005-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1004023,"sim:weight":0.470427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105185,"sim:weight":0.435084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764651,"sim:weight":0.430291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":896350,"sim:weight":0.400431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":338541,"sim:weight":0.391733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568736,"sim:weight":0.383407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799316,"sim:weight":0.372804,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352163,"sim:weight":0.368366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.366404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800155,"sim:weight":0.36565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.343801,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98987,"sim:weight":0.333955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929812,"sim:weight":0.333715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.323159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.322165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184408,"sim:weight":0.316421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.306451,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382042,"sim:weight":0.306446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46838,"sim:weight":0.300115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.300022,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72260,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Robbing the bank with a theorem prover","bibo:abstract":"We present the first methodology for analysis and automated\n        detection of attacks on security application programming\n        interfaces (security APIs) – the interfaces to hardware\n        cryptographic services used by developers of critical security\n        systems, such as banking applications. Taking a cue from\n        previous work on the formal analysis of security protocols, we\n        model APIs purely according to specifications, under the\n        assumption of ideal encryption primitives. We use a theorem\n        prover tool and adapt it to the security API context. We develop\n        specific formalization and automation techniques that allow us\n        to fully harness the power of a theorem prover. We show how,\n        using these techniques, we were able to automatically\n        re-discover all of the pure API attacks originally documented by\n        Bond and Anderson against banking payment networks, since their\n        discovery of this type of attack in 2000. We conclude with a\n        note of encouragement: the complexity and unintuiveness of the\n        modelled attacks make a very strong case for continued focus on\n        automated formal analysis of cryptographic APIs.","bibo:AuthorList":["Youn, Paul","Adida, Ben","Bond, Mike","Clulow, Jolyon","Herzog, Jonathan","Lin, Amerson","Rivest, Ronald L.","Anderson, Ross"],"dc:date":"2005-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4848,"sim:weight":0.363854,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9425322,"sim:weight":0.346242,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765098,"sim:weight":0.333594,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12403,"sim:weight":0.274308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.253602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.240239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.220129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.21869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":245480,"sim:weight":0.206438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":843001,"sim:weight":0.19936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43550,"sim:weight":0.197811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.192186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512218,"sim:weight":0.181947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.173172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.170276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75317,"sim:weight":0.168074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.165319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.157558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.157159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393493,"sim:weight":0.156682,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72262,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Using trust and risk for access control in Global\n        Computing","bibo:abstract":"Global Computing is a vision of a massively networked\n        infrastructure supporting a large population of diverse but\n        cooperating entities. Similar to ubiquitous computing, entities\n        of global computing will operate in environments that are\n        dynamic and unpredictable, requiring them to be capable of\n        dealing with unexpected interactions and previously unknown\n        principals using an unreliable infrastructure.\n        \n        These properties will pose new security challenges that are not\n        adequately addressed by existing security models and mechanisms.\n        Traditionally privileges are statically encoded as security\n        policy, and while rôle-based access control introduces a layer\n        of abstraction between privilege and identity, rôles, privileges\n        and context must still be known in advance of any interaction\n        taking place.\n        \n        Human society has developed the mechanism of trust to overcome\n        initial suspicion and gradually evolve privileges. Trust\n        successfully enables collaboration amongst human agents — a\n        computational model of trust ought to be able to enable the same\n        in computational agents. Existing research in this area has\n        concentrated on developing trust management systems that permit\n        the encoding of, and reasoning about, trust beliefs, but the\n        relationship between these and privilege is still hard coded.\n        These systems also omit any explicit reasoning about risk, and\n        its relationship to privilege, nor do they permit the automated\n        evolution of trust over time.\n        \n        This thesis examines the relationship between trust, risk and\n        privilege in an access control system. An outcome-based approach\n        is taken to risk modelling, using explicit costs and benefits to\n        model the relationship between risk and privilege. This is used\n        to develop a novel model of access control — trust-based access\n        control (TBAC) — firstly for the limited domain of collaboration\n        between Personal Digital Assistants (PDAs), and later for more\n        general global computing applications using the SECURE\n        computational trust framework.\n        \n        This general access control model is also used to extend an\n        existing rôle-based access control system to explicitly reason\n        about trust and risk. A further refinement is the incorporation\n        of the economic theory of decision-making under uncertainty by\n        expressing costs and benefits as utility, or preference-scaling,\n        functions. It is then shown how Bayesian trust models can be\n        used in the SECURE framework, and how these models enable a\n        better abstraction to be obtained in the access control policy.\n        It is also shown how the access control model can be used to\n        take such decisions as whether the cost of seeking more\n        information about a principal is justified by the risk\n        associated with granting the privilege, and to determine whether\n        a principal should respond to such requests upon receipt. The\n        use of game theory to help in the construction of policies is\n        also briefly considered.\n        \n        Global computing has many applications, all of which require\n        access control to prevent abuse by malicious principals. This\n        thesis develops three in detail: an information sharing service\n        for PDAs, an identity-based spam detector and a peer-to-peer\n        collaborative spam detection network. Given the emerging nature\n        of computational trust systems, in order to evaluate the\n        effectiveness of the TBAC model, it was first necessary to\n        develop an evaluation methodology. This takes the approach of a\n        threat-based analysis, considering possible attacks at the\n        component and system level, to ensure that components are\n        correctly integrated, and system-level assumptions made by\n        individual components are valid. Applying the methodology to the\n        implementation of the TBAC model demonstrates its effectiveness\n        in the scenarios chosen, with good promise for further,\n        untested, scenarios.","bibo:AuthorList":["Dimmock, Nathan E."],"dc:date":"2005-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8930422,"sim:weight":0.7122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934483,"sim:weight":0.708734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932224,"sim:weight":0.648683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997779,"sim:weight":0.643129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932256,"sim:weight":0.6042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38006,"sim:weight":0.592759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997792,"sim:weight":0.586404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100491,"sim:weight":0.575157,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934288,"sim:weight":0.572275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100616,"sim:weight":0.560639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933468,"sim:weight":0.538993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934484,"sim:weight":0.522467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12842,"sim:weight":0.516986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104940,"sim:weight":0.493457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930937,"sim:weight":0.490402,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505815,"sim:weight":0.470068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933737,"sim:weight":0.466324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":478168,"sim:weight":0.463477,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933882,"sim:weight":0.459595,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932186,"sim:weight":0.458,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72264,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"First-class relationships in an object-oriented\n        language","bibo:abstract":"In this paper we investigate the addition of first-class\n        relationships to a prototypical object-oriented programming\n        language (a “middleweight” fragment of Java). We provide\n        language-level constructs to declare relationships between\n        classes and to manipulate relationship instances. We allow\n        relationships to have attributes and provide a novel notion of\n        relationship inheritance. We formalize our language giving both\n        the type system and operational semantics and prove certain key\n        safety properties.","bibo:AuthorList":["Bierman, Gavin","Wren, Alisdair"],"dc:date":"2005-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":617465,"sim:weight":0.33837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934251,"sim:weight":0.298175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934219,"sim:weight":0.283947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930995,"sim:weight":0.276827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43185,"sim:weight":0.27446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65319,"sim:weight":0.261393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980779,"sim:weight":0.261101,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767111,"sim:weight":0.259992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65304,"sim:weight":0.255792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930755,"sim:weight":0.240306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.2368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1039301,"sim:weight":0.236622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89999,"sim:weight":0.235338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":534097,"sim:weight":0.224268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902487,"sim:weight":0.205413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.203564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89093,"sim:weight":0.201344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.198598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1010296,"sim:weight":0.196111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919957,"sim:weight":0.195651,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72266,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Cryptographic processors – a survey","bibo:abstract":"Tamper-resistant cryptographic processors are becoming the\n        standard way to enforce data-usage policies. Their history began\n        with military cipher machines, and hardware security modules\n        used to encrypt the PINs that bank customers use to authenticate\n        themselves to ATMs. In both cases, the designers wanted to\n        prevent abuse of data and key material should a device fall into\n        the wrong hands. From these specialist beginnings,\n        cryptoprocessors spread into devices such as prepayment\n        electricity meters, and the vending machines that sell credit\n        for them. In the 90s, tamper-resistant smartcards became\n        integral to GSM mobile phone identification and to key\n        management in pay-TV set-top boxes, while secure\n        microcontrollers were used in remote key entry devices for cars.\n        In the last five years, dedicated crypto chips have been\n        embedded in devices from games console accessories to printer\n        ink cartridges, to control product and accessory aftermarkets.\n        The ‘Trusted Computing’ initiative will soon embed\n        cryptoprocessors in PCs so that they can identify each other\n        remotely.\n        \n        This paper surveys the range of applications of tamper-resistant\n        hardware, and the array of attack and defence mechanisms which\n        have evolved in the tamper-resistance arms race.","bibo:AuthorList":["Anderson, Ross","Bond, Mike","Clulow, Jolyon","Skorobogatov, Sergei"],"dc:date":"2005-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1023853,"sim:weight":0.432737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.396929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2674394,"sim:weight":0.329303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003355,"sim:weight":0.319401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512741,"sim:weight":0.307114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276803,"sim:weight":0.29109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116468,"sim:weight":0.246877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":245480,"sim:weight":0.24094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":988465,"sim:weight":0.233205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75317,"sim:weight":0.228971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151979,"sim:weight":0.204079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151791,"sim:weight":0.192974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.177819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151982,"sim:weight":0.176598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151586,"sim:weight":0.174466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710106,"sim:weight":0.171434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151792,"sim:weight":0.1714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.167183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":870235,"sim:weight":0.162036,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.153871,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72268,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Combining cryptography with biometrics\n        effectively","bibo:abstract":"We propose the first practical and secure way to integrate the\n        iris biometric into cryptographic applications. A repeatable\n        binary string, which we call a biometric key, is generated\n        reliably from genuine iris codes. A well-known difficulty has\n        been how to cope with the 10 to 20% of error bits within an iris\n        code and derive an error-free key. To solve this problem, we\n        carefully studied the error patterns within iris codes, and\n        devised a two-layer error correction technique that combines\n        Hadamard and Reed-Solomon codes. The key is generated from a\n        subject’s iris image with the aid of auxiliary error-correction\n        data, which do not reveal the key, and can be saved in a\n        tamper-resistant token such as a smart card. The reproduction of\n        the key depends on two factors: the iris biometric and the\n        token. The attacker has to procure both of them to compromise\n        the key. We evaluated our technique using iris samples from 70\n        different eyes, with 10 samples from each eye. We found that an\n        error-free key can be reproduced reliably from genuine iris\n        codes with a 99.5% success rate. We can generate up to 140 bits\n        of biometric key, more than enough for 128-bit AES. The\n        extraction of a repeatable binary string from biometrics opens\n        new possible applications, where a strong binding is required\n        between a person and cryptographic operations. For example, it\n        is possible to identify individuals without maintaining a\n        central database of biometric templates, to which privacy\n        objections might be raised.","bibo:AuthorList":["Hao, Feng","Anderson, Ross","Daugman, John"],"dc:date":"2005-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1079937,"sim:weight":0.590568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003816,"sim:weight":0.586065,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764394,"sim:weight":0.569843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":910409,"sim:weight":0.550114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083753,"sim:weight":0.5263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929815,"sim:weight":0.514812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982184,"sim:weight":0.490592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899535,"sim:weight":0.461312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865230,"sim:weight":0.453683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":889699,"sim:weight":0.429531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884715,"sim:weight":0.426041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1107466,"sim:weight":0.425999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":822416,"sim:weight":0.419428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916742,"sim:weight":0.417194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":611,"sim:weight":0.416357,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901956,"sim:weight":0.404349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937207,"sim:weight":0.404276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917012,"sim:weight":0.403721,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757960,"sim:weight":0.372178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75907,"sim:weight":0.369899,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72270,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Non-blocking hashtables with open addressing","bibo:abstract":"We present the first non-blocking hashtable based on open\n        addressing that provides the following benefits: it combines\n        good cache locality, accessing a single cacheline if there are\n        no collisions, with short straight-line code; it needs no\n        storage overhead for pointers and memory allocator schemes,\n        having instead an overhead of two words per bucket; it does not\n        need to periodically reorganise or replicate the table; and it\n        does not need garbage collection, even with arbitrary-sized\n        keys. Open problems include resizing the table and replacing,\n        rather than erasing, entries. The result is a highly-concurrent\n        set algorithm that approaches or outperforms the best\n        externally-chained implementations we tested, with fixed memory\n        costs and no need to select or fine-tune a garbage collector or\n        locking strategy.","bibo:AuthorList":["Purcell, Chris","Harris, Tim"],"dc:date":"2005-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1083563,"sim:weight":0.185531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.179287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69995,"sim:weight":0.165917,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.165184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.153743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.153025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.151949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.150457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019074,"sim:weight":0.145867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999088,"sim:weight":0.145473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.142939,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2794230,"sim:weight":0.142376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.139882,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.138103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116788,"sim:weight":0.137446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1433748,"sim:weight":0.134406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653036,"sim:weight":0.130666,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934816,"sim:weight":0.128547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.125048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.124132,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72272,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Optimistic Generic Broadcast","bibo:abstract":"We consider an asynchronous system with the Ω failure detector,\n        and investigate the number of communication steps required by\n        various broadcast protocols in runs in which the leader does not\n        change. Atomic Broadcast, used for example in state machine\n        replication, requires three communication steps. Optimistic\n        Atomic Broadcast requires only two steps if all correct\n        processes receive messages in the same order. Generic Broadcast\n        requires two steps if no messages conflict. We present an\n        algorithm that subsumes both of these approaches and guarantees\n        two-step delivery if all conflicting messages are received in\n        the same order, and three-step delivery otherwise. Internally,\n        our protocol uses two new algorithms. First, a Consensus\n        algorithm which decides in one communication step if all\n        proposals are the same, and needs two steps otherwise. Second, a\n        method that allows us to run infinitely many instances of a\n        distributed algorithm, provided that only finitely many of them\n        are different. We assume that fewer than a third of all\n        processes are faulty (n \u003e 3f).","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2005-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1017988,"sim:weight":0.322951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931416,"sim:weight":0.272812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937305,"sim:weight":0.241891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003699,"sim:weight":0.221129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549557,"sim:weight":0.218484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933180,"sim:weight":0.208697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.206911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.204429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.202014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897432,"sim:weight":0.198964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26006,"sim:weight":0.190185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.18524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930875,"sim:weight":0.182106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":971809,"sim:weight":0.1732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1086050,"sim:weight":0.172873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.172699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56752,"sim:weight":0.169518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":889153,"sim:weight":0.162442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916906,"sim:weight":0.162016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.157769,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72274,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The topology of covert conflict","bibo:abstract":"Often an attacker tries to disconnect a network by destroying\n        nodes or edges, while the defender counters using various\n        resilience mechanisms. Examples include a music industry body\n        attempting to close down a peer-to-peer file-sharing network;\n        medics attempting to halt the spread of an infectious disease by\n        selective vaccination; and a police agency trying to decapitate\n        a terrorist organisation. Albert, Jeong and Barabási famously\n        analysed the static case, and showed that vertex-order attacks\n        are effective against scale-free networks. We extend this work\n        to the dynamic case by developing a framework based on\n        evolutionary game theory to explore the interaction of attack\n        and defence strategies. We show, first, that naive defences\n        don’t work against vertex-order attack; second, that defences\n        based on simple redundancy don’t work much better, but that\n        defences based on cliques work well; third, that attacks based\n        on centrality work better against clique defences than\n        vertex-order attacks do; and fourth, that defences based on\n        complex strategies such as delegation plus clique resist\n        centrality attacks better than simple clique defences. Our\n        models thus build a bridge between network analysis and\n        evolutionary game theory, and provide a framework for analysing\n        defence and attack in networks where topology matters. They\n        suggest definitions of efficiency of attack and defence, and may\n        even explain the evolution of insurgent organisations from\n        networks of cells to a more virtual leadership that facilitates\n        operations rather than directing them. Finally, we draw some\n        conclusions and present possible directions for future research.","bibo:AuthorList":["Nagaraja, Shishir","Anderson, Ross"],"dc:date":"2005-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":684257,"sim:weight":0.296414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68254,"sim:weight":0.286183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.277588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.268539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.259992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43550,"sim:weight":0.220696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.192412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2779656,"sim:weight":0.190199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4182556,"sim:weight":0.182194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568724,"sim:weight":0.165799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1634050,"sim:weight":0.165492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108509,"sim:weight":0.156828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.14876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664919,"sim:weight":0.147532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667618,"sim:weight":0.147452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1914779,"sim:weight":0.145233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934499,"sim:weight":0.144909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145942,"sim:weight":0.143135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707867,"sim:weight":0.142705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.142018,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72276,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mind-reading machines: automated inference of complex\n        mental states","bibo:abstract":"People express their mental states all the time, even when\n        interacting with machines. These mental states shape the\n        decisions that we make, govern how we communicate with others,\n        and affect our performance. The ability to attribute mental\n        states to others from their behaviour, and to use that knowledge\n        to guide one’s own actions and predict those of others is known\n        as theory of mind or mind-reading.\n        \n        The principal contribution of this dissertation is the real time\n        inference of a wide range of mental states from head and facial\n        displays in a video stream. In particular, the focus is on the\n        inference of complex mental states: the affective and cognitive\n        states of mind that are not part of the set of basic emotions.\n        The automated mental state inference system is inspired by and\n        draws on the fundamental role of mind-reading in communication\n        and decision-making.\n        \n        The dissertation describes the design, implementation and\n        validation of a computational model of mind-reading. The design\n        is based on the results of a number of experiments that I have\n        undertaken to analyse the facial signals and dynamics of complex\n        mental states. The resulting model is a multi-level\n        probabilistic graphical model that represents the facial events\n        in a raw video stream at different levels of spatial and\n        temporal abstraction. Dynamic Bayesian Networks model observable\n        head and facial displays, and corresponding hidden mental states\n        over time.\n        \n        The automated mind-reading system implements the model by\n        combining top-down predictions of mental state models with\n        bottom-up vision-based processing of the face. To support\n        intelligent human-computer interaction, the system meets three\n        important criteria. These are: full automation so that no manual\n        preprocessing or segmentation is required, real time execution,\n        and the categorization of mental states early enough after their\n        onset to ensure that the resulting knowledge is current and\n        useful.\n        \n        The system is evaluated in terms of recognition accuracy,\n        generalization and real time performance for six broad classes\n        of complex mental states—agreeing, concentrating, disagreeing,\n        interested, thinking and unsure, on two different corpora. The\n        system successfully classifies and generalizes to new examples\n        of these classes with an accuracy and speed that are comparable\n        to that of human recognition.\n        \n        The research I present here significantly advances the nascent\n        ability of machines to infer cognitive-affective mental states\n        in real time from nonverbal expressions of people. By developing\n        a real time system for the inference of a wide range of mental\n        states beyond the basic emotions, I have widened the scope of\n        human-computer interaction scenarios in which this technology\n        can be integrated. This is an important step towards building\n        socially and emotionally intelligent machines.","bibo:AuthorList":["el Kaliouby, Rana Ayman"],"dc:date":"2005-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":21967,"sim:weight":0.597514,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960658,"sim:weight":0.578142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":997930,"sim:weight":0.568873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898421,"sim:weight":0.534353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9028812,"sim:weight":0.49062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21965,"sim:weight":0.46073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19420,"sim:weight":0.451517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397664,"sim:weight":0.420014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22457,"sim:weight":0.409503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930631,"sim:weight":0.405471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22434,"sim:weight":0.404629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397098,"sim:weight":0.403245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":717279,"sim:weight":0.397564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282011,"sim:weight":0.385842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239602,"sim:weight":0.377145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19666,"sim:weight":0.37461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1016005,"sim:weight":0.374316,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50862,"sim:weight":0.374212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":717197,"sim:weight":0.366558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18533,"sim:weight":0.366483,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72279,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Results from 200 billion iris\n        cross-comparisons","bibo:abstract":"Statistical results are presented for biometric recognition of\n        persons by their iris patterns, based on 200 billion\n        cross-comparisons between different eyes. The database consisted\n        of 632,500 iris images acquired in the Middle East, in a\n        national border-crossing protection programme that uses the\n        Daugman algorithms for iris recognition. A total of 152\n        different nationalities were represented in this database. The\n        set of exhaustive cross-comparisons between all possible\n        pairings of irises in the database shows that with reasonable\n        acceptance thresholds, the False Match rate is less than 1 in\n        200 billion. Recommendations are given for the numerical\n        decision threshold policy that would enable reliable\n        identification performance on a national scale in the UK.","bibo:AuthorList":["Daugman, John"],"dc:date":"2005-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":764653,"sim:weight":0.55713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":863917,"sim:weight":0.556534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973017,"sim:weight":0.537583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901572,"sim:weight":0.536489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003648,"sim:weight":0.534643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116740,"sim:weight":0.534336,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083030,"sim:weight":0.534047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1141814,"sim:weight":0.533249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960718,"sim:weight":0.522582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980788,"sim:weight":0.50998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1084670,"sim:weight":0.506864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948590,"sim:weight":0.502435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":677215,"sim:weight":0.492687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756019,"sim:weight":0.489963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003816,"sim:weight":0.488535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757067,"sim:weight":0.486306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919880,"sim:weight":0.484207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":909884,"sim:weight":0.48,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116747,"sim:weight":0.467287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":938724,"sim:weight":0.45558,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72281,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Visualisation, interpretation and use of location-aware\n        interfaces","bibo:abstract":"Ubiquitous Computing (Ubicomp), a term coined by Mark Weiser in\n        the early 1990’s, is about transparently equipping the physical\n        environment and everyday objects in it with computational,\n        sensing and networking abilities. In contrast with traditional\n        desktop computing the “computer” moves into the background,\n        unobtrusively supporting users in their everyday life.\n        \n        One of the instantiations of Ubicomp is location-aware\n        computing. Using location sensors, the “computer” reacts to\n        changes in location of users and everyday objects. Location\n        changes are used to infer user intent in order to give the user\n        the most appropriate support for the task she is performing.\n        Such support can consist of automatically providing information\n        or configuring devices and applications deemed adequate for the\n        inferred user task.\n        \n        Experience with these applications has uncovered a number of\n        usability problems that stem from the fact that the “computer”\n        in this paradigm has become unidentifiable for the user. More\n        specifically, these arise from lack of feedback from, loss of\n        user control over, and the inability to provide a conceptual\n        model of the “computer”.\n        \n        Starting from the proven premise that feedback is indispensable\n        for smooth human-machine interaction, a system that uses\n        Augmented Reality in order to visually provide information about\n        the state of a location-aware environment and devices in it, is\n        designed and implemented.\n        \n        Augmented Reality (AR) as it is understood for the purpose of\n        this research uses a see-through head-mounted display, trackers\n        and 3-dimensional (3D) graphics in order to give users the\n        illusion that 3-dimensional graphical objects specified and\n        generated on a computer are actually located in the real world.\n        \n        The system described in this thesis can be called a Graphical\n        User Interface (GUI) for a physical environment. Properties of\n        GUIs for desktop environments are used as a valuable resource in\n        designing a software architecture that supports interactivity in\n        a location-aware environment, understanding how users might\n        conceptualise the “computer” and extracting design principles\n        for visualisation in a Ubicomp environment.\n        \n        Most importantly this research offers a solution to fundamental\n        interaction problems in Ubicomp environments. In doing so this\n        research presents the next step from reactive environments to\n        interactive environments.","bibo:AuthorList":["Rehman, Kasim"],"dc:date":"2005-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4185817,"sim:weight":0.673682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707667,"sim:weight":0.633354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.599689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631613,"sim:weight":0.5839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70259,"sim:weight":0.531713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19915,"sim:weight":0.531079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3100,"sim:weight":0.529176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":538,"sim:weight":0.528452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70509,"sim:weight":0.52206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932277,"sim:weight":0.515096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932102,"sim:weight":0.514964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70514,"sim:weight":0.512953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.506762,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549727,"sim:weight":0.506414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70526,"sim:weight":0.494655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997554,"sim:weight":0.49447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70485,"sim:weight":0.493431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932678,"sim:weight":0.492829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70431,"sim:weight":0.491774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70287,"sim:weight":0.49173,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72283,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On deadlock, livelock, and forward progress","bibo:abstract":"Deadlock and livelock can happen at many different levels in a\n        distributed system. We unify both around the concept of forward\n        progress and standstill. We describe a framework capable of\n        detecting the lack of forward progress in distributed systems.\n        Our prototype can easily solve traditional deadlock problems\n        where synchronization is via a customer network protocol;\n        however, many interesting research challenges remain.","bibo:AuthorList":["Ho, Alex","Smith, Steven","Hand, Steven"],"dc:date":"2005-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.32604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897459,"sim:weight":0.242668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117391,"sim:weight":0.145363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.10472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.103689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932111,"sim:weight":0.102686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151362,"sim:weight":0.10138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53204,"sim:weight":0.0989748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707868,"sim:weight":0.0989247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187654,"sim:weight":0.0968418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.0967288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.0963689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998811,"sim:weight":0.0921624,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998308,"sim:weight":0.0908789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43550,"sim:weight":0.0889513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998356,"sim:weight":0.085745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.0853781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86796,"sim:weight":0.0848167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.0825835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44839,"sim:weight":0.0786149,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72285,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Between shallow and deep: an experiment in automatic\n        summarising","bibo:abstract":"This paper describes an experiment in automatic summarising\n        using a general-purpose strategy based on a compromise between\n        shallow and deep processing. The method combines source text\n        analysis into simple logical forms with the use of a semantic\n        graph for representation and operations on the graph to identify\n        summary content.\n        \n        The graph is based on predications extracted from the logical\n        forms, and the summary operations apply three criteria, namely\n        importance, representativeness, and cohesiveness, in choosing\n        node sets to form the content representation for the summary.\n        This is used in different ways for output summaries. The paper\n        presents the motivation for the strategy, details of the CLASP\n        system, and the results of initial testing and evaluation on\n        news material.","bibo:AuthorList":["Spärck Jones, R.I. Tucker and K."],"dc:date":"2005-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.344745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.324533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19673,"sim:weight":0.322196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.313189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21972,"sim:weight":0.292769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98750,"sim:weight":0.292615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16094,"sim:weight":0.281975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277021,"sim:weight":0.259625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276870,"sim:weight":0.227708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.211865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151721,"sim:weight":0.181381,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.179816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1510168,"sim:weight":0.167484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":922951,"sim:weight":0.165052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933943,"sim:weight":0.163806,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43347,"sim:weight":0.163388,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108385,"sim:weight":0.16031,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4393,"sim:weight":0.160305,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934682,"sim:weight":0.153299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43975,"sim:weight":0.147845,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72287,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"MIRRORS: An integrated framework for capturing real\n        world behaviour for models of ad hoc networks","bibo:abstract":"The simulation models used in mobile ad hoc network research\n        have been criticised for lack of realism. While credited with\n        ease of understanding and implementation, they are often based\n        on theoretical models, rather than real world observations.\n        Criticisms have centred on radio propagation or mobility models.\n        \n        In this work, we take an integrated approach to modelling the\n        real world that underlies a mobile ad hoc network. While\n        pointing out the correlations between the space, radio\n        propagation and mobility models, we use mobility as a focal\n        point to propose a new framework, MIRRORS, that captures real\n        world behaviour. We give the formulation of a specific model\n        within the framework and present simulation results that reflect\n        topology properties of the networks synthesised. Compared with\n        the existing models studied, our model better represent real\n        world topology properties and presents a wider spectrum of\n        variation in the metrics examined, due to the model\n        encapsulating more detailed dynamics. While the common approach\n        is to focus on performance evaluation of existing protocols\n        using these models, we discuss protocol design opportunities\n        across layers in view of the simulation results.","bibo:AuthorList":["Hu, Wenjun","Crowcroft, Jon"],"dc:date":"2005-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":99165,"sim:weight":0.425732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":859988,"sim:weight":0.378545,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.356377,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023851,"sim:weight":0.344497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44051,"sim:weight":0.328971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920212,"sim:weight":0.310905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040584,"sim:weight":0.282922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549567,"sim:weight":0.273649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894347,"sim:weight":0.250003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.248871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10716,"sim:weight":0.24661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009563,"sim:weight":0.243877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":938749,"sim:weight":0.241309,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2150032,"sim:weight":0.240008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.239861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821035,"sim:weight":0.239743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.239051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.228444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.222204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.210874,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72289,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Semi-invasive attacks – A new approach to hardware\n        security analysis","bibo:abstract":"Semiconductor chips are used today not only to control systems,\n        but also to protect them against security threats. A continuous\n        battle is waged between manufacturers who invent new security\n        solutions, learning their lessons from previous mistakes, and\n        the hacker community, constantly trying to break implemented\n        protections. Some chip manufacturers do not pay enough attention\n        to the proper design and testing of protection mechanisms. Even\n        where they claim their products are highly secure, they do not\n        guarantee this and do not take any responsibility if a device is\n        compromised. In this situation, it is crucial for the design\n        engineer to have a convenient and reliable method of testing\n        secure chips.\n        \n        This thesis presents a wide range of attacks on hardware\n        security in microcontrollers and smartcards. This includes\n        already known non-invasive attacks, such as power analysis and\n        glitching, and invasive attacks, such as reverse engineering and\n        microprobing. A new class of attacks – semi-invasive attacks –\n        is introduced. Like invasive attacks, they require depackaging\n        the chip to get access to its surface. But the passivation layer\n        remains intact, as these methods do not require electrical\n        contact to internal lines. Semi-invasive attacks stand between\n        non-invasive and invasive attacks. They represent a greater\n        threat to hardware security, as they are almost as effective as\n        invasive attacks but can be low-cost like non-invasive attacks.\n        \n        This thesis’ contribution includes practical fault-injection\n        attacks to modify SRAM and EEPROM content, or change the state\n        of any individual CMOS transistor on a chip. This leads to\n        almost unlimited capabilities to control chip operation and\n        circumvent protection mechanisms. A second contribution consist\n        of experiments on data remanence, which show that it is feasible\n        to extract information from powered-off SRAM and erased EPROM,\n        EEPROM and Flash memory devices.\n        \n        A brief introduction to copy protection in microcontrollers is\n        given. Hardware security evaluation techniques using\n        semi-invasive methods are introduced. They should help\n        developers to make a proper selection of components according to\n        the required level of security. Various defence technologies are\n        discussed, from low-cost obscurity methods to new approaches in\n        silicon design.","bibo:AuthorList":["Skorobogatov, Sergei P."],"dc:date":"2005-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":960274,"sim:weight":0.462009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.429512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918712,"sim:weight":0.407806,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24665,"sim:weight":0.396843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394254,"sim:weight":0.395281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009441,"sim:weight":0.382011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26661,"sim:weight":0.377856,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.371815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766148,"sim:weight":0.3644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919896,"sim:weight":0.355037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757816,"sim:weight":0.354639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918872,"sim:weight":0.353365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101593,"sim:weight":0.350393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5837178,"sim:weight":0.347267,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44673,"sim:weight":0.345954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71066,"sim:weight":0.341518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997618,"sim:weight":0.335488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931369,"sim:weight":0.326676,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383506,"sim:weight":0.317198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26371,"sim:weight":0.315233,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72291,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Hybrid routing: A pragmatic approach to mitigating\n        position uncertainty in geo-routing","bibo:abstract":"In recent years, research in wireless Ad Hoc routing seems to be\n        moving towards the approach of position based forwarding.\n        Amongst proposed algorithms, Greedy Perimeter Stateless Routing\n        has gained recognition for guaranteed delivery with modest\n        network overheads. Although this addresses the scaling\n        limitations with topological routing, it has limited tolerance\n        for position inaccuracy or stale state reported by a location\n        service. Several researchers have demonstrated that the\n        inaccuracy of the positional system could have a catastrophic\n        effect on position based routing protocols. In this paper, we\n        evaluate how the negative effects of position inaccuracy can be\n        countered by extending position based forwarding with a\n        combination of restrictive topological state, adaptive route\n        advertisement and hybrid forwarding. Our results show that a\n        hybrid of the position and topology approaches used in Landmark\n        Guided Forwarding yields a high goodput and timely packet\n        delivery, even with 200 meters of position error.","bibo:AuthorList":["Lim, Meng How","Greenhalgh, Adam","Chesterfield, Julian","Crowcroft, Jon"],"dc:date":"2005-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":896512,"sim:weight":0.522051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899697,"sim:weight":0.506918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919950,"sim:weight":0.502111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":949497,"sim:weight":0.499692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083643,"sim:weight":0.476333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":895670,"sim:weight":0.449765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929963,"sim:weight":0.417252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767368,"sim:weight":0.398968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749061,"sim:weight":0.391169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":717322,"sim:weight":0.383682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948892,"sim:weight":0.379471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929743,"sim:weight":0.375371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":768360,"sim:weight":0.373845,"sim:AssociationMethod":"similarity_cosine"},{"identifier":824815,"sim:weight":0.364378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":971216,"sim:weight":0.362433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":762347,"sim:weight":0.362183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":866266,"sim:weight":0.358572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960005,"sim:weight":0.354353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821035,"sim:weight":0.351119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1081653,"sim:weight":0.345426,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72293,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A formal security policy for an NHS electronic health\n        record service","bibo:abstract":"The ongoing NHS project for the development of a UK-wide\n        electronic health records service, also known as the ‘Spine’,\n        raises many controversial issues and technical challenges\n        concerning the security and confidentiality of\n        patient-identifiable clinical data. As the system will need to\n        be constantly adapted to comply with evolving legal requirements\n        and guidelines, the Spine’s authorisation policy should not be\n        hard-coded into the system but rather be specified in a\n        high-level, general-purpose, machine-enforceable policy\n        language.\n        \n        We describe a complete authorisation policy for the Spine and\n        related services, written for the trust management system\n        Cassandra, and comprising 375 formal rules. The policy is based\n        on the NHS’s Output-based Specification (OBS) document and deals\n        with all requirements concerning access control of\n        patient-identifiable data, including legitimate relationships,\n        patients restricting access, authenticated express consent,\n        third-party consent, and workgroup management.","bibo:AuthorList":["Becker, Moritz Y."],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":96282,"sim:weight":0.31139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100616,"sim:weight":0.301143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930883,"sim:weight":0.293264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933129,"sim:weight":0.277591,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932135,"sim:weight":0.27701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1397065,"sim:weight":0.265038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4155848,"sim:weight":0.263127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187729,"sim:weight":0.26168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4156810,"sim:weight":0.256089,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52586,"sim:weight":0.234633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43998,"sim:weight":0.221445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109025,"sim:weight":0.215026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176825,"sim:weight":0.214893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43080,"sim:weight":0.209989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81539,"sim:weight":0.206521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.205873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9322815,"sim:weight":0.199828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1344862,"sim:weight":0.194036,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105328,"sim:weight":0.193328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58406,"sim:weight":0.190339,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72295,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Efficient computer interfaces using continuous gestures,\n        language models, and speech","bibo:abstract":"Despite advances in speech recognition technology, users of\n        dictation systems still face a significant amount of work to\n        correct errors made by the recognizer. The goal of this work is\n        to investigate the use of a continuous gesture-based data entry\n        interface to provide an efficient and fun way for users to\n        correct recognition errors. Towards this goal, techniques are\n        investigated which expand a recognizer’s results to help cover\n        recognition errors. Additionally, models are developed which\n        utilize a speech recognizer’s n-best list to build letter-based\n        language models.","bibo:AuthorList":["Vertanen, Keith"],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":19749,"sim:weight":0.411903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1115163,"sim:weight":0.411668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":823464,"sim:weight":0.369167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008787,"sim:weight":0.347934,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.331868,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917250,"sim:weight":0.326386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22084,"sim:weight":0.31829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277094,"sim:weight":0.313103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.312582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931190,"sim:weight":0.307055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549509,"sim:weight":0.306834,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.30276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43624,"sim:weight":0.299018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.297293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.290619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19748,"sim:weight":0.287751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276906,"sim:weight":0.286421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933891,"sim:weight":0.284907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138487,"sim:weight":0.280734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.28031,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72297,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Landmark Guided Forwarding: A hybrid approach for Ad Hoc\n        routing","bibo:abstract":"Wireless Ad Hoc network routing presents some extremely\n        challenging research problems, trying to optimize parameters\n        such as energy conservation vs connectivity and global\n        optimization vs routing overhead scalability. In this paper we\n        focus on the problems of maintaining network connectivity in the\n        presence of node mobility whilst providing globally efficient\n        and robust routing. The common approach among existing wireless\n        Ad Hoc routing solutions is to establish a global optimal path\n        between a source and a destination. We argue that establishing a\n        globally optimal path is both unreliable and unsustainable as\n        the network diameter, traffic volume, number of nodes all\n        increase in the presence of moderate node mobility. To address\n        this we propose Landmark Guided Forwarding (LGF), a protocol\n        that provides a hybrid solution of topological and geographical\n        routing algorithms. We demonstrate that LGF is adaptive to\n        unstable connectivity and scalable to large networks. Our\n        results indicate therefore that Landmark Guided Forwarding\n        converges much faster, scales better and adapts well within a\n        dynamic wireless Ad Hoc environment in comparison to existing\n        solutions.","bibo:AuthorList":["Lim, Meng How","Greenhalgh, Adam","Chesterfield, Julian","Crowcroft, Jon"],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":895670,"sim:weight":0.554332,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749092,"sim:weight":0.549394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929729,"sim:weight":0.545574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":768360,"sim:weight":0.522609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729000,"sim:weight":0.50527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901580,"sim:weight":0.5043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821035,"sim:weight":0.496572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929743,"sim:weight":0.489072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929963,"sim:weight":0.48888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":896512,"sim:weight":0.477337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":824815,"sim:weight":0.470122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083679,"sim:weight":0.465643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":878035,"sim:weight":0.463256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1124009,"sim:weight":0.462956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003857,"sim:weight":0.451748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899130,"sim:weight":0.448816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":844784,"sim:weight":0.442103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919950,"sim:weight":0.438118,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1009560,"sim:weight":0.435643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146072,"sim:weight":0.435158,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72299,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"TCP, UDP, and Sockets: rigorous and\n        experimentally-validated behavioural specification : Volume 2:\n        The Specification","bibo:abstract":"See Volume 1 (UCAM-CL-TR-624).","bibo:AuthorList":["Bishop, Steve","Fairbairn, Matthew","Norrish, Michael","Sewell, Peter","Smith, Michael","Wansbrough, Keith"],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26733,"sim:weight":0.379548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058127,"sim:weight":0.2985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117337,"sim:weight":0.280956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929843,"sim:weight":0.258863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756348,"sim:weight":0.24807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982204,"sim:weight":0.246067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691190,"sim:weight":0.236231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":949518,"sim:weight":0.229959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894330,"sim:weight":0.220684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958390,"sim:weight":0.220197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":723940,"sim:weight":0.215922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":861945,"sim:weight":0.215877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":698328,"sim:weight":0.215409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929886,"sim:weight":0.209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008729,"sim:weight":0.200871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101224,"sim:weight":0.199669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793759,"sim:weight":0.192948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008809,"sim:weight":0.186394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.166577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":120725,"sim:weight":0.163216,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72301,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"TCP, UDP, and Sockets: rigorous and\n        experimentally-validated behavioural specification : Volume 1:\n        Overview","bibo:abstract":"We have developed a mathematically rigorous and\n        experimentally-validated post-hoc specification of the behaviour\n        of TCP, UDP, and the Sockets API. It characterises the API and\n        network-interface interactions of a host, using operational\n        semantics in the higher-order logic of the HOL automated proof\n        assistant. The specification is detailed, covering almost all\n        the information of the real-world communications: it is in terms\n        of individual TCP segments and UDP datagrams, though it\n        abstracts from the internals of IP. It has broad coverage,\n        dealing with arbitrary API call sequences and incoming messages,\n        not just some well-behaved usage. It is also accurate, closely\n        based on the de facto standard of (three of) the widely-deployed\n        implementations. To ensure this we have adopted a novel\n        experimental semantics approach, developing test generation\n        tools and symbolic higher-order-logic model checking techniques\n        that let us validate the specification directly against several\n        thousand traces captured from the implementations.\n        \n        The resulting specification, which is annotated for the\n        non-HOL-specialist reader, may be useful as an informal\n        reference for TCP/IP stack implementors and Sockets API users,\n        supplementing the existing informal standards and texts. It can\n        also provide a basis for high-fidelity automated testing of\n        future implementations, and a basis for design and formal proof\n        of higher-level communication layers. More generally, the work\n        demonstrates that it is feasible to carry out similar rigorous\n        specification work at design-time for new protocols. We discuss\n        how such a design-for-test approach should influence protocol\n        development, leading to protocol specifications that are both\n        unambiguous and clear, and to high-quality implementations that\n        can be tested directly against those specifications.\n        \n        This document (Volume 1) gives an overview of the project,\n        discussing the goals and techniques and giving an introduction\n        to the specification. The specification itself is given in the\n        companion Volume 2 (UCAM-CL-TR-625), which is automatically\n        typeset from the (extensively annotated) HOL source. As far as\n        possible we have tried to make the work accessible to four\n        groups of intended readers: workers in networking (implementors\n        of TCP/IP stacks, and designers of new protocols); in\n        distributed systems (implementors of software above the Sockets\n        API); in distributed algorithms (for whom this may make it\n        possible to prove properties about executable implementations of\n        those algorithms); and in semantics and automated reasoning.","bibo:AuthorList":["Bishop, Steve","Fairbairn, Matthew","Norrish, Michael","Sewell, Peter","Smith, Michael","Wansbrough, Keith"],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26733,"sim:weight":0.523535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934308,"sim:weight":0.380759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.353496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108795,"sim:weight":0.336096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.334825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.319907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.291906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.291815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101224,"sim:weight":0.290077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.289843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932083,"sim:weight":0.287397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.285392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.278536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.275971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.266507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80132,"sim:weight":0.263705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932389,"sim:weight":0.259991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88003,"sim:weight":0.257931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43185,"sim:weight":0.250675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997506,"sim:weight":0.237049,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72303,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Simple polymorphic usage analysis","bibo:abstract":"Implementations of lazy functional languages ensure that\n        computations are performed only when they are needed, and save\n        the results so that they are not repeated. This frees the\n        programmer to describe solutions at a high level, leaving\n        details of control flow to the compiler.\n        \n        This freedom however places a heavy burden on the compiler;\n        measurements show that over 70% of these saved results are never\n        used again. A usage analysis that could statically detect values\n        used at most once would enable these wasted updates to be\n        avoided, and would be of great benefit. However, existing usage\n        analyses either give poor results or have been applied only to\n        prototype compilers or toy languages.\n        \n        This thesis presents a sound, practical, type-based usage\n        analysis that copes with all the language features of a modern\n        functional language, including type polymorphism and\n        user-defined algebraic data types, and addresses a range of\n        problems that have caused difficulty for previous analyses,\n        including poisoning, mutual recursion, separate compilation, and\n        partial application and usage dependencies. In addition to\n        well-typing rules, an inference algorithm is developed, with\n        proofs of soundness and a complexity analysis.\n        \n        In the process, the thesis develops simple polymorphism, a novel\n        approach to polymorphism in the presence of subtyping that\n        attempts to strike a balance between pragmatic concerns and\n        expressive power. This thesis may be considered an extended\n        experiment into this approach, worked out in some detail but not\n        yet conclusive.\n        \n        The analysis described was designed in parallel with a full\n        implementation in the Glasgow Haskell Compiler, leading to\n        informed design choices, thorough coverage of language features,\n        and accurate measurements of its potential and effectiveness\n        when used on real code. The latter demonstrate that the analysis\n        yields moderate benefit in practice.","bibo:AuthorList":["Wansbrough, Keith"],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":85430,"sim:weight":0.495444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.486555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.476882,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9658,"sim:weight":0.465451,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.460615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86476,"sim:weight":0.452341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.450217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930772,"sim:weight":0.447625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.441734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72990,"sim:weight":0.441707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.439744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932022,"sim:weight":0.438387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.436991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.436478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.435476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.432669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.431183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.42951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.425708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.425269,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72305,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Cooperation and deviation in market-based resource\n        allocation","bibo:abstract":"This thesis investigates how business transactions are enhanced\n        through competing strategies for economically motivated\n        cooperation. To this end, it focuses on the setting of a\n        distributed, bilateral allocation protocol for electronic\n        services and resources. Cooperative efforts like these are often\n        threatened by transaction parties who aim to exploit their\n        competitors by deviating from so-called cooperative goals. We\n        analyse this conflict between cooperation and deviation by\n        presenting the case of two novel market systems which use\n        economic incentives to solve the complications that arise from\n        cooperation.\n        \n        The first of the two systems is a pricing model which is\n        designed to address the problematic resource market situation,\n        where supply exceeds demand and perfect competition can make\n        prices collapse to level zero. This pricing model uses supply\n        functions to determine the optimal Nash-Equilibrium price.\n        Moreover, in this model the providers’ market estimations are\n        updated with information about each of their own transactions.\n        Here, we implement the protocol in a discrete event simulation,\n        to show that the equilibrium prices are above competitive\n        levels, and to demonstrate that deviations from the pricing\n        model are not profitable.\n        \n        The second of the two systems is a reputation aggregation model,\n        which seeks the subgroup of raters that (1) contains the largest\n        degree of overall agreement and (2) derives the resulting\n        reputation scores from their comments. In order to seek\n        agreement, this model assumes that not all raters in the system\n        are equally able to foster an agreement. Based on the variances\n        of the raters’ comments, the system derives a notion of the\n        reputation for each rater, which is in turn fed back into the\n        model’s recursive scoring algorithm. We demonstrate the\n        convergence of this algorithm, and show the effectiveness of the\n        model’s ability to discriminate between poor and strong raters.\n        Then with a series of threat models, we show how resilient this\n        model is in terms of finding agreement, despite large\n        collectives of malicious raters. Finally, in a practical\n        example, we apply the model to the academic peer review process\n        in order to show its versatility at establishing a ranking of\n        rated objects.","bibo:AuthorList":["Lepler, Jörg H."],"dc:date":"2005-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":38006,"sim:weight":0.506563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43066,"sim:weight":0.49629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.496002,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100491,"sim:weight":0.488293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934484,"sim:weight":0.481728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934107,"sim:weight":0.478048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932121,"sim:weight":0.477039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934512,"sim:weight":0.476156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931293,"sim:weight":0.466701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931294,"sim:weight":0.466396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933882,"sim:weight":0.46177,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997450,"sim:weight":0.460555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.459025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826698,"sim:weight":0.456962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997667,"sim:weight":0.453132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930561,"sim:weight":0.451659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19037,"sim:weight":0.447941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.434343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933630,"sim:weight":0.431848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934290,"sim:weight":0.429555,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72307,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Fresh Objective Caml user manual","bibo:abstract":"This technical report is the user manual for the Fresh Objective\n        Caml system, which implements a functional programming language\n        incorporating facilities for manipulating syntax involving names\n        and binding operations.","bibo:AuthorList":["Shinwell, Mark R.","Pitts, Andrew M."],"dc:date":"2005-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98816,"sim:weight":0.2073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.160694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.156441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757541,"sim:weight":0.153449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767728,"sim:weight":0.147967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.126679,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.125744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937453,"sim:weight":0.119653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998295,"sim:weight":0.108891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88291,"sim:weight":0.10787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.0981248,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47026,"sim:weight":0.097044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.094194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.0915313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":478165,"sim:weight":0.0865135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.084225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.0833094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":268168,"sim:weight":0.0817426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187477,"sim:weight":0.0816444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.0802451,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72309,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Middleware support for context-awareness in distributed\n        sensor-driven systems","bibo:abstract":"Context-awareness concerns the ability of computing devices to\n        detect, interpret and respond to aspects of the user’s local\n        environment. Sentient Computing is a sensor-driven programming\n        paradigm which maintains an event-based, dynamic model of the\n        environment which can be used by applications in order to drive\n        changes in their behaviour, thus achieving context-awareness.\n        However, primitive events, especially those arising from\n        sensors, e.g., that a user is at position {x,y,z} are too\n        low-level to be meaningful to applications. Existing models for\n        creating higher-level, more meaningful events, from low-level\n        events, are insufficient to capture the user’s intuition about\n        abstract system state. Furthermore, there is a strong need for\n        user-centred application development, without undue programming\n        overhead. Applications need to be created dynamically and remain\n        functional independently of the distributed nature and\n        heterogeneity of sensor-driven systems, even while the user is\n        mobile. Both issues combined necessitate an alternative model\n        for developing applications in a real-time, distributed\n        sensor-driven environment such as Sentient Computing.\n        \n        This dissertation describes the design and implementation of the\n        SCAFOS framework. SCAFOS has two novel aspects. Firstly, it\n        provides powerful tools for inferring abstract knowledge from\n        low-level, concrete knowledge, verifying its correctness and\n        estimating its likelihood. Such tools include Hidden Markov\n        Models, a Bayesian Classifier, Temporal First-Order Logic, the\n        theorem prover SPASS and the production system CLIPS. Secondly,\n        SCAFOS provides support for simple application development\n        through the XML-based SCALA language. By introducing the new\n        concept of a generalised event, an abstract event, defined as a\n        notification of changes in abstract system state, expressiveness\n        compatible with human intuition is achieved when using SCALA.\n        The applications that are created through SCALA are\n        automatically integrated and operate seamlessly in the various\n        heterogeneous components of the context-aware environment even\n        while the user is mobile or when new entities or other\n        applications are added or removed in SCAFOS.","bibo:AuthorList":["Katsiri, Eleftheria"],"dc:date":"2005-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":81541,"sim:weight":0.472633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70445,"sim:weight":0.469609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.467454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.459996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43141,"sim:weight":0.446639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.444281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91434,"sim:weight":0.441386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43058,"sim:weight":0.441163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91433,"sim:weight":0.436588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.435947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.435803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51679,"sim:weight":0.422773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.419168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.413568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998811,"sim:weight":0.411347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70117,"sim:weight":0.403889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70115,"sim:weight":0.403403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999647,"sim:weight":0.40237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.399651,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70119,"sim:weight":0.398273,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72311,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Operating system support for simultaneous multithreaded\n        processors","bibo:abstract":"Simultaneous multithreaded (SMT) processors are able to execute\n        multiple application threads in parallel in order to improve the\n        utilisation of the processor’s execution resources. The improved\n        utilisation provides a higher processor-wide throughput at the\n        expense of the performance of each individual thread.\n        \n        Simultaneous multithreading has recently been incorporated into\n        the Intel Pentium 4 processor family as “Hyper-Threading”. While\n        there is already basic support for it in popular operating\n        systems, that support does not take advantage of any knowledge\n        about the characteristics of SMT, and therefore does not fully\n        exploit the processor.\n        \n        SMT presents a number of challenges to operating system\n        designers. The threads’ dynamic sharing of processor resources\n        means that there are complex performance interactions between\n        threads. These interactions are often unknown, poorly\n        understood, or hard to avoid. As a result such interactions tend\n        to be ignored leading to a lower processor throughput.\n        \n        In this dissertation I start by describing simultaneous\n        multithreading and the hardware implementations of it. I discuss\n        areas of operating system support that are either necessary or\n        desirable.\n        \n        I present a detailed study of a real SMT processor, the Intel\n        Hyper-Threaded Pentium 4, and describe the performance\n        interactions between threads. I analyse the results using\n        information from the processor’s performance monitoring\n        hardware.\n        \n        Building on the understanding of the processor’s operation\n        gained from the analysis, I present a design for an operating\n        system process scheduler that takes into account the\n        characteristics of the processor and the workloads in order to\n        improve the system-wide throughput. I evaluate designs\n        exploiting various levels of processor-specific knowledge.\n        \n        I finish by discussing alternative ways to exploit SMT\n        processors. These include the partitioning onto separate\n        simultaneous threads of applications and hardware interrupt\n        handling. I present preliminary experiments to evaluate the\n        effectiveness of this technique.","bibo:AuthorList":["Bulpin, James R."],"dc:date":"2005-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1008746,"sim:weight":0.599515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117350,"sim:weight":0.444227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.389048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88838,"sim:weight":0.36371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.361212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43152,"sim:weight":0.3604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.337154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1433748,"sim:weight":0.315445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.312752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023968,"sim:weight":0.30894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":281983,"sim:weight":0.300741,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.300162,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.299378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019057,"sim:weight":0.291777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45662,"sim:weight":0.290159,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767715,"sim:weight":0.278672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276807,"sim:weight":0.270317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017976,"sim:weight":0.268928,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998533,"sim:weight":0.262674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.261972,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72313,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Fresh Approach: functional programming with names\n        and binders","bibo:abstract":"This report concerns the development of a language called Fresh\n        Objective Caml, which is an extension of the Objective Caml\n        language providing facilities for the manipulation of data\n        structures representing syntax involving α-convertible names and\n        binding operations.\n        \n        After an introductory chapter which includes a survey of related\n        work, we describe the Fresh Objective Caml language in detail.\n        Next, we proceed to formalise a small core language which\n        captures the essence of Fresh Objective Caml; we call this\n        Mini-FreshML. We provide two varieties of operational semantics\n        for this language and prove them equivalent. Then in order to\n        prove correctness properties of representations of syntax in the\n        language we introduce a new variety of domain theory called\n        FM-domain theory, based on the permutation model of name binding\n        from Pitts and Gabbay. We show how classical domain-theoretic\n        constructions—including those for the solution of recursive\n        domain equations—fall naturally into this setting, where they\n        are augmented by new constructions to handle name-binding.\n        \n        After developing the necessary domain theory, we demonstrate how\n        it may be exploited to give a monadic denotational semantics to\n        Mini-FreshML. This semantics in itself is quite novel and\n        demonstrates how a simple monad of continuations is sufficient\n        to model dynamic allocation of names. We prove that our\n        denotational semantics is computationally adequate with respect\n        to the operational semantics—in other words, equality of\n        denotation implies observational equivalence. After this, we\n        show how the denotational semantics may be used to prove our\n        desired correctness properties.\n        \n        In the penultimate chapter, we examine the implementation of\n        Fresh Objective Caml, describing detailed issues in the compiler\n        and runtime systems. Then in the final chapter we close the\n        report with a discussion of future avenues of research and an\n        assessment of the work completed so far.","bibo:AuthorList":["Shinwell, Mark R."],"dc:date":"2005-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9658,"sim:weight":0.453095,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.432488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.42504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.423353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.422168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.412968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.394053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106540,"sim:weight":0.392508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934464,"sim:weight":0.388394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.385803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96663,"sim:weight":0.38512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933923,"sim:weight":0.378956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277123,"sim:weight":0.376279,"sim:AssociationMethod":"similarity_cosine"},{"identifier":6445,"sim:weight":0.374641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.370047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934469,"sim:weight":0.359964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934106,"sim:weight":0.359922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.359658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.359111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.35394,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72315,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Pocket Switched Networks: Real-world mobility and its\n        consequences for opportunistic forwarding","bibo:abstract":"Opportunistic networks make use of human mobility and local\n        forwarding in order to distribute data. Information can be\n        stored and passed, taking advantage of the device mobility, or\n        forwarded over a wireless link when an appropriate contact is\n        met. Such networks fall into the fields of mobile ad-hoc\n        networking and delay-tolerant networking. In order to evaluate\n        forwarding algorithms for these networks, accurate data is\n        needed on the intermittency of connections.\n        \n        In this paper, the inter-contact time between two transmission\n        opportunities is observed empirically using four distinct sets\n        of data, two having been specifically collected for this work,\n        and two provided by other research groups.\n        \n        We discover that the distribution of inter-contact time follows\n        an approximate power law over a large time range in all data\n        sets. This observation is at odds with the exponential decay\n        expected by many currently used mobility models. We demonstrate\n        that opportunistic transmission schemes designed around these\n        current models have poor performance under approximate power-law\n        conditions, but could be significantly improved by using limited\n        redundant transmissions.","bibo:AuthorList":["Chaintreau, Augustin","Hui, Pan","Crowcroft, Jon","Diot, Christophe","Gass, Richard","Scott, James"],"dc:date":"2005-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.355718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757447,"sim:weight":0.309927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70167,"sim:weight":0.303242,"sim:AssociationMethod":"similarity_cosine"},{"identifier":923311,"sim:weight":0.257319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44051,"sim:weight":0.250729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187769,"sim:weight":0.250248,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821026,"sim:weight":0.250109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.246653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821006,"sim:weight":0.241435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756779,"sim:weight":0.236078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.234937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512554,"sim:weight":0.227297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749092,"sim:weight":0.221574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4182207,"sim:weight":0.220551,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.212896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931241,"sim:weight":0.211967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2150032,"sim:weight":0.211831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549567,"sim:weight":0.210045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.206974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.202385,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72317,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Dictionary characteristics in cross-language information\n        retrieval","bibo:abstract":"In the absence of resources such a as suitable MT system,\n        translation in Cross-Language Information Retrieval (CLIR)\n        consists primarily of mapping query terms to a semantically\n        equivalent representation in the target language. This can be\n        accomplished by looking up each term in a simple bilingual\n        dictionary. The main problem here is deciding which of the\n        translations provided by the dictionary for each query term\n        should be included in the query translation. We tackled this\n        problem by examining different characteristics of the system\n        dictionary. We found that dictionary properties such as scale\n        (the average number of translations per term), translation\n        repetition (providing the same translation for a term more than\n        once in a dictionary entry, for example, for different senses of\n        a term), and dictionary coverage rate (the percentage of query\n        terms for which the dictionary provides a translation) can have\n        a profound effect on retrieval performance. Dictionary\n        properties were explored in a series of carefully controlled\n        tests, designed to evaluate specific hypotheses. These\n        experiments showed that (a) contrary to expectation, smaller\n        scale dictionaries resulted in better performance than\n        large-scale ones, and (b) when appropriately managed e.g.\n        through strategies to ensure adequate translational coverage,\n        dictionary-based CLIR could perform as well as other CLIR\n        methods discussed in the literature. Our experiments showed that\n        it is possible to implement an effective CLIR system with no\n        resources other than the system dictionary itself, provided this\n        dictionary is chosen with careful examination of its\n        characteristics, removing any dependency on outside resources.","bibo:AuthorList":["Nic Gearailt, Donnla"],"dc:date":"2005-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":86209,"sim:weight":0.586764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51149,"sim:weight":0.532362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86340,"sim:weight":0.508245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43054,"sim:weight":0.500705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51142,"sim:weight":0.49862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":13152,"sim:weight":0.484667,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973023,"sim:weight":0.462973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998616,"sim:weight":0.439046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51236,"sim:weight":0.436989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51070,"sim:weight":0.434279,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108708,"sim:weight":0.428831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51428,"sim:weight":0.410448,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100575,"sim:weight":0.392444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282146,"sim:weight":0.390957,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51144,"sim:weight":0.386764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51209,"sim:weight":0.380744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91440,"sim:weight":0.373132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282098,"sim:weight":0.366675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394183,"sim:weight":0.359697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51185,"sim:weight":0.359424,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72319,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Global public computing","bibo:abstract":"High-bandwidth networking and cheap computing hardware are\n        leading to a world in which the resources of one machine are\n        available to groups of users beyond their immediate owner. This\n        trend is visible in many different settings. Distributed\n        computing, where applications are divided into parts that run on\n        different machines for load distribution, geographical\n        dispersion, or robustness, has recently found new fertile\n        ground. Grid computing promises to provide a common framework\n        for scheduling scientific computation and managing the\n        associated large data sets. Proposals for utility computing\n        envision a world in which businesses rent computing bandwidth in\n        server farms on-demand instead of purchasing and maintaining\n        servers themselves.\n        \n        All such architectures target particular user and application\n        groups or deployment scenarios, where simplifying assumptions\n        can be made. They expect centralised ownership of resources,\n        cooperative users, and applications that are well-behaved and\n        compliant to a specific API or middleware. Members of the public\n        who are not involved in Grid communities or wish to deploy\n        out-of-the-box distributed services, such as game servers, have\n        no means to acquire resources on large numbers of machines\n        around the world to launch their tasks.\n        \n        This dissertation proposes a new distributed computing paradigm,\n        termed global public computing, which allows any user to run any\n        code anywhere. Such platforms price computing resources, and\n        ultimately charge users for resources consumed. This\n        dissertation presents the design and implementation of the\n        XenoServer Open Platform, putting this vision into practice. The\n        efficiency and scalability of the developed mechanisms are\n        demonstrated by experimental evaluation; the prototype platform\n        allows the global-scale deployment of complex services in less\n        than 45 seconds, and could scale to millions of concurrent\n        sessions without presenting performance bottlenecks.\n        \n        To facilitate global public computing, this work addresses\n        several research challenges. It introduces reusable mechanisms\n        for representing, advertising, and supporting the discovery of\n        resources. To allow flexible and federated control of resource\n        allocation by all stakeholders involved, it proposes a novel\n        role-based resource management framework for expressing and\n        combining distributed management policies. Furthermore, it\n        implements effective service deployment models for launching\n        distributed services on large numbers of machines around the\n        world easily, quickly, and efficiently. To keep track of\n        resource consumption and pass charges on to consumers, it\n        devises an accounting and charging infrastructure.","bibo:AuthorList":["Kotsovinos, Evangelos"],"dc:date":"2005-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1023877,"sim:weight":0.565344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43088,"sim:weight":0.558825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999220,"sim:weight":0.538395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933672,"sim:weight":0.515701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100270,"sim:weight":0.515526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43081,"sim:weight":0.509743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931552,"sim:weight":0.509613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145901,"sim:weight":0.505634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43066,"sim:weight":0.497635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931598,"sim:weight":0.496298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997492,"sim:weight":0.495596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.494183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51538,"sim:weight":0.493761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826955,"sim:weight":0.485929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.480276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.480138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69261,"sim:weight":0.479537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69318,"sim:weight":0.47947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69285,"sim:weight":0.47348,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43091,"sim:weight":0.47321,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72321,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Pure bigraphs","bibo:abstract":"Bigraphs are graphs whose nodes may be nested, representing\n        locality, independently of the edges connecting them. They may\n        be equipped with reaction rules, forming a bigraphical reactive\n        system (Brs) in which bigraphs can reconfigure themselves. Brss\n        aim to unify process calculi, and to model applications —such as\n        pervasive computing— where locality and mobility are prominent.\n        The paper is devoted to the theory of pure bigraphs, which\n        underlie various more refined forms. It begins by developing a\n        more abstract structure, a wide reactive system Wrs, of which a\n        Brs is an instance; in this context, labelled transitions are\n        defined in such a way that the induced bisimilarity is a\n        congruence.\n        \n        This work is then specialised to Brss, whose graphical structure\n        allows many refinements of the dynamic theory. Elsewhere it is\n        shown that behavioural analysis for Petri nets, π-calculus and\n        mobile ambients can all be recovered in the uniform framework of\n        bigraphs. The latter part of the paper emphasizes the parts of\n        bigraphical theory that are common to these applications,\n        especially the treatment of dynamics via labelled transitions.\n        As a running example, the theory is applied to finite pure CCS,\n        whose resulting transition system and bisimilarity are analysed\n        in detail.\n        \n        The paper also discusses briefly the use of bigraphs to model\n        both pervasive computing and biological systems.","bibo:AuthorList":["Milner, Robin"],"dc:date":"2005-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934106,"sim:weight":0.597019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932198,"sim:weight":0.58164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934255,"sim:weight":0.509157,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934455,"sim:weight":0.507115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934469,"sim:weight":0.49742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.463378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934282,"sim:weight":0.444736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934428,"sim:weight":0.437036,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.416038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.415344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934476,"sim:weight":0.408632,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.396451,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934300,"sim:weight":0.390645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.390611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.390444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934272,"sim:weight":0.379914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934343,"sim:weight":0.37019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934421,"sim:weight":0.362458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.361205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19254,"sim:weight":0.351272,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72323,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Abstracting application-level security policy for\n        ubiquitous computing","bibo:abstract":"In the future world of Ubiquitous Computing, tiny embedded\n        networked computers will be found in everything from mobile\n        phones to microwave ovens. Thanks to improvements in technology\n        and software engineering, these computers will be capable of\n        running sophisticated new applications constructed from mobile\n        agents. Inevitably, many of these systems will contain\n        application-level vulnerabilities; errors caused by either\n        unanticipated mobility or interface behaviour. Unfortunately\n        existing methods for applying security policy – network\n        firewalls – are inadequate to control and protect the hordes of\n        vulnerable mobile devices. As more and more critical functions\n        are handled by these systems, the potential for disaster is\n        increasing rapidly.\n        \n        To counter these new threats, this report champions the approach\n        of using new application-level security policy languages in\n        combination to protect vulnerable applications. Policies are\n        abstracted from main application code, facilitating both\n        analysis and future maintenance. As well as protecting existing\n        applications, such policy systems can help as part of a\n        security-aware design process when building new applications\n        from scratch.\n        \n        Three new application-level policy languages are contributed\n        each addressing a different kind of vulnerability. Firstly, the\n        policy language MRPL allows the creation of Mobility Restriction\n        Policies, based on a unified spatial model which represents both\n        physical location of objects as well as virtual location of\n        mobile code. Secondly, the policy language SPDL-2 protects\n        applications against a large number of common errors by allowing\n        the specification of per-request/response validation and\n        transformation rules. Thirdly, the policy language SWIL allows\n        interfaces to be described as automata which may be analysed\n        statically by a model-checker before being checked dynamically\n        in an application-level firewall. When combined together, these\n        three languages provide an effective means for preventing\n        otherwise critical application-level vulnerabilities.\n        \n        Systems implementing these policy languages have been built; an\n        implementation framework is described and encouraging\n        performance results and analysis are presented.","bibo:AuthorList":["Scott, David J."],"dc:date":"2005-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":41028,"sim:weight":0.543907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930653,"sim:weight":0.535038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.525578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934804,"sim:weight":0.504014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69285,"sim:weight":0.503338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.499727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932277,"sim:weight":0.499055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":621800,"sim:weight":0.497297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.495415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932060,"sim:weight":0.489091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.488813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225513,"sim:weight":0.488577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.487396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998131,"sim:weight":0.487247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.48696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.486512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934237,"sim:weight":0.485173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69318,"sim:weight":0.484783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70446,"sim:weight":0.484284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.484224,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72325,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Location privacy in ubiquitous computing","bibo:abstract":"The field of ubiquitous computing envisages an era when the\n        average consumer owns hundreds or thousands of mobile and\n        embedded computing devices. These devices will perform actions\n        based on the context of their users, and therefore ubiquitous\n        systems will gather, collate and distribute much more personal\n        information about individuals than computers do today. Much of\n        this personal information will be considered private, and\n        therefore mechanisms which allow users to control the\n        dissemination of these data are vital. Location information is a\n        particularly useful form of context in ubiquitous computing, yet\n        its unconditional distribution can be very invasive.\n        \n        This dissertation develops novel methods for providing location\n        privacy in ubiquitous computing. Much of the previous work in\n        this area uses access control to enable location privacy. This\n        dissertation takes a different approach and argues that many\n        location-aware applications can function with anonymised\n        location data and that, where this is possible, its use is\n        preferable to that of access control.\n        \n        Suitable anonymisation of location data is not a trivial task:\n        under a realistic threat model simply removing explicit\n        identifiers does not anonymise location information. This\n        dissertation describes why this is the case and develops two\n        quantitative security models for anonymising location data: the\n        mix zone model and the variable quality model.\n        \n        A trusted third-party can use one, or both, models to ensure\n        that all location events given to untrusted applications are\n        suitably anonymised. The mix zone model supports untrusted\n        applications which require accurate location information about\n        users in a set of disjoint physical locations. In contrast, the\n        variable quality model reduces the temporal or spatial accuracy\n        of location information to maintain user anonymity at every\n        location.\n        \n        Both models provide a quantitative measure of the level of\n        anonymity achieved; therefore any given situation can be\n        analysed to determine the amount of information an attacker can\n        gain through analysis of the anonymised data. The suitability of\n        both these models is demonstrated and the level of location\n        privacy available to users of real location-aware applications\n        is measured.","bibo:AuthorList":["Beresford, Alastair R."],"dc:date":"2005-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":91447,"sim:weight":0.704238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70410,"sim:weight":0.591538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9620049,"sim:weight":0.559709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70109,"sim:weight":0.547111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973030,"sim:weight":0.505956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41268,"sim:weight":0.4829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70108,"sim:weight":0.463517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68143,"sim:weight":0.463063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999668,"sim:weight":0.436453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70155,"sim:weight":0.432271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69744,"sim:weight":0.430095,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70110,"sim:weight":0.423611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999647,"sim:weight":0.42232,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276461,"sim:weight":0.421317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3785,"sim:weight":0.421295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70111,"sim:weight":0.417423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.417042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999650,"sim:weight":0.413208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017254,"sim:weight":0.412067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918052,"sim:weight":0.407379,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72327,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An heuristic analysis of the classification of bivariate\n        subdivision schemes","bibo:abstract":"Alexa [*] and Ivrissimtzis et al. [+] have proposed a\n        classification mechanism for bivariate subdivision schemes.\n        Alexa considers triangular primal schemes, Ivrissimtzis et al.\n        generalise this both to quadrilateral and hexagonal meshes and\n        to dual and mixed schemes. I summarise this classification and\n        then proceed to analyse it in order to determine which classes\n        of subdivision scheme are likely to contain useful members. My\n        aim is to ascertain whether there are any potentially useful\n        classes which have not yet been investigated or whether we can\n        say, with reasonable confidence, that all of the useful classes\n        have already been considered. I apply heuristics related to the\n        mappings of element types (vertices, face centres, and\n        mid-edges) to one another, to the preservation of symmetries, to\n        the alignment of meshes at different subdivision levels, and to\n        the size of the overall subdivision mask. My conclusion is that\n        there are only a small number of useful classes and that most of\n        these have already been investigated in terms of linear,\n        stationary subdivision schemes. There is some space for further\n        work, particularly in the investigation of whether there are\n        useful ternary linear, stationary subdivision schemes, but it\n        appears that future advances are more likely to lie elsewhere.\n        \n        [*] M. Alexa. Refinement operators for triangle meshes. Computer\n        Aided Geometric Design, 19(3):169-172, 2002.\n        \n        [+] I. P. Ivrissimtzis, N. A. Dodgson, and M. A. Sabin. A\n        generative classification of mesh refinement rules with lattice\n        transformations. Computer Aided Geometric Design, 22(1):99-109,\n        2004.","bibo:AuthorList":["Dodgson, Neil A."],"dc:date":"2004-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":540691,"sim:weight":0.386898,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.249736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334869,"sim:weight":0.228845,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55875,"sim:weight":0.221676,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55880,"sim:weight":0.220651,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.207182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.192782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334941,"sim:weight":0.189462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44411,"sim:weight":0.182925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.168203,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43087,"sim:weight":0.165687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":337836,"sim:weight":0.162419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43138,"sim:weight":0.160215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10716,"sim:weight":0.159479,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101364,"sim:weight":0.145716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.144494,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101278,"sim:weight":0.143917,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98526,"sim:weight":0.142815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.141202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48414,"sim:weight":0.140443,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72329,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Influence of syntax on prosodic boundary\n        prediction","bibo:abstract":"In this thesis we compare the effectiveness of different\n        syntactic features and syntactic representations for prosodic\n        boundary prediction, setting out to clarify which\n        representations are most suitable for this task. The results of\n        a series of experiments show that it is not possible to conclude\n        that a single representation is superior to all others. Three\n        representations give rise to similar experimental results. One\n        of these representations is composed only of shallow features,\n        which were originally thought to have less predictive power than\n        deep features. Conversely, one of the deep representations that\n        seemed to be best suited for our purposes (syntactic chunks)\n        turns out not to be among the three best.","bibo:AuthorList":["Ingulfsen, Tommy"],"dc:date":"2004-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":19896,"sim:weight":0.380231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22524,"sim:weight":0.375653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16070,"sim:weight":0.32485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16072,"sim:weight":0.301241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146039,"sim:weight":0.30047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56161,"sim:weight":0.292226,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277785,"sim:weight":0.287275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277087,"sim:weight":0.282643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.279561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276386,"sim:weight":0.277923,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826765,"sim:weight":0.271533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277031,"sim:weight":0.271413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276981,"sim:weight":0.270136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1141191,"sim:weight":0.259186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74038,"sim:weight":0.255886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277136,"sim:weight":0.245293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41796,"sim:weight":0.244302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277736,"sim:weight":0.238964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":78034,"sim:weight":0.236719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108071,"sim:weight":0.229088,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72331,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Using camera-phones to interact with context-aware\n        mobile services","bibo:abstract":"We describe an interaction technique for controlling\n        site-specific mobile services using commercially available\n        camera-phones, public information displays and visual tags. We\n        report results from an experimental study validating this\n        technique in terms of pointing speed and accuracy. Our results\n        show that even novices can use camera-phones to\n        “point-and-click” on visual tags quickly and accurately. We have\n        built a publicly available client/server software framework for\n        rapid development of applications that exploit our interaction\n        technique. We describe two prototype applications that were\n        implemented using this framework and present findings from\n        user-experience studies based on these applications.","bibo:AuthorList":["Toye, Eleanor","Madhavapeddy, Anil","Sharp, Richard","Scott, David","Blackwell, Alan","Upton, Eben"],"dc:date":"2004-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1549727,"sim:weight":0.368393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549798,"sim:weight":0.341336,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269956,"sim:weight":0.34107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512108,"sim:weight":0.34107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549886,"sim:weight":0.336538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.329414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.315391,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70174,"sim:weight":0.307811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.27912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390266,"sim:weight":0.268703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707924,"sim:weight":0.26134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707667,"sim:weight":0.258513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1645863,"sim:weight":0.252754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70095,"sim:weight":0.241846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69749,"sim:weight":0.24007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389983,"sim:weight":0.239335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186234,"sim:weight":0.223905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390268,"sim:weight":0.223643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99176,"sim:weight":0.214918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109740,"sim:weight":0.207439,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72333,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Trust management for widely distributed\n        systems","bibo:abstract":"In recent years, we have witnessed the evolutionary development\n        of a new breed of distributed systems. Systems of this type\n        share a number of characteristics – highly decentralized, of\n        Internet-grade scalability, and autonomous within their\n        administrative domains. Most importantly, they are expected to\n        operate collaboratively across both known and unknown domains.\n        Prime examples include peer-to-peer applications and open web\n        services. Typically, authorization in distributed systems is\n        identity-based, e.g. access control lists. However, approaches\n        based on predefined identities are unsuitable for the new breed\n        of distributed systems because of the need to deal with unknown\n        users, i.e. strangers, and the need to manage a potentially\n        large number of users and/or resources. Furthermore, effective\n        administration and management of authorization in such systems\n        requires: (1) natural mapping of organizational policies into\n        security policies; (2) managing collaboration of independently\n        administered domains/organizations; (3) decentralization of\n        security policies and policy enforcement.\n        \n        This thesis describes Fidelis, a trust management framework\n        designed to address the authorization needs for the\n        next-generation distributed systems. A trust management system\n        is a term coined to refer to a unified framework for the\n        specification of security policies, the representation of\n        credentials, and the evaluation and enforcement of policy\n        compliances. Based on the concept of trust conveyance and a\n        generic abstraction for trusted information as trust statements,\n        Fidelis provides a generic platform for building secure,\n        trust-aware distributed applications. At the heart of the\n        Fidelis framework is a language for the specification of\n        security policies, the Fidelis Policy Language (FPL), and the\n        inference model for evaluating policies expressed in FPL. With\n        the policy language and its inference model, Fidelis is able to\n        model recommendation-style policies and policies with\n        arbitrarily complex chains of trust propagation.\n        \n        Web services have rapidly been gaining significance both in\n        industry and research as a ubiquitous, next-generation\n        middleware platform. The second half of the thesis describes the\n        design and implementation of the Fidelis framework for the\n        standard web service platform. The goal of this work is twofold:\n        first, to demonstrate the practical feasibility of Fidelis, and\n        second, to investigate the use of a policy-driven trust\n        management framework for Internet-scale open systems. An\n        important requirement in such systems is trust negotiation that\n        allows unfamiliar principals to establish mutual trust and\n        interact with confidence. Addressing this requirement, a trust\n        negotiation framework built on top of Fidelis is developed.\n        \n        This thesis examines the application of Fidelis in three\n        distinctive domains: implementing generic role-based access\n        control, trust management in the World Wide Web, and an\n        electronic marketplace comprising unfamiliar and untrusted but\n        collaborative organizations.","bibo:AuthorList":["Yao, Walt"],"dc:date":"2004-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8930422,"sim:weight":0.666376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934483,"sim:weight":0.662816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932642,"sim:weight":0.599846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931424,"sim:weight":0.597608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827201,"sim:weight":0.583077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932224,"sim:weight":0.574328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932256,"sim:weight":0.553718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104940,"sim:weight":0.541795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997792,"sim:weight":0.534369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5097,"sim:weight":0.527881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934288,"sim:weight":0.525786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2297,"sim:weight":0.524637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38006,"sim:weight":0.521311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104826,"sim:weight":0.48821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100491,"sim:weight":0.486727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":259090,"sim:weight":0.475048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997450,"sim:weight":0.472416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934484,"sim:weight":0.471685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934107,"sim:weight":0.469879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972963,"sim:weight":0.469198,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72335,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Code size optimization for embedded\n        processors","bibo:abstract":"This thesis studies the problem of reducing code size produced\n        by an optimizing compiler. We develop the Value State Dependence\n        Graph (VSDG) as a powerful intermediate form. Nodes represent\n        computation, and edges represent value (data) and state\n        (control) dependencies between nodes. The edges specify a\n        partial ordering of the nodes—sufficient ordering to maintain\n        the I/O semantics of the source program, while allowing\n        optimizers greater freedom to move nodes within the program to\n        achieve better (smaller) code. Optimizations, both classical and\n        new, transform the graph through graph rewriting rules prior to\n        code generation. Additional (semantically inessential) state\n        edges are added to transform the VSDG into a Control Flow Graph,\n        from which target code is generated.\n        \n        We show how procedural abstraction can be advantageously applied\n        to the VSDG. Graph patterns are extracted from a program’s VSDG.\n        We then select repeated patterns giving the greatest size\n        reduction, generate new functions from these patterns, and\n        replace all occurrences of the patterns in the original VSDG\n        with calls to these abstracted functions. Several embedded\n        processors have load- and store-multiple instructions,\n        representing several loads (or stores) as one instruction. We\n        present a method, benefiting from the VSDG form, for using these\n        instructions to reduce code size by provisionally combining\n        loads and stores before code generation. The final contribution\n        of this thesis is a combined register allocation and code motion\n        (RACM) algorithm. We show that our RACM algorithm formulates\n        these two previously antagonistic phases as one combined pass\n        over the VSDG, transforming the graph (moving or cloning nodes,\n        or spilling edges) to fit within the physical resources of the\n        target processor.\n        \n        We have implemented our ideas within a prototype C compiler and\n        suite of VSDG optimizers, generating code for the Thumb 32-bit\n        processor. Our results show improvements for each optimization\n        and that we can achieve code sizes comparable to, and in some\n        cases better than, that produced by commercial compilers with\n        significant investments in optimization technology.","bibo:AuthorList":["Johnson, Neil E."],"dc:date":"2004-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":12215,"sim:weight":0.593125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.514205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998542,"sim:weight":0.479581,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69742,"sim:weight":0.439085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933898,"sim:weight":0.432042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932022,"sim:weight":0.422872,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767115,"sim:weight":0.421847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.410061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9015106,"sim:weight":0.399613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710661,"sim:weight":0.399088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43140,"sim:weight":0.387361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934773,"sim:weight":0.384918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.372728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19522,"sim:weight":0.370174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81541,"sim:weight":0.366942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.357754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88003,"sim:weight":0.356631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.354428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43152,"sim:weight":0.352791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.352142,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72337,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Dynamic binary analysis and instrumentation","bibo:abstract":"Dynamic binary analysis (DBA) tools such as profilers and\n        checkers help programmers create better software. Dynamic binary\n        instrumentation (DBI) frameworks make it easy to build new DBA\n        tools. This dissertation advances the theory and practice of\n        dynamic binary analysis and instrumentation, with an emphasis on\n        the importance of the use and support of metadata.\n        \n        The dissertation has three main parts.\n        \n        The first part describes a DBI framework called Valgrind which\n        provides novel features to support heavyweight DBA tools that\n        maintain rich metadata, especially location metadata—the\n        shadowing of every register and memory location with a\n        metavalue. Location metadata is used in shadow computation, a\n        kind of DBA where every normal operation is shadowed by an\n        abstract operation.\n        \n        The second part describes three powerful DBA tools. The first\n        tool performs detailed cache profiling. The second tool does an\n        old kind of dynamic analysis—bounds-checking—in a new way. The\n        third tool produces dynamic data flow graphs, a novel\n        visualisation that cuts to the essence of a program’s execution.\n        All three tools were built with Valgrind, and rely on Valgrind’s\n        support for heavyweight DBA and rich metadata, and the latter\n        two perform shadow computation.\n        \n        The third part describes a novel system of semi-formal\n        descriptions of DBA tools. It gives many example descriptions,\n        and also considers in detail exactly what dynamic analysis is.\n        \n        The dissertation makes six main contributions.\n        \n        First, the descriptions show that metadata is the key component\n        of dynamic analysis; in particular, whereas static analysis\n        predicts approximations of a program’s future, dynamic analysis\n        remembers approximations of a program’s past, and these\n        approximations are exactly what metadata is.\n        \n        Second, the example tools show that rich metadata and shadow\n        computation make for powerful and novel DBA tools that do more\n        than the traditional tracing and profiling.\n        \n        Third, Valgrind and the example tools show that a DBI framework\n        can make it easy to build heavyweight DBA tools, by providing\n        good support for rich metadata and shadow computation.\n        \n        Fourth, the descriptions are a precise and concise way of\n        characterising tools, provide a directed way of thinking about\n        tools that can lead to better implementations, and indicate the\n        theoretical upper limit of the power of DBA tools in general.\n        \n        Fifth, the three example tools are interesting in their own\n        right, and the latter two are novel.\n        \n        Finally, the entire dissertation provides many details, and\n        represents a great deal of condensed experience, about\n        implementing DBI frameworks and DBA tools.","bibo:AuthorList":["Nethercote, Nicholas"],"dc:date":"2004-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43480,"sim:weight":0.477931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.442804,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.4351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.43419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.429263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.426466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69742,"sim:weight":0.423979,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.413824,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.410206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2152218,"sim:weight":0.394895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381374,"sim:weight":0.39456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70207,"sim:weight":0.387831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.386883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.386538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931950,"sim:weight":0.385407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12219,"sim:weight":0.38502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.384051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108795,"sim:weight":0.376849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933898,"sim:weight":0.376502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.375685,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72339,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Acute: High-level programming language design for\n        distributed computation : Design rationale and language\n        definition","bibo:abstract":"This paper studies key issues for distributed programming in\n        high-level languages. We discuss the design space and describe\n        an experimental language, Acute, which we have defined and\n        implemented.\n        \n        Acute extends an OCaml core to support distributed development,\n        deployment, and execution, allowing type-safe interaction\n        between separately-built programs. It is expressive enough to\n        enable a wide variety of distributed infrastructure layers to be\n        written as simple library code above the byte-string network and\n        persistent store APIs, disentangling the language runtime from\n        communication.\n        \n        This requires a synthesis of novel and existing features:\n        \n        (1) type-safe marshalling of values between programs;\n        \n        (2) dynamic loading and controlled rebinding to local resources;\n        \n        (3) modules and abstract types with abstraction boundaries that\n        are respected by interaction;\n        \n        (4) global names, generated either freshly or based on module\n        hashes: at the type level, as runtime names for abstract types;\n        and at the term level, as channel names and other interaction\n        handles;\n        \n        (5) versions and version constraints, integrated with type\n        identity;\n        \n        (6) local concurrency and thread thunkification; and\n        \n        (7) second-order polymorphism with a namecase construct.\n        \n        We deal with the interplay among these features and the core,\n        and develop a semantic definition that tracks abstraction\n        boundaries, global names, and hashes throughout compilation and\n        execution, but which still admits an efficient implementation\n        strategy.","bibo:AuthorList":["Sewell, Peter","Leifer, James J.","Wansbrough, Keith","Allen-Williams, Mair","Nardelli, Francesco Zappa","Habouzit, Pierre","Vafeiadis, Viktor"],"dc:date":"2004-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934501,"sim:weight":0.505442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.331247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.299763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.298538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.283081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.262364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.251206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.249121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.248696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98092,"sim:weight":0.243695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934237,"sim:weight":0.227673,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.225117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.223124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.219142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.218961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.214343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38466,"sim:weight":0.211821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934390,"sim:weight":0.209557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934106,"sim:weight":0.205437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.20451,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72341,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On the anonymity of anonymity systems","bibo:abstract":"Anonymity on the Internet is a property commonly identified with\n        privacy of electronic communications. A number of different\n        systems exist which claim to provide anonymous email and web\n        browsing, but their effectiveness has hardly been evaluated in\n        practice. In this thesis we focus on the anonymity properties of\n        such systems. First, we show how the anonymity of anonymity\n        systems can be quantified, pointing out flaws with existing\n        metrics and proposing our own. In the process we distinguish the\n        anonymity of a message and that of an anonymity system.\n        \n        Secondly, we focus on the properties of building blocks of\n        mix-based (email) anonymity systems, evaluating their resistance\n        to powerful blending attacks, their delay, their anonymity under\n        normal conditions and other properties. This leads us to methods\n        of computing anonymity for a particular class of mixes – timed\n        mixes – and a new binomial mix.\n        \n        Next, we look at the anonymity of a message going through an\n        entire anonymity system based on a mix network architecture. We\n        construct a semantics of a network with threshold mixes, define\n        the information observable by an attacker, and give a principled\n        definition of the anonymity of a message going through such a\n        network.\n        \n        We then consider low latency connection-based anonymity systems,\n        giving concrete attacks and describing methods of protection\n        against them. In particular, we show that Peer-to-Peer anonymity\n        systems provide less anonymity against the global passive\n        adversary than ones based on a “classic” architecture.\n        \n        Finally, we give an account of how anonymity can be used in\n        censorship resistant systems. These are designed to provide\n        availability of documents, while facing threats from a powerful\n        adversary. We show how anonymity can be used to hide the\n        identity of the servers where each of the documents are stored,\n        thus making them harder to remove from the system.","bibo:AuthorList":["Serjantov, Andrei"],"dc:date":"2004-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":397439,"sim:weight":0.482839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820009,"sim:weight":0.32993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931408,"sim:weight":0.320314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.318243,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930532,"sim:weight":0.317309,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.300774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.295621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103099,"sim:weight":0.284785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023853,"sim:weight":0.27602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397390,"sim:weight":0.26908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103095,"sim:weight":0.258722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397450,"sim:weight":0.253849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1001521,"sim:weight":0.245878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397454,"sim:weight":0.244485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397474,"sim:weight":0.24443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102852,"sim:weight":0.240433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932229,"sim:weight":0.228465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756279,"sim:weight":0.225004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397401,"sim:weight":0.204022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21861,"sim:weight":0.200194,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72343,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bigraphs whose names have multiple locality","bibo:abstract":"The previous definition of binding bigraphs is generalised so\n        that local names may be located in more than one region,\n        allowing more succinct and flexible presentation of bigraphical\n        reactive systems. This report defines the generalisation,\n        verifies that it retains relative pushouts, and introduces a new\n        notion of bigraph extension; this admits a wider class of\n        parametric reaction rules. Extension is shown to be well-behaved\n        algebraically; one consequence is that, as in the original\n        definition of bigraphs, discrete parameters are sufficient to\n        generate all reactions.","bibo:AuthorList":["Milner, Robin"],"dc:date":"2004-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932198,"sim:weight":0.552958,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934106,"sim:weight":0.550205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151689,"sim:weight":0.459059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934300,"sim:weight":0.369879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.366327,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934272,"sim:weight":0.354544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.331473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98983,"sim:weight":0.329237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933380,"sim:weight":0.327526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.305252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934239,"sim:weight":0.24895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.227913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934302,"sim:weight":0.172755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934420,"sim:weight":0.16614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934255,"sim:weight":0.154631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934455,"sim:weight":0.148919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934469,"sim:weight":0.147989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934214,"sim:weight":0.124492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934282,"sim:weight":0.123062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":861783,"sim:weight":0.121937,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72345,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Model checking the AMBA protocol in HOL","bibo:abstract":"The Advanced Microcontroller Bus Architecture (AMBA) is an open\n        System-on-Chip bus protocol for high-performance buses on\n        low-power devices. In this report we implement a simple model of\n        AMBA and use model checking and theorem proving to verify\n        latency, arbitration, coherence and deadlock freedom properties\n        of the implementation.","bibo:AuthorList":["Amjad, Hasan"],"dc:date":"2004-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1116371,"sim:weight":0.740175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929706,"sim:weight":0.436813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000243,"sim:weight":0.392241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931462,"sim:weight":0.350139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932163,"sim:weight":0.33472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":909833,"sim:weight":0.313093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083566,"sim:weight":0.297351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269972,"sim:weight":0.264565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.251518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1108008,"sim:weight":0.250191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.236735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.229392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1080587,"sim:weight":0.228422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.226817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826881,"sim:weight":0.220505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.21041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008810,"sim:weight":0.203552,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793158,"sim:weight":0.162119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821411,"sim:weight":0.158563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917485,"sim:weight":0.157315,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72347,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Combining model checking and theorem proving","bibo:abstract":"We implement a model checker for the modal mu-calculus as a\n        derived rule in a fully expansive mechanical theorem prover,\n        without causing an unacceptable performance penalty.\n        \n        We use a restricted form of a higher order logic representation\n        calculus for binary decision diagrams (BDDs) to interface the\n        model checker to a high-performance BDD engine. This is used\n        with a formalised theory of the modal mu-calculus (which we also\n        develop) for model checking in which all steps of the algorithm\n        are justified by fully expansive proof. This provides a\n        fine-grained integration of model checking and theorem proving\n        using a mathematically rigourous interface. The generality of\n        our theories allows us to perform much of the proof offline, in\n        contrast with earlier work. This substantially reduces the\n        inevitable performance penalty of doing model checking by proof.\n        \n        To demonstrate the feasibility of our approach, optimisations to\n        the model checking algorithm are added. We add naive caching and\n        also perform advanced caching for nested non-alternating\n        fixed-point computations.\n        \n        Finally, the usefulness of the work is demonstrated. We leverage\n        our theory by proving translations to simpler logics that are in\n        more widespread use. We then implement an executable theory for\n        counterexample-guided abstraction refinement that also uses a\n        SAT solver. We verify properties of a bus architecture in use in\n        industry as well as a pedagogical arithmetic and logic unit. The\n        benchmarks show an acceptable performance penalty, and the\n        results are correct by construction.","bibo:AuthorList":["Amjad, Hasan"],"dc:date":"2004-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98090,"sim:weight":0.486514,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.486316,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997967,"sim:weight":0.460497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997800,"sim:weight":0.444817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932083,"sim:weight":0.440224,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931555,"sim:weight":0.429332,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931644,"sim:weight":0.421486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.417097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826714,"sim:weight":0.416291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934464,"sim:weight":0.414208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.408555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933269,"sim:weight":0.408049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47235,"sim:weight":0.40671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98176,"sim:weight":0.406416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999175,"sim:weight":0.406072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.405066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826972,"sim:weight":0.397905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997961,"sim:weight":0.396273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931558,"sim:weight":0.393705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393490,"sim:weight":0.392995,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72349,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Trust for resource control: Self-enforcing automatic\n        rational contracts between computers","bibo:abstract":"Computer systems need to control access to their resources, in\n        order to give precedence to urgent or important tasks. This is\n        increasingly important in networked applications, which need to\n        interact with other machines but may be subject to abuse unless\n        protected from attack. To do this effectively, they need an\n        explicit resource model, and a way to assess others’ actions in\n        terms of it. This dissertation shows how the actions can be\n        represented using resource-based computational contracts,\n        together with a rich trust model which monitors and enforces\n        contract compliance.\n        \n        Related research in the area has focused on individual aspects\n        of this problem, such as resource pricing and auctions, trust\n        modelling and reputation systems, or resource-constrained\n        computing and resource-aware middleware. These need to be\n        integrated into a single model, in order to provide a general\n        framework for computing by contract.\n        \n        This work explores automatic computerized contracts for\n        negotiating and controlling resource usage in a distributed\n        system. Contracts express the terms under which client and\n        server promise to exchange resources, such as processor time in\n        exchange for money, using a constrained language which can be\n        automatically interpreted. A novel, distributed trust model is\n        used to enforce these promises, and this also supports trust\n        delegation through cryptographic certificates. The model is\n        formally proved to have appropriate properties of safety and\n        liveness, which ensure that cheats cannot systematically gain\n        resources by deceit, and that mutually profitable contracts\n        continue to be supported.\n        \n        The contract framework has many applications, in automating\n        distributed services and in limiting the disruptiveness of\n        users’ programs. Applications such as resource-constrained\n        sandboxes, operating system multimedia support and automatic\n        distribution of personal address book entries can all treat the\n        user’s time as a scarce resource, to trade off computational\n        costs against user distraction. Similarly, commercial Grid\n        services can prioritise computations with contracts, while a\n        cooperative service such as distributed composite event\n        detection can use contracts for detector placement and load\n        balancing. Thus the contract framework provides a general\n        purpose tool for managing distributed computation, allowing\n        participants to take calculated risks and rationally choose\n        which contracts to perform.","bibo:AuthorList":["Shand, Brian Ninham"],"dc:date":"2004-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9592,"sim:weight":0.659572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930422,"sim:weight":0.540287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934483,"sim:weight":0.529064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932224,"sim:weight":0.498731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38006,"sim:weight":0.481649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100491,"sim:weight":0.467151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934856,"sim:weight":0.438644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934484,"sim:weight":0.42671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934288,"sim:weight":0.413501,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184877,"sim:weight":0.412973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933831,"sim:weight":0.411707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933882,"sim:weight":0.382455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76157,"sim:weight":0.380173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930937,"sim:weight":0.379495,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934200,"sim:weight":0.366225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930871,"sim:weight":0.365396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104938,"sim:weight":0.362044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934368,"sim:weight":0.347314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.323362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43088,"sim:weight":0.31858,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72351,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Further analysis of ternary and 3-point univariate\n        subdivision schemes","bibo:abstract":"The precision set, approximation order and Hölder exponent are\n        derived for each of the univariate subdivision schemes described\n        in Technical Report UCAM-CL-TR-520.","bibo:AuthorList":["Hassan, Mohamed F."],"dc:date":"2004-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":540691,"sim:weight":0.375462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12410,"sim:weight":0.230698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382498,"sim:weight":0.2163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932249,"sim:weight":0.201001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382890,"sim:weight":0.1962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44128,"sim:weight":0.190592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.185727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382821,"sim:weight":0.183974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998930,"sim:weight":0.177164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":337836,"sim:weight":0.16664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.143555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98638,"sim:weight":0.142606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43084,"sim:weight":0.133528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729140,"sim:weight":0.127423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.10127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041770,"sim:weight":0.0927504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382090,"sim:weight":0.0880577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108442,"sim:weight":0.0836333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48465,"sim:weight":0.0827566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":93008,"sim:weight":0.0809813,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72353,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Transition systems, link graphs and Petri\n        nets","bibo:abstract":"A framework is defined within which reactive systems can be\n        studied formally. The framework is based upon s-categories, a\n        new variety of categories, within which reactive systems can be\n        set up in such a way that labelled transition systems can be\n        uniformly extracted. These lead in turn to behavioural preorders\n        and equivalences, such as the failures preorder (treated\n        elsewhere) and bisimilarity, which are guaranteed to be\n        congruential. The theory rests upon the notion of relative\n        pushout previously introduced by the authors. The framework is\n        applied to a particular graphical model known as link graphs,\n        which encompasses a variety of calculi for mobile distributed\n        processes. The specific theory of link graphs is developed. It\n        is then applied to an established calculus, namely\n        condition-event Petri nets. In particular, a labelled transition\n        system is derived for condition-event nets, corresponding to a\n        natural notion of observable actions in Petri net theory. The\n        transition system yields a congruential bisimilarity coinciding\n        with one derived directly from the observable actions. This\n        yields a calibration of the general theory of reactive systems\n        and link graphs against known specific theories.","bibo:AuthorList":["Leifer, James J.","Milner, Robin"],"dc:date":"2004-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934255,"sim:weight":0.534033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.454684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934272,"sim:weight":0.454084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.44932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.44932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933380,"sim:weight":0.422272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.412078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934302,"sim:weight":0.401264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934382,"sim:weight":0.391573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.38573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.384419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933923,"sim:weight":0.366249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934396,"sim:weight":0.348642,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.347306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934284,"sim:weight":0.321349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.319271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934212,"sim:weight":0.312785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934239,"sim:weight":0.301706,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16260,"sim:weight":0.301474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.285276,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72355,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Syntactic simplification and text cohesion","bibo:abstract":"Syntactic simplification is the process of reducing the\n        grammatical complexity of a text, while retaining its\n        information content and meaning. The aim of syntactic\n        simplification is to make text easier to comprehend for human\n        readers, or process by programs. In this thesis, I describe how\n        syntactic simplification can be achieved using shallow robust\n        analysis, a small set of hand-crafted simplification rules and a\n        detailed analysis of the discourse-level aspects of\n        syntactically rewriting text. I offer a treatment of relative\n        clauses, apposition, coordination and subordination.\n        \n        I present novel techniques for relative clause and appositive\n        attachment. I argue that these attachment decisions are not\n        purely syntactic. My approaches rely on a shallow discourse\n        model and on animacy information obtained from a lexical\n        knowledge base. I also show how clause and appositive boundaries\n        can be determined reliably using a decision procedure based on\n        local context, represented by part-of-speech tags and noun\n        chunks.\n        \n        I then formalise the interactions that take place between syntax\n        and discourse during the simplification process. This is\n        important because the usefulness of syntactic simplification in\n        making a text accessible to a wider audience can be undermined\n        if the rewritten text lacks cohesion. I describe how various\n        generation issues like sentence ordering, cue-word selection,\n        referring-expression generation, determiner choice and\n        pronominal use can be resolved so as to preserve conjunctive and\n        anaphoric cohesive-relations during syntactic simplification.\n        \n        In order to perform syntactic simplification, I have had to\n        address various natural language processing problems, including\n        clause and appositive identification and attachment, pronoun\n        resolution and referring-expression generation. I evaluate my\n        approaches to solving each problem individually, and also\n        present a holistic evaluation of my syntactic simplification\n        system.","bibo:AuthorList":["Siddharthan, Advaith"],"dc:date":"2004-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9949,"sim:weight":0.553221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991454,"sim:weight":0.520313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43881,"sim:weight":0.513619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.502576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997738,"sim:weight":0.497816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71391,"sim:weight":0.487194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81603,"sim:weight":0.486751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18877,"sim:weight":0.480321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1888,"sim:weight":0.478871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85760,"sim:weight":0.46607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104720,"sim:weight":0.45764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.45398,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81605,"sim:weight":0.448913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999609,"sim:weight":0.446892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1656370,"sim:weight":0.426926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19933,"sim:weight":0.425248,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933728,"sim:weight":0.424714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51018,"sim:weight":0.422531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85014,"sim:weight":0.422452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.422095,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72357,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Reconstructing I/O","bibo:abstract":"We present a next-generation architecture that addresses\n        problems of dependability, maintainability, and manageability of\n        I/O devices and their software drivers on the PC platform. Our\n        architecture resolves both hardware and software issues,\n        exploiting emerging hardware features to improve device safety.\n        Our high-performance implementation, based on the Xen virtual\n        machine monitor, provides an immediate transition opportunity\n        for today’s systems.","bibo:AuthorList":["Fraser, Keir","Hand, Steven","Neugebauer, Rolf","Pratt, Ian","Warfield, Andrew","Williamson, Mark"],"dc:date":"2004-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.32241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.284406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.28365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707696,"sim:weight":0.270514,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123701,"sim:weight":0.259554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1024024,"sim:weight":0.252236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003888,"sim:weight":0.215015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48355,"sim:weight":0.211769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":888213,"sim:weight":0.200103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931277,"sim:weight":0.196541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70328,"sim:weight":0.192823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707868,"sim:weight":0.190084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1925219,"sim:weight":0.184947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.180233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931901,"sim:weight":0.169642,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.168772,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383602,"sim:weight":0.166214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":649865,"sim:weight":0.163064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69877,"sim:weight":0.161779,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.159601,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72359,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Representations of quantum operations, with applications\n        to quantum cryptography","bibo:abstract":"Representations of quantum operations – We start by introducing\n        a geometrical representation (real vector space) of quantum\n        states and quantum operations. To do so we exploit an\n        isomorphism from positive matrices to a subcone of the Minkowski\n        future light-cone. Pure states map onto certain light-like\n        vectors, whilst the axis of revolution encodes the overall\n        probability of occurrence for the state. This extension of the\n        Generalized Bloch Sphere enables us to cater for\n        non-trace-preserving quantum operations, and in particular to\n        view the per-outcome effects of generalized measurements. We\n        show that these consist of the product of an orthogonal\n        transform about the axis of the cone of revolution and a\n        positive real symmetric linear transform. In the case of a qubit\n        the representation becomes all the more interesting since it\n        elegantly associates, to each measurement element of a\n        generalized measurement, a Lorentz transformation in Minkowski\n        space. We formalize explicitly this correspondence between\n        ‘observation of a quantum system’ and ‘special relativistic\n        change of inertial frame’. To end this part we review the\n        state-operator correspondence, which was successfully exploited\n        by Choi to derive the operator-sum representation of quantum\n        operations. We go further and show that all of the important\n        theorems concerning quantum operations can in fact be derived as\n        simple corollaries of those concerning quantum states. Using\n        this methodology we derive novel composition laws upon quantum\n        states and quantum operations, Schmidt-type decompositions for\n        bipartite pure states and some powerful formulae relating to the\n        correspondence.\n        \n        Quantum cryptography – The key principle of quantum cryptography\n        could be summarized as follows. Honest parties communicate using\n        quantum states. To the eavesdropper these states are random and\n        non-orthogonal. In order to gather information she must measure\n        them, but this may cause irreversible damage. Honest parties\n        seek to detect her mischief by checking whether certain quantum\n        states are left intact. Thus tradeoff between the eavesdropper’s\n        information gain, and the disturbance she necessarily induces,\n        can be viewed as the power engine behind quantum cryptographic\n        protocols. We begin by quantifying this tradeoff in the case of\n        a measure distinguishing two non-orthogonal equiprobable pure\n        states. A formula for this tradeoff was first obtained by Fuchs\n        and Peres, but we provide a shorter, geometrical derivation\n        (within the framework of the above mentioned conal\n        representation). Next we proceed to analyze the Information gain\n        versus disturbance tradeoff in a scenario where Alice and Bob\n        interleave, at random, pairwise superpositions of two message\n        words within their otherwise classical communications. This work\n        constitutes one of the few results currently available regarding\n        d-level systems quantum cryptography, and seems to provide a\n        good general primitive for building such protocols. The proof\n        crucially relies on the state-operator correspondence formulae\n        derived in the first part, together with some methods by\n        Banaszek. Finally we make use of this analysis to prove the\n        security of a ‘blind quantum computation’ protocol, whereby\n        Alice gets Bob to perform some quantum algorithm for her, but\n        prevents him from learning her input to this quantum algorithm.","bibo:AuthorList":["Arrighi, Pablo J."],"dc:date":"2004-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98704,"sim:weight":0.559773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47360,"sim:weight":0.544521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4879295,"sim:weight":0.528161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2702554,"sim:weight":0.512969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":385260,"sim:weight":0.492712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20726,"sim:weight":0.454415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":758187,"sim:weight":0.453811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4885009,"sim:weight":0.451148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239234,"sim:weight":0.447505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":42675,"sim:weight":0.43968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43163,"sim:weight":0.435584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":747079,"sim:weight":0.433364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21289,"sim:weight":0.426233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707969,"sim:weight":0.420721,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1559219,"sim:weight":0.420105,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382498,"sim:weight":0.404942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":599980,"sim:weight":0.395005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4889744,"sim:weight":0.389411,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4884622,"sim:weight":0.385546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109372,"sim:weight":0.379954,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72361,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Designing and attacking anonymous communication\n        systems","bibo:abstract":"This report contributes to the field of anonymous communications\n        over widely deployed communication networks. It describes novel\n        schemes to protect anonymity; it also presents powerful new\n        attacks and new ways of analysing and understanding anonymity\n        properties.\n        \n        We present Mixminion, a new generation anonymous remailer, and\n        examine its security against all known passive and active\n        cryptographic attacks. We use the secure anonymous replies it\n        provides, to describe a pseudonym server, as an example of the\n        anonymous protocols that mixminion can support. The security of\n        mix systems is then assessed against a compulsion threat model,\n        in which an adversary can request the decryption of material\n        from honest nodes. A new construction, the fs-mix, is presented\n        that makes tracing messages by such an adversary extremely\n        expensive.\n        \n        Moving beyond the static security of anonymous communication\n        protocols, we define a metric based on information theory that\n        can be used to measure anonymity. The analysis of the pool mix\n        serves as an example of its use. We then create a framework\n        within which we compare the traffic analysis resistance provided\n        by different mix network topologies. A new topology, based on\n        expander graphs, proves to be efficient and secure. The rgb-mix\n        is also presented; this implements a strategy to detect flooding\n        attacks against honest mix nodes and neutralise them by the use\n        of cover traffic.\n        \n        Finally a set of generic attacks are studied. Statistical\n        disclosure attacks model the whole anonymous system as a black\n        box, and are able to uncover the relationships between long-term\n        correspondents. Stream attacks trace streams of data travelling\n        through anonymizing networks, and uncover the communicating\n        parties very quickly. They both use statistical methods to\n        drastically reduce the anonymity of users. Other minor attacks\n        are described against peer discovery and route reconstruction in\n        anonymous networks, as well as the naïve use of anonymous\n        replies.","bibo:AuthorList":["Danezis, George"],"dc:date":"2004-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102482,"sim:weight":0.562776,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865398,"sim:weight":0.485276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.481456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980772,"sim:weight":0.47708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865388,"sim:weight":0.470997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930532,"sim:weight":0.464044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932626,"sim:weight":0.451654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973022,"sim:weight":0.443152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.434761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397439,"sim:weight":0.430627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.426523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.426309,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960711,"sim:weight":0.4243,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239234,"sim:weight":0.421207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2047708,"sim:weight":0.421146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80681,"sim:weight":0.42056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70145,"sim:weight":0.416296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820009,"sim:weight":0.412964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023853,"sim:weight":0.412606,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72363,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Paxos at war","bibo:abstract":"The optimistic latency of Byzantine Paxos can be reduced from\n        three communication steps to two, without using public-key\n        cryptography. This is done by making a decision when more than\n        (n+3f)/2 acceptors report to have received the same proposal\n        from the leader, with n being the total number of acceptors and\n        f the number of the faulty ones. No further improvement in\n        latency is possible, because every Consensus algorithm must take\n        at least two steps even in benign settings. Moreover, if the\n        leader is correct, our protocol achieves the latency of at most\n        three steps, even if some other processes fail. These two\n        properties make this the fastest Byzantine agreement protocol\n        proposed so far.\n        \n        By running many instances of this algorithm in parallel, we can\n        implement Vector Consensus and Byzantine Atomic Broadcast in two\n        and three steps, respectively, which is two steps faster than\n        any other known algorithm.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2004-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":889153,"sim:weight":0.268294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.241108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.220298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26045,"sim:weight":0.210881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.208097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982198,"sim:weight":0.198289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.191469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757727,"sim:weight":0.181584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.176314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21022,"sim:weight":0.170485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.166016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.162416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187705,"sim:weight":0.161115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26006,"sim:weight":0.158094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.156894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.155541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.152533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145717,"sim:weight":0.149408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.147056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.147051,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72365,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Unwrapping the Chrysalis","bibo:abstract":"We describe our experiences reverse engineering the\n        Chrysalis-ITS Luna CA³ – a PKCS#11 compliant cryptographic\n        token. Emissions analysis and security API attacks are viewed by\n        many to be simpler and more efficient than a direct attack on an\n        HSM. But how difficult is it to actually “go in the front door”?\n        We describe how we unpicked the CA³ internal architecture and\n        abused its low-level API to impersonate a CA³ token in its\n        cloning protocol – and extract PKCS#11 private keys in the\n        clear. We quantify the effort involved in developing and\n        applying the skills necessary for such a reverse-engineering\n        attack. In the process, we discover that the Luna CA³ has far\n        more undocumented code and functionality than is revealed to the\n        end-user.","bibo:AuthorList":["Bond, Mike","Cvrček, Daniel","Murdoch, Steven J."],"dc:date":"2004-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":684257,"sim:weight":0.263392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.263107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.261436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.248015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.237073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.167878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1051748,"sim:weight":0.166674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960274,"sim:weight":0.165415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.149813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.146714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116448,"sim:weight":0.146367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.146164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116755,"sim:weight":0.145361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.13888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1442,"sim:weight":0.135452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":840248,"sim:weight":0.133546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187705,"sim:weight":0.128317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145717,"sim:weight":0.128044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.126734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.124747,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72367,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Conversion of notations","bibo:abstract":"Music, engineering, mathematics, and many other disciplines have\n        established notations for writing their documents. The\n        effectiveness of each of these notations can be hampered by the\n        circumstances in which it is being used, or by a user’s\n        disability or cultural background. Adjusting the notation can\n        help, but the requirements of different cases often conflict,\n        meaning that each new document will have to be transformed\n        between many versions. Tools that support the programming of\n        such transformations can also assist by allowing the creation of\n        new notations on demand, which is an under-explored option in\n        the relief of educational difficulties.\n        \n        This thesis reviews some programming tools that can be used to\n        manipulate the tree-like structure of a notation in order to\n        transform it into another. It then describes a system “4DML”\n        that allows the programmer to create a “model” of the desired\n        result, from which the transformation is derived. This is\n        achieved by representing the structure in a geometric space with\n        many dimensions, where the model acts as an alternative frame of\n        reference.\n        \n        Example applications of 4DML include the transcription of songs\n        and musical scores into various notations, the production of\n        specially-customised notations to assist a sight-impaired person\n        in learning Chinese, an unusual way of re-organising personal\n        notes, a “website scraping” system for extracting data from\n        on-line services that provide only one presentation, and an aid\n        to making mathematics and diagrams accessible to people with\n        severe print disabilities. The benefits and drawbacks of the\n        4DML approach are evaluated, and possible directions for future\n        work are explored.","bibo:AuthorList":["Brown, Silas S."],"dc:date":"2004-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.528829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5222909,"sim:weight":0.513057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.502692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.480758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.471504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387213,"sim:weight":0.471137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98117,"sim:weight":0.445098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98094,"sim:weight":0.440485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000309,"sim:weight":0.426895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98051,"sim:weight":0.417602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26742,"sim:weight":0.397116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102077,"sim:weight":0.335842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1078252,"sim:weight":0.318427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98072,"sim:weight":0.313314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99366,"sim:weight":0.30881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98056,"sim:weight":0.284505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47229,"sim:weight":0.283094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.274111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":42681,"sim:weight":0.26496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.264615,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72369,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Hermes: A scalable event-based middleware","bibo:abstract":"Large-scale distributed systems require new middleware paradigms\n        that do not suffer from the limitations of traditional\n        request/reply middleware. These limitations include tight\n        coupling between components, a lack of information filtering\n        capabilities, and support for one-to-one communication semantics\n        only. We argue that event-based middleware is a scalable and\n        powerful new type of middleware for building large-scale\n        distributed systems. However, it is important that an\n        event-based middleware platform includes all the standard\n        functionality that an application programmer expects from\n        middleware.\n        \n        In this thesis we describe the design and implementation of\n        Hermes, a distributed, event-based middleware platform. The\n        power and flexibility of Hermes is illustrated throughout for\n        two application domains: Internet-wide news distribution and a\n        sensor-rich, active building. Hermes follows a type- and\n        attribute-based publish/subscribe model that places particular\n        emphasis on programming language integration by supporting\n        type-checking of event data and event type inheritance. To\n        handle dynamic, large-scale environments, Hermes uses\n        peer-to-peer techniques for autonomic management of its overlay\n        network of event brokers and for scalable event dissemination.\n        Its routing algorithms, implemented on top of a distributed hash\n        table, use rendezvous nodes to reduce routing state in the\n        system, and include fault-tolerance features for repairing event\n        dissemination trees. All this is achieved without compromising\n        scalability and efficiency, as is shown by a simulational\n        evaluation of Hermes routing.\n        \n        The core functionality of an event-based middleware is extended\n        with three higher-level middleware services that address\n        different requirements in a distributed computing environment.\n        We introduce a novel congestion control service that avoids\n        congestion in the overlay broker network during normal operation\n        and recovery after failure, and therefore enables a\n        resource-efficient deployment of the middleware. The\n        expressiveness of subscriptions in the event-based middleware is\n        enhanced with a composite event service that performs the\n        distributed detection of complex event patterns, thus taking the\n        burden away from clients. Finally, a security service adds\n        access control to Hermes according to a secure publish/subscribe\n        model. This model supports fine-grained access control decisions\n        so that separate trust domains can share the same overlay broker\n        network.","bibo:AuthorList":["Pietzuch, Peter R."],"dc:date":"2004-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8023,"sim:weight":0.511389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91444,"sim:weight":0.461625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91437,"sim:weight":0.418669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.41508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.411037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91434,"sim:weight":0.406411,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69261,"sim:weight":0.39935,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91433,"sim:weight":0.393763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1925982,"sim:weight":0.389569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549694,"sim:weight":0.371325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":372956,"sim:weight":0.354948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91432,"sim:weight":0.349401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1558797,"sim:weight":0.347174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.332682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.331401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91424,"sim:weight":0.330241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.325668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69285,"sim:weight":0.324773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69325,"sim:weight":0.317897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69283,"sim:weight":0.305469,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72371,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"new-HOPLA — a higher-order process language with name\n        generation","bibo:abstract":"This paper introduces new-HOPLA, a concise but powerful language\n        for higher-order nondeterministic processes with name\n        generation. Its origins as a metalanguage for domain theory are\n        sketched but for the most part the paper concentrates on its\n        operational semantics. The language is typed, the type of a\n        process describing the shape of the computation paths it can\n        perform. Its transition semantics, bisimulation, congruence\n        properties and expressive power are explored. Encodings of\n        π-calculus and HOπ are presented.","bibo:AuthorList":["Winskel, Glynn","Nardelli, Francesco Zappa"],"dc:date":"2004-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934327,"sim:weight":0.346111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.319415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.315775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.278037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934243,"sim:weight":0.275083,"sim:AssociationMethod":"similarity_cosine"},{"identifier":34288,"sim:weight":0.26236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934476,"sim:weight":0.260763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.257418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":385260,"sim:weight":0.2563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513636,"sim:weight":0.25613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512635,"sim:weight":0.255662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80601,"sim:weight":0.253343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.251043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.249566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.243641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.239629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.226625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932666,"sim:weight":0.212484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1511422,"sim:weight":0.210093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513179,"sim:weight":0.19447,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72373,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"MulTEP: A MultiThreaded Embedded Processor","bibo:abstract":"Conventional embedded microprocessors have traditionally\n        followed the footsteps of high-end processor design to achieve\n        high performance. Their underlying architectures prioritise\n        tasks by time-critical interrupts and rely on software to\n        perform scheduling tasks. Single threaded execution relies on\n        instruction-based probabilistic techniques, such as speculative\n        execution and branch prediction, which are unsuitable for\n        embedded systems when real-time performance guarantees need to\n        be met. Multithreading appears to be a feasible solution for\n        embedded processors. Thread-level parallelism has a potential to\n        overcome the limitations of insufficient instruction-level\n        parallelism to hide the increasing memory latencies. MulTEP is\n        designed to provide high performance thread-level parallelism,\n        real-time characteristics, a flexible number of threads and low\n        incremental cost per thread for the embedded system. In its\n        architecture, a matching-store synchronisation mechanism allows\n        a thread to wait for multiple data items. A tagged up/down\n        dynamic-priority hardware scheduler is provided for real-time\n        scheduling. Pre-loading, pre-fetching and colour-tagging\n        techniques are implemented to allow context switches without any\n        overhead. The architecture provides four additional\n        multithreading instructions for programmers and advance\n        compilers to create programs with low-overhead multithreaded\n        operations. Experimental results demonstrate that multithreading\n        can be effectively used to improve performance and system\n        utilisation. Latency operations that would otherwise stall the\n        pipeline are hidden by the execution of the other threads. The\n        hardware scheduler provides priority scheduling, which is\n        suitable for real-time embedded applications.","bibo:AuthorList":["Watcharawitch, Panit"],"dc:date":"2004-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1117350,"sim:weight":0.465582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008746,"sim:weight":0.412497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019074,"sim:weight":0.395866,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793220,"sim:weight":0.386294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98222,"sim:weight":0.382205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":999799,"sim:weight":0.380789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.365927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80584,"sim:weight":0.359906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.335016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.332305,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.324055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.318694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083118,"sim:weight":0.317139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757275,"sim:weight":0.314814,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041558,"sim:weight":0.310115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.306114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80580,"sim:weight":0.30333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98066,"sim:weight":0.301062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.295134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88838,"sim:weight":0.294544,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72375,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Verification of asynchronous circuits","bibo:abstract":"The purpose of this thesis is to introduce proposition-oriented\n        behaviours and apply them to the verification of asynchronous\n        circuits. The major contribution of proposition-oriented\n        behaviours is their ability to extend existing formal notations\n        to permit the explicit use of both signal levels and\n        transitions.\n        \n        This thesis begins with the formalisation of\n        proposition-oriented behaviours in the context of gate networks,\n        and with the set-theoretic extension of both regular-expressions\n        and trace-expressions to reason over proposition-oriented\n        behaviours. A new trace-expression construct, referred to as\n        biased composition, is also introduced. Algorithmic realisation\n        of these set-theoretic extensions is documented using a special\n        form of finite automata called proposition automata. A\n        verification procedure for conformance of gate networks to a set\n        of proposition automata is described in which each proposition\n        automaton may be viewed either as a constraint or a\n        specification. The implementation of this procedure as an\n        automated verification program called Veraci is summarised, and\n        a number of example Veraci programs are used to demonstrate\n        contributions of proposition-oriented behaviour to asynchronous\n        circuit design. These contributions include level-event\n        unification, event abstraction, and relative timing assumptions\n        using biased composition. The performance of Veraci is also\n        compared to an existing event-oriented verification program\n        called Versify, the result of this comparison being a consistent\n        performance gain using Veraci over Versify.\n        \n        This thesis concludes with the design and implementation of a\n        2048 bit dual-rail asynchronous Montgomery exponentiator,\n        MOD_EXP, in a 0.18µm standard-cell process. The application of\n        Veraci to the design of MOD_EXP is summarised, and the practical\n        benefits of proposition-oriented verification are discussed.","bibo:AuthorList":["Cunningham, Paul Alexander"],"dc:date":"2004-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931555,"sim:weight":0.399127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386661,"sim:weight":0.35815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.35574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932562,"sim:weight":0.322377,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393490,"sim:weight":0.318103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80132,"sim:weight":0.314941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":926063,"sim:weight":0.295811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932330,"sim:weight":0.290174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80601,"sim:weight":0.280686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.230845,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102525,"sim:weight":0.229865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.223116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.214665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.197593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.192543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65302,"sim:weight":0.190204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.182131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.180123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1632341,"sim:weight":0.178656,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932494,"sim:weight":0.17792,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72377,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Role-based access control policy\n        administration","bibo:abstract":"The wide proliferation of the Internet has set new requirements\n        for access control policy specification. Due to the demand for\n        ad-hoc cooperation between organisations, applications are no\n        longer isolated from each other; consequently, access control\n        policies face a large, heterogeneous, and dynamic environment.\n        Policies, while maintaining their main functionality, go through\n        many minor adaptations, evolving as the environment changes.\n        \n        In this thesis we investigate the long-term administration of\n        role-based access control (RBAC) – in particular OASIS RBAC –\n        policies.\n        \n        With the aim of encapsulating persistent goals of policies we\n        introduce extensions in the form of meta-policies. These\n        meta-policies, whose expected lifetime is longer than the\n        lifetime of individual policies, contain extra information and\n        restrictions about policies. It is expected that successive\n        policy versions are checked at policy specification time to\n        ensure that they comply with the requirements and guidelines set\n        by meta-policies.\n        \n        In the first of the three classes of meta-policies we group\n        together policy components by annotating them with context\n        labels. Based on this grouping and an information flow relation\n        on context labels, we limit the way in which policy components\n        may be connected to other component groups. We use this to\n        partition conceptually disparate portions of policies, and\n        reference these coherent portions to specify policy restrictions\n        and policy enforcement behaviour.\n        \n        In our second class of meta-policies – compliance policies – we\n        specify requirements on an abstract policy model. We then use\n        this for static policy checking. As compliance tests are\n        performed at policy specification time, compliance policies may\n        include restrictions that either cannot be included in policies,\n        or whose inclusion would result in degraded policy enforcement\n        performance. We also indicate how to use compliance policies to\n        provide information about organisational policies without\n        disclosing sensitive information.\n        \n        The final class of our meta-policies, called interface policies,\n        is used to help set up and maintain cooperation among\n        organisations by enabling them to use components from each\n        other’s policies. Being based on compliance policies, they use\n        an abstract policy component model, and can also specify\n        requirements for both component exporters and importers. Using\n        such interface policies we can reconcile compatibility issues\n        between cooperating parties automatically.\n        \n        Finally, building on our meta-policies, we consider policy\n        evolution and self-administration, according to which we treat\n        RBAC policies as distributed resources to which access is\n        specified with the help of RBAC itself. This enables\n        environments where policies are maintained by many\n        administrators who have varying levels of competence, trust, and\n        jurisdiction.\n        \n        We have tested all of these concepts in Desert, our proof of\n        concept implementation.","bibo:AuthorList":["Belokosztolszki, András"],"dc:date":"2004-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":810,"sim:weight":0.51043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933187,"sim:weight":0.420224,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106421,"sim:weight":0.407782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930883,"sim:weight":0.398192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104940,"sim:weight":0.397403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145717,"sim:weight":0.392851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106411,"sim:weight":0.390685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997499,"sim:weight":0.358982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336184,"sim:weight":0.345953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000296,"sim:weight":0.337983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934098,"sim:weight":0.332149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38466,"sim:weight":0.332045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000282,"sim:weight":0.330985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933201,"sim:weight":0.326129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933204,"sim:weight":0.325516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70200,"sim:weight":0.31992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.312826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1107476,"sim:weight":0.309349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279395,"sim:weight":0.302197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":808,"sim:weight":0.300043,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72379,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Personal projected displays","bibo:abstract":"Since the inception of the personal computer, the interface\n        presented to users has been defined by the monitor screen,\n        keyboard, and mouse, and by the framework of the desktop\n        metaphor. It is very different from a physical desktop which has\n        a large horizontal surface, allows paper documents to be\n        arranged, browsed, and annotated, and is controlled via\n        continuous movements with both hands. The desktop metaphor will\n        not scale to such a large display; the continuing profusion of\n        paper, which is used as much as ever, attests to its unsurpassed\n        affordances as a medium for manipulating documents; and despite\n        its proven manual and cognitive benefits, two-handed input is\n        still not used in computer interfaces.\n        \n        I present a system called the Escritoire that uses a novel\n        configuration of overlapping projectors to create a large desk\n        display that fills the area of a conventional desk and also has\n        a high resolution region in front of the user for precise work.\n        The projectors need not be positioned exactly—the projected\n        imagery is warped using standard 3D video hardware to compensate\n        for rough projector positioning and oblique projection.\n        Calibration involves computing planar homographies between the\n        2D co-ordinate spaces of the warped textures, projector\n        framebuffers, desk, and input devices.\n        \n        The video hardware can easily perform the necessary warping and\n        achieves 30 frames per second for the dual-projector display.\n        Oblique projection has proved to be a solution to the problem of\n        occlusion common to front-projection systems. The combination of\n        an electromagnetic digitizer and an ultrasonic pen allows\n        simultaneous input with two hands. The pen for the non-dominant\n        hand is simpler and coarser than that for the dominant hand,\n        reflecting the differing roles of the hands in bimanual\n        manipulation. I give a new algorithm for calibrating a pen, that\n        uses piecewise linear interpolation between control points. I\n        also give an algorithm to calibrate a wall display at distance\n        using a device whose position and orientation are tracked in\n        three dimensions.\n        \n        The Escritoire software is divided into a client that exploits\n        the video hardware and handles the input devices, and a server\n        that processes events and stores all of the system state.\n        Multiple clients can connect to a single server to support\n        collaboration. Sheets of virtual paper on the Escritoire can be\n        put in piles which can be browsed and reordered. As with\n        physical paper this allows items to be arranged quickly and\n        informally, avoiding the premature work required to add an item\n        to a hierarchical file system. Another interface feature is pen\n        traces, which allow remote users to gesture to each other. I\n        report the results of tests with individuals and with pairs\n        collaborating remotely. Collaborating participants found an\n        audio channel and the shared desk surface much more useful than\n        a video channel showing their faces.\n        \n        The Escritoire is constructed from commodity components, and\n        unlike multi-projector display walls its cost is feasible for an\n        individual user and it fits into a normal office setting. It\n        demonstrates a hardware configuration, calibration algorithm,\n        graphics warping process, set of interface features, and\n        distributed architecture that can make personal projected\n        displays a reality.","bibo:AuthorList":["Ashdown, Mark S. D."],"dc:date":"2004-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70123,"sim:weight":0.563675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50644,"sim:weight":0.528805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43093,"sim:weight":0.505941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14328,"sim:weight":0.493515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.491234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43103,"sim:weight":0.486953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.484691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631613,"sim:weight":0.482598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147453,"sim:weight":0.477518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932102,"sim:weight":0.47268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929808,"sim:weight":0.471046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.470051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19915,"sim:weight":0.465789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43113,"sim:weight":0.464672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.454165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241212,"sim:weight":0.453515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176864,"sim:weight":0.450778,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86026,"sim:weight":0.44395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51051,"sim:weight":0.4414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108795,"sim:weight":0.435762,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72381,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Concise texture editing","bibo:abstract":"Many computer graphics applications remain in the domain of the\n        specialist. They are typically characterized by complex\n        user-directed tasks, often requiring proficiency in design,\n        colour spaces, computer interaction and file management.\n        Furthermore, the demands of this skill set are often exacerbated\n        by an equally complex collection of image or object manipulation\n        commands embedded in a variety of interface components. The\n        complexity of these graphic editing tools often requires that\n        the user possess a correspondingly high level of expertise.\n        \n        Concise Texture Editing is aimed at addressing the\n        over-complexity of modern graphics tools and is based on the\n        intuitive notion that the human user is skilled at high level\n        decision making while the computer is proficient at rapid\n        computation. This thesis has focused on the development of\n        interactive editing tools for 2D texture images and has led to\n        the development of a novel texture manipulation system that\n        allows:\n        \n        – the concise painting of a texture;\n        \n        – the concise cloning of textures;\n        \n        – the concise alteration of texture element size.\n        \n        The system allows complex operations to be performed on images\n        with minimal user interaction. When applied to the domain of\n        image editing, this implies that the user can instruct the\n        system to perform complex changes to digital images without\n        having to specify copious amounts of detail. In order to reduce\n        the user’s workload, the inherent self-similarity of textures is\n        exploited to interactively replicate editing operations globally\n        over an image. This unique image system thereby reduces the\n        user’s workload through semi-automation, resulting in an acutely\n        concise user interface.","bibo:AuthorList":["Brooks, Stephen"],"dc:date":"2004-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1126755,"sim:weight":0.663754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43093,"sim:weight":0.510389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241211,"sim:weight":0.356312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241208,"sim:weight":0.345684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.301787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.293641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77388,"sim:weight":0.28214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241196,"sim:weight":0.277292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.268182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397664,"sim:weight":0.266265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.254079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.236049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105064,"sim:weight":0.224679,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18107,"sim:weight":0.218781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.214463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99250,"sim:weight":0.203125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.201755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.197122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.195042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.19419,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72384,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Subdivision as a sequence of sampled Cp surfaces and\n        conditions for tuning schemes","bibo:abstract":"We deal with practical conditions for tuning a subdivision\n        scheme in order to control its artifacts in the vicinity of a\n        mark point. To do so, we look for good behaviour of the limit\n        vertices rather than good mathematical properties of the limit\n        surface. The good behaviour of the limit vertices is\n        characterised with the definition of C2-convergence of a scheme.\n        We propose necessary explicit conditions for C2-convergence of a\n        scheme in the vicinity of any mark point being a vertex of\n        valency n or the centre of an n-sided face with n greater or\n        equal to three. These necessary conditions concern the\n        eigenvalues and eigenvectors of subdivision matrices in the\n        frequency domain. The components of these matrices may be\n        complex. If we could guarantee that they were real, this would\n        simplify numerical analysis of the eigenstructure of the\n        matrices, especially in the context of scheme tuning where we\n        manipulate symbolic terms. In this paper we show that an\n        appropriate choice of the parameter space combined with a\n        substitution of vertices lets us transform these matrices into\n        pure real ones. The substitution consists in replacing some\n        vertices by linear combinations of themselves. Finally, we\n        explain how to derive conditions on the eigenelements of the\n        real matrices which are necessary for the C2-convergence of the\n        scheme.","bibo:AuthorList":["Gérot, Cédric","Barthe, Loïc","Dodgson, Neil A.","Sabin, Malcolm A."],"dc:date":"2004-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":269538,"sim:weight":0.281885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187570,"sim:weight":0.272481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12410,"sim:weight":0.25111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98983,"sim:weight":0.22302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1633954,"sim:weight":0.211242,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568638,"sim:weight":0.210606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1665559,"sim:weight":0.187847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382821,"sim:weight":0.184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47029,"sim:weight":0.183974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1039891,"sim:weight":0.183529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.182938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381904,"sim:weight":0.182334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44865,"sim:weight":0.18165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72959,"sim:weight":0.180139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2183574,"sim:weight":0.178697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23669,"sim:weight":0.177334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43144,"sim:weight":0.17187,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271192,"sim:weight":0.169039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568327,"sim:weight":0.164186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998004,"sim:weight":0.163932,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72386,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Latency-optimal Uniform Atomic Broadcast\n        algorithm","bibo:abstract":"We present a new asynchronous Uniform Atomic Broadcast algorithm\n        with a delivery latency of two communication steps in optimistic\n        settings, which is faster than any other known algorithm and has\n        been shown to be the lower bound. It also has the weakest\n        possible liveness requirements (the Ω failure detector and a\n        majority of correct processes) and achieves three new lower\n        bounds presented in this paper. Finally, we introduce a new\n        notation and several new abstractions, which are used to\n        construct and present the algorithm in a clear and modular way.","bibo:AuthorList":["Zieliński, Piotr"],"dc:date":"2004-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1394170,"sim:weight":0.283914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26045,"sim:weight":0.261797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.260723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147324,"sim:weight":0.234073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":888140,"sim:weight":0.227454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.21076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19764,"sim:weight":0.199693,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931813,"sim:weight":0.188864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.180221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573378,"sim:weight":0.176732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21553,"sim:weight":0.175722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897432,"sim:weight":0.171883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20037,"sim:weight":0.171683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43163,"sim:weight":0.170324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75365,"sim:weight":0.166824,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931374,"sim:weight":0.162621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26006,"sim:weight":0.151315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.151199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.14466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930875,"sim:weight":0.144646,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72388,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Axioms for bigraphical structure","bibo:abstract":"This paper axiomatises the structure of bigraphs, and proves\n        that the resulting theory is complete. Bigraphs are graphs with\n        double structure, representing locality and connectivity. They\n        have been shown to represent dynamic theories for the\n        π-calculus, mobile ambients and Petri nets, in a way that is\n        faithful to each of those models of discrete behaviour. While\n        the main purpose of bigraphs is to understand mobile systems, a\n        prerequisite for this understanding is a well-behaved theory of\n        the structure of states in such systems. The algebra of bigraph\n        structure is surprisingly simple, as the paper demonstrates;\n        this is because bigraphs treat locality and connectivity\n        orthogonally.","bibo:AuthorList":["Milner, Robin"],"dc:date":"2004-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932198,"sim:weight":0.572943,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934106,"sim:weight":0.526298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151689,"sim:weight":0.483494,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934300,"sim:weight":0.376637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.374046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934272,"sim:weight":0.372753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933380,"sim:weight":0.338402,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.334962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.280627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934302,"sim:weight":0.255273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934239,"sim:weight":0.227735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23991,"sim:weight":0.199332,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934382,"sim:weight":0.185776,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082283,"sim:weight":0.182933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.182781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934214,"sim:weight":0.178959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":861783,"sim:weight":0.175724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934284,"sim:weight":0.17338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.17043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.165959,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72390,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bigraphs and mobile processes (revised)","bibo:abstract":"A bigraphical reactive system (BRS) involves bigraphs, in which\n        the nesting of nodes represents locality, independently of the\n        edges connecting them; it also allows bigraphs to reconfigure\n        themselves. BRSs aim to provide a uniform way to model spatially\n        distributed systems that both compute and communicate. In this\n        memorandum we develop their static and dynamic theory.\n        \n        In Part I we illustrate bigraphs in action, and show how they\n        correspond to to process calculi. We then develop the abstract\n        (non-graphical) notion of wide reactive system (WRS), of which\n        BRSs are an instance. Starting from reaction rules —often called\n        rewriting rules— we use the RPO theory of Leifer and Milner to\n        derive (labelled) transition systems for WRSs, in a way that\n        leads automatically to behavioural congruences.\n        \n        In Part II we develop bigraphs and BRSs formally. The theory is\n        based directly on graphs, not on syntax. Key results in the\n        static theory are that sufficient RPOs exist (enabling the\n        results of Part I to be applied), that parallel combinators\n        familiar from process calculi may be defined, and that a\n        complete algebraic theory exists at least for pure bigraphs\n        (those without binding). Key aspects in the dynamic theory —the\n        BRSs— are the definition of parametric reaction rules that may\n        replicate or discard parameters, and the full application of the\n        behavioural theory of Part I.\n        \n        In Part III we introduce a special class: the simple BRSs. These\n        admit encodings of many process calculi, including the\n        π-calculus and the ambient calculus. A still narrower class, the\n        basic BRSs, admits an easy characterisation of our derived\n        transition systems. We exploit this in a case study for an\n        asynchronous π-calculus. We show that structural congruence of\n        process terms corresponds to equality of the representing\n        bigraphs, and that classical strong bisimilarity corresponds to\n        bisimilarity of bigraphs. At the end, we explore several\n        directions for further work.","bibo:AuthorList":["Jensen, Ole Høgh","Milner, Robin"],"dc:date":"2004-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934106,"sim:weight":0.617886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932198,"sim:weight":0.598866,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.446499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.395343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934300,"sim:weight":0.390251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.390129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.387772,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934272,"sim:weight":0.374485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934473,"sim:weight":0.367385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.366011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.354364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19321,"sim:weight":0.34973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.347697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933380,"sim:weight":0.345168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19254,"sim:weight":0.344261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19323,"sim:weight":0.341242,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934343,"sim:weight":0.339231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21169,"sim:weight":0.338382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.338079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19256,"sim:weight":0.334385,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72392,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Practical lock-freedom","bibo:abstract":"Mutual-exclusion locks are currently the most popular mechanism\n        for interprocess synchronisation, largely due to their apparent\n        simplicity and ease of implementation. In the parallel-computing\n        environments that are increasingly commonplace in\n        high-performance applications, this simplicity is deceptive:\n        mutual exclusion does not scale well with large numbers of locks\n        and many concurrent threads of execution. Highly-concurrent\n        access to shared data demands a sophisticated ‘fine-grained’\n        locking strategy to avoid serialising non-conflicting\n        operations. Such strategies are hard to design correctly and\n        with good performance because they can harbour problems such as\n        deadlock, priority inversion and convoying. Lock manipulations\n        may also degrade the performance of cache-coherent\n        multiprocessor systems by causing coherency conflicts and\n        increased interconnect traffic, even when the lock protects\n        read-only data.\n        \n        In looking for solutions to these problems, interest has\n        developed in lock-free data structures. By eschewing mutual\n        exclusion it is hoped that more efficient and robust systems can\n        be built. Unfortunately the current reality is that most\n        lock-free algorithms are complex, slow and impractical. In this\n        dissertation I address these concerns by introducing and\n        evaluating practical abstractions and data structures that\n        facilitate the development of large-scale lock-free systems.\n        \n        Firstly, I present an implementation of two useful abstractions\n        that make it easier to develop arbitrary lock-free data\n        structures. Although these abstractions have been described in\n        previous work, my designs are the first that can be practically\n        implemented on current multiprocessor systems.\n        \n        Secondly, I present a suite of novel lock-free search\n        structures. This is interesting not only because of the\n        fundamental importance of searching in computer science and its\n        wide use in real systems, but also because it demonstrates the\n        implementation issues that arise when using the practical\n        abstractions I have developed.\n        \n        Finally, I evaluate each of my designs and compare them with\n        existing lock-based and lock-free alternatives. To ensure the\n        strongest possible competition, several of the lock-based\n        alternatives are significant improvements on the best-known\n        solutions in the literature. These results demonstrate that it\n        is possible to build useful data structures with all the\n        perceived benefits of lock-freedom and with performance better\n        than sophisticated lock-based designs. Furthermore, and contrary\n        to popular belief, this work shows that existing hardware\n        primitives are sufficient to build practical lock-free\n        implementations of complex data structures.","bibo:AuthorList":["Fraser, Keir"],"dc:date":"2004-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998433,"sim:weight":0.393508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.364108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.348781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.347937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43147,"sim:weight":0.345835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.324798,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43152,"sim:weight":0.317662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43140,"sim:weight":0.31701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.306803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931664,"sim:weight":0.306595,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381374,"sim:weight":0.305265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931617,"sim:weight":0.303405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698695,"sim:weight":0.300821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930412,"sim:weight":0.279627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.273287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56740,"sim:weight":0.253975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116497,"sim:weight":0.250671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241143,"sim:weight":0.238272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934816,"sim:weight":0.234655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.201914,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72394,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Linear types for packet processing (extended\n        version)","bibo:abstract":"We present PacLang: an imperative, concurrent, linearly-typed\n        language designed for expressing packet processing applications.\n        PacLang’s linear type system ensures that no packet is\n        referenced by more than one thread, but allows multiple\n        references to a packet within a thread. We argue (i) that this\n        property greatly simplifies compilation of high-level programs\n        to the distributed memory architectures of modern Network\n        Processors; and (ii) that PacLang’s type system captures that\n        style in which imperative packet processing programs are already\n        written. Claim (ii) is justified by means of a case-study: we\n        describe a PacLang implementation of the IPv4 unicast packet\n        forwarding algorithm.\n        \n        PacLang is formalised by means of an operational semantics and a\n        Unique Ownership theorem formalises its correctness with respect\n        to the type system.","bibo:AuthorList":["Ennals, Robert","Sharp, Richard","Mycroft, Alan"],"dc:date":"2004-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":91436,"sim:weight":0.338325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.268857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.201389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.196764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394043,"sim:weight":0.180954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.174627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43116,"sim:weight":0.173765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.160813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.158739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.157021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.15523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.148263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.144599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.14333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.140078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393928,"sim:weight":0.131838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.129351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.128493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.128314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.122063,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72396,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Compromising emanations: eavesdropping risks of computer\n        displays","bibo:abstract":"Electronic equipment can emit unintentional signals from which\n        eavesdroppers may reconstruct processed data at some distance.\n        This has been a concern for military hardware for over half a\n        century. The civilian computer-security community became aware\n        of the risk through the work of van Eck in 1985. Military\n        “Tempest” shielding test standards remain secret and no civilian\n        equivalents are available at present. The topic is still largely\n        neglected in security textbooks due to a lack of published\n        experimental data.\n        \n        This report documents eavesdropping experiments on contemporary\n        computer displays. It discusses the nature and properties of\n        compromising emanations for both cathode-ray tube and\n        liquid-crystal monitors. The detection equipment used matches\n        the capabilities to be expected from well-funded professional\n        eavesdroppers. All experiments were carried out in a normal\n        unshielded office environment. They therefore focus on\n        emanations from display refresh signals, where periodic\n        averaging can be used to obtain reproducible results in spite of\n        varying environmental noise.\n        \n        Additional experiments described in this report demonstrate how\n        to make information emitted via the video signal more easily\n        receivable, how to recover plaintext from emanations via\n        radio-character recognition, how to estimate remotely precise\n        video-timing parameters, and how to protect displayed text from\n        radio-frequency eavesdroppers by using specialized screen\n        drivers with a carefully selected video card. Furthermore, a\n        proposal for a civilian radio-frequency emission-security\n        standard is outlined, based on path-loss estimates and published\n        data about radio noise levels.\n        \n        Finally, a new optical eavesdropping technique is demonstrated\n        that reads CRT displays at a distance. It observes\n        high-frequency variations of the light emitted, even after\n        diffuse reflection. Experiments with a typical monitor show that\n        enough video signal remains in the light to permit the\n        reconstruction of readable text from signals detected with a\n        fast photosensor. Shot-noise calculations provide an upper bound\n        for this risk.","bibo:AuthorList":["Kuhn, Markus G."],"dc:date":"2003-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":23351,"sim:weight":0.502026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71066,"sim:weight":0.50146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1758,"sim:weight":0.496054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145575,"sim:weight":0.493675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145893,"sim:weight":0.486204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8780061,"sim:weight":0.485885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709966,"sim:weight":0.470513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4880378,"sim:weight":0.463654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71078,"sim:weight":0.46169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43625,"sim:weight":0.45466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":492406,"sim:weight":0.447395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":42682,"sim:weight":0.4469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.43808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58842,"sim:weight":0.434382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2616,"sim:weight":0.428976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101193,"sim:weight":0.427896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58785,"sim:weight":0.422668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930023,"sim:weight":0.422476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101549,"sim:weight":0.421493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5837178,"sim:weight":0.419144,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72398,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An implementation of a coordinate based location\n        system","bibo:abstract":"This paper explains the co-ordinate based location system built\n        for XenoSearch, a resource discovery system in the XenoServer\n        Open Platform. The system is builds on the work of GNP,\n        Lighthouse and many more recent schemes. We also present results\n        from various combinations of algorithms to perform the actual\n        co-ordinate calculation based on GNP, Lighthouse and spring\n        based systems and show our implementations of the various\n        algorithms give similar prediction errors.","bibo:AuthorList":["Spence, David R."],"dc:date":"2003-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26670,"sim:weight":0.360723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.353295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.239076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799787,"sim:weight":0.172026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.155608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549752,"sim:weight":0.154613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.142178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990908,"sim:weight":0.139256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008722,"sim:weight":0.138774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933331,"sim:weight":0.132893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108877,"sim:weight":0.132379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.130734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386709,"sim:weight":0.129532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710106,"sim:weight":0.127822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.124755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18339,"sim:weight":0.124413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710068,"sim:weight":0.124322,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.121592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43040,"sim:weight":0.115446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9631060,"sim:weight":0.11282,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72400,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Reconfigurable wavelength-switched optical networks for\n        the Internet core","bibo:abstract":"With the quantity of data traffic carried on the Internet\n        doubling each year, there is no let up in the demand for ever\n        increasing network capacity. Optical fibres have a theoretical\n        capacity of many tens of terabits per second. Currently six\n        terabits per second has been achieved using Dense Wavelength\n        Division Multiplexing: multiple signals at different wavelengths\n        carried on the same fibre.\n        \n        This large available bandwidth moves the performance bottlenecks\n        to the processing required at each network node to receive,\n        buffer, route, and transmit each individual packet. For the last\n        10 years the speed of the electronic routers has been, in\n        relative terms, increasing slower than optical capacity. The\n        space required and power consumed by these routers is also\n        becoming a significant limitation.\n        \n        One solution examined in this dissertation is to create a\n        virtual topology in the optical layer by using all-optical\n        switches to create lightpaths across the network. In this way\n        nodes that are not directly connected can appear to be a single\n        virtual hop away, and no per-packet processing is required at\n        the intermediate nodes. With advances in optical switches it is\n        now possible for the network to reconfigure lightpaths\n        dynamically. This allows the network to share the resources\n        available between the different traffic streams flowing across\n        the network, and track changes in traffic volumes by allocating\n        bandwidth on demand.\n        \n        This solution is inherently a circuit-switched approach, but\n        taken into account are characteristics of optical switching, in\n        particular waveband switching (where we switch a contiguous\n        range of wavelengths as a single unit) and latency required to\n        achieve non disruptive switching.\n        \n        This dissertation quantifies the potential gain from such a\n        system and how that gain is related to the frequency of\n        reconfiguration. It outlines possible network architectures\n        which allow reconfiguration and, through simulation, measures\n        the performance of these architectures. It then discusses the\n        possible interactions between a reconfiguring optical layer and\n        higher-level network layers.\n        \n        This dissertation argues that the optical layer should be\n        distinct from higher network layers, maintaining stable\n        full-mesh connectivity, and dynamically reconfiguring the sizes\n        and physical routes of the virtual paths to take advantage of\n        changing traffic levels.","bibo:AuthorList":["Granger, Tim"],"dc:date":"2003-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102564,"sim:weight":0.485998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972972,"sim:weight":0.475129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4892681,"sim:weight":0.467518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69273,"sim:weight":0.466436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88677,"sim:weight":0.464499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117380,"sim:weight":0.464155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998729,"sim:weight":0.451403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102392,"sim:weight":0.44888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68807,"sim:weight":0.447733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":720262,"sim:weight":0.44712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998728,"sim:weight":0.443262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998726,"sim:weight":0.439551,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393976,"sim:weight":0.433663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102360,"sim:weight":0.432782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1773,"sim:weight":0.431634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708264,"sim:weight":0.429033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1133794,"sim:weight":0.428045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998725,"sim:weight":0.420676,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397679,"sim:weight":0.418358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":779064,"sim:weight":0.417621,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72402,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Sketchpad: A man-machine graphical communication\n        system","bibo:abstract":"The Sketchpad system uses drawing as a novel communication\n        medium for a computer. The system contains input, output, and\n        computation programs which enable it to interpret information\n        drawn directly on a computer display. It has been used to draw\n        electrical, mechanical, scientific, mathematical, and animated\n        drawings; it is a general purpose system. Sketchpad has shown\n        the most usefulness as an aid to the understanding of processes,\n        such as the notion of linkages, which can be described with\n        pictures. Sketchpad also makes it easy to draw highly repetitive\n        or highly accurate drawings and to change drawings previously\n        drawn with it. The many drawings in this thesis were all made\n        with Sketchpad.\n        \n        A Sketchpad user sketches directly on a computer display with a\n        “light pen.” The light pen is used both to position parts of the\n        drawing on the display and to point to them to change them. A\n        set of push buttons controls the changes to be made such as\n        “erase,” or “move.” Except for legends, no written language is\n        used.\n        \n        Information sketched can include straight line segments and\n        circle arcs. Arbitrary symbols may be defined from any\n        collection of line segments, circle arcs, and previously defined\n        symbols. A user may define and use as many symbols as he wishes.\n        Any change in the definition of a symbol is at once seen\n        wherever that symbol appears.\n        \n        Sketchpad stores explicit information about the topology of a\n        drawing. If the user moves one vertex of a polygon, both\n        adjacent sides will be moved. If the user moves a symbol, all\n        lines attached to that symbol will automatically move to stay\n        attached to it. The topological connections of the drawing are\n        automatically indicated by the user as he sketches. Since\n        Sketchpad is able to accept topological information from a human\n        being in a picture language perfectly natural to the human, it\n        can be used as an input program for computation programs which\n        require topological data, e.g., circuit simulators.\n        \n        Sketchpad itself is able to move parts of the drawing around to\n        meet new conditions which the user may apply to them. The user\n        indicates conditions with the light pen and push buttons. For\n        example, to make two lines parallel, he successively points to\n        the lines with the light pen and presses a button. The\n        conditions themselves are displayed on the drawing so that they\n        may be erased or changed with the light pen language. Any\n        combination of conditions can be defined as a composite\n        condition and applied in one step.\n        \n        It is easy to add entirely new types of conditions to\n        Sketchpad’s vocabulary. Since the conditions can involve\n        anything computable, Sketchpad can be used for a very wide range\n        of problems. For example, Sketchpad has been used to find the\n        distribution of forces in the members of truss bridges drawn\n        with it.\n        \n        Sketchpad drawings are stored in the computer in a specially\n        designed “ring” structure. The ring structure features rapid\n        processing of topological information with no searching at all.\n        The basic operations used in Sketchpad for manipulating the ring\n        structure are described.","bibo:AuthorList":["Sutherland, Ivan Edward","Blackwell, Alan","Rodden, Kerry"],"dc:date":"2003-09","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"I E Sutherland. (1963). SKETCHPAD: A man machine graphical communication system\u0027,","authors":[],"bibo:shortTitle":"SKETCHPAD: A man machine graphical communication system\u0027,","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I E Sutherland. (1963). SKETCHPAD: A man machine graphical communication system\u0027,","authors":[],"bibo:shortTitle":"SKETCHPAD: A man machine graphical communication system\u0027,","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I E Sutherland. (1963). SKETCHPAD: A man machine graphical communication system\u0027,","authors":[],"bibo:shortTitle":"SKETCHPAD: A man machine graphical communication system\u0027,","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I Sutherland. (1963). Sketchpad: a man–machine graphical communication system.","authors":[],"bibo:shortTitle":"Sketchpad: a man–machine graphical communication system.","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I Sutherland. (1963). Sketchpad: a man–machine graphical communication system.","authors":[],"bibo:shortTitle":"Sketchpad: a man–machine graphical communication system.","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I Sutherland. (1963). Sketchpad: a man–machine graphical communication system.","authors":[],"bibo:shortTitle":"Sketchpad: a man–machine graphical communication system.","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I Sutherland. (1963). Sketchpad: a man–machine graphical communication system.","authors":[],"bibo:shortTitle":"Sketchpad: a man–machine graphical communication system.","dc:date":"1963","refDocId":72402},{"rawReferenceText":"I E Sutherland. (1963). SKETCHPAD: A man machine graphical communication system\u0027,","authors":[],"bibo:shortTitle":"SKETCHPAD: A man machine graphical communication system\u0027,","dc:date":"1963","doi":"10.1177/003754976400200514","refDocId":72402}],"similarities":[{"identifier":1386251,"sim:weight":0.439821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.429858,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46283,"sim:weight":0.385618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382037,"sim:weight":0.326502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998024,"sim:weight":0.311807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47252,"sim:weight":0.298485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.282147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10716,"sim:weight":0.279167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.259017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98047,"sim:weight":0.249037,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.241413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53645,"sim:weight":0.23672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929365,"sim:weight":0.230955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108795,"sim:weight":0.221977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86557,"sim:weight":0.220822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.220663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.212745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.212002,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187553,"sim:weight":0.204909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.20482,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72404,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanizing compositional reasoning for concurrent\n        systems: some lessons","bibo:abstract":"The paper reports on experiences of mechanizing various\n        proposals for compositional reasoning in concurrent systems. The\n        work uses the UNITY formalism and the Isabelle proof tool. The\n        proposals investigated include existential/universal properties,\n        guarantees properties and progress sets. The paper mentions some\n        alternative proposals that are also worth of investigation. The\n        conclusions are that many of these methods work and are suitable\n        candidates for further development.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"2003-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.315513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.301539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":299078,"sim:weight":0.172481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.150589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108524,"sim:weight":0.140152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.139442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352229,"sim:weight":0.137223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.136214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335014,"sim:weight":0.136007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.128854,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.126598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998282,"sim:weight":0.122775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80616,"sim:weight":0.119174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1339,"sim:weight":0.105715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.105699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85726,"sim:weight":0.101976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.0993289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.0993289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.0993289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.0993289,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72406,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Design choices for language-based\n        transactions","bibo:abstract":"This report discusses two design choices which arose in our\n        recent work on introducing a new ‘atomic’ keyword as an\n        extension to the Java programming language. We discuss the\n        extent to which programs using atomic blocks should be provided\n        with an explicit ‘abort’ operation to roll-back the effects of\n        the current block. We also discuss mechanisms for supporting\n        blocks that perform I/O operations or external database\n        transactions.","bibo:AuthorList":["Harris, Tim"],"dc:date":"2003-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.349377,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757541,"sim:weight":0.297029,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.28492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757640,"sim:weight":0.187564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.181763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.176287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.173085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.167862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1019123,"sim:weight":0.165208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88291,"sim:weight":0.162062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933553,"sim:weight":0.158778,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933989,"sim:weight":0.155996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.154328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.152439,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27378,"sim:weight":0.146715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103057,"sim:weight":0.143649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.140133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.139486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.13619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.135621,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72408,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Multi-layer network monitoring and analysis","bibo:abstract":"Passive network monitoring offers the possibility of gathering a\n        wealth of data about the traffic traversing the network and the\n        communicating processes generating that traffic. Significant\n        advantages include the non-intrusive nature of data capture and\n        the range and diversity of the traffic and driving applications\n        which may be observed. Conversely there are also associated\n        practical difficulties which have restricted the usefulness of\n        the technique: increasing network bandwidths can challenge the\n        capacity of monitors to keep pace with passing traffic without\n        data loss, and the bulk of data recorded may become\n        unmanageable.\n        \n        Much research based upon passive monitoring has in consequence\n        been limited to that using a sub-set of the data potentially\n        available, typically TCP/IP packet headers gathered using\n        Tcpdump or similar monitoring tools. The bulk of data collected\n        is thereby minimised, and with the possible exception of packet\n        filtering, the monitor’s available processing power is available\n        for the task of collection and storage. As the data available\n        for analysis is drawn from only a small section of the network\n        protocol stack, detailed study is largely confined to the\n        associated functionality and dynamics in isolation from activity\n        at other levels. Such lack of context severely restricts\n        examination of the interaction between protocols which may in\n        turn lead to inaccurate or erroneous conclusions.\n        \n        The work described in this report attempts to address some of\n        these limitations. A new passive monitoring architecture —\n        Nprobe — is presented, based upon ‘off the shelf’ components and\n        which, by using clusters of probes, is scalable to keep pace\n        with current high bandwidth networks without data loss.\n        Monitored packets are fully captured, but are subject to the\n        minimum processing in real time needed to identify and associate\n        data of interest across the target set of protocols. Only this\n        data is extracted and stored. The data reduction ratio thus\n        achieved allows examination of a wider range of encapsulated\n        protocols without straining the probe’s storage capacity.\n        \n        Full analysis of the data harvested from the network is\n        performed off-line. The activity of interest within each\n        protocol is examined and is integrated across the range of\n        protocols, allowing their interaction to be studied. The\n        activity at higher levels informs study of the lower levels, and\n        that at lower levels infers detail of the higher. A technique\n        for dynamically modelling TCP connections is presented, which,\n        by using data from both the transport and higher levels of the\n        protocol stack, differentiates between the effects of network\n        and end-process activity.\n        \n        The balance of the report presents a study of Web traffic using\n        Nprobe. Data collected from the IP, TCP, HTTP and HTML levels of\n        the stack is integrated to identify the patterns of network\n        activity involved in downloading whole Web pages: by using the\n        links contained in HTML documents observed by the monitor,\n        together with data extracted from the HTML headers of downloaded\n        contained objects, the set of TCP connections used, and the way\n        in which browsers use them, are studied as a whole. An analysis\n        of the degree and distribution of delay is presented and\n        contributes to the understanding of performance as perceived by\n        the user. The effects of packet loss on whole page download\n        times are examined, particularly those losses occurring early in\n        the lifetime of connections before reliable estimations of round\n        trip times are established. The implications of such early\n        packet losses for pages downloads using persistent connections\n        are also examined by simulations using the detailed data\n        available.","bibo:AuthorList":["Hall, James"],"dc:date":"2003-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102594,"sim:weight":0.543799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102811,"sim:weight":0.535518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103079,"sim:weight":0.533907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793759,"sim:weight":0.513456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041455,"sim:weight":0.504516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894200,"sim:weight":0.495382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102865,"sim:weight":0.494483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008729,"sim:weight":0.490639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708264,"sim:weight":0.487447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998726,"sim:weight":0.485291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.482234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.476506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998725,"sim:weight":0.472241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.467994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.467873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.467766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.457653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138526,"sim:weight":0.455291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.453897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003289,"sim:weight":0.447495,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72410,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bigraphs and mobile processes","bibo:abstract":"A bigraphical reactive system (BRS) involves bigraphs, in which\n        the nesting of nodes represents locality, independently of the\n        edges connecting them; it also allows bigraphs to reconfigure\n        themselves. BRSs aim to provide a uniform way to model spatially\n        distributed systems that both compute and communicate. In this\n        memorandum we develop their static and dynamic theory.\n        \n        In Part I we illustrate bigraphs in action, and show how they\n        correspond to to process calculi. We then develop the abstract\n        (non-graphical) notion of wide reactive system (WRS), of which\n        BRSs are an instance. Starting from reaction rules —often called\n        rewriting rules— we use the RPO theory of Leifer and Milner to\n        derive (labelled) transition systems for WRSs, in a way that\n        leads automatically to behavioural congruences.\n        \n        In Part II we develop bigraphs and BRSs formally. The theory is\n        based directly on graphs, not on syntax. Key results in the\n        static theory are that sufficient RPOs exist (enabling the\n        results of Part I to be applied), that parallel combinators\n        familiar from process calculi may be defined, and that a\n        complete algebraic theory exists at least for pure bigraphs\n        (those without binding). Key aspects in the dynamic theory —the\n        BRSs— are the definition of parametric reaction rules that may\n        replicate or discard parameters, and the full application of the\n        behavioural theory of Part I.\n        \n        In Part III we introduce a special class: the simple BRSs. These\n        admit encodings of many process calculi, including the\n        π-calculus and the ambient calculus. A still narrower class, the\n        basic BRSs, admits an easy characterisation of our derived\n        transition systems. We exploit this in a case study for an\n        asynchronous π-calculus. We show that structural congruence of\n        process terms corresponds to equality of the representing\n        bigraphs, and that classical strong bisimilarity corresponds to\n        bisimilarity of bigraphs. At the end, we explore several\n        directions for further work.","bibo:AuthorList":["Jensen, Ole Høgh","Milner, Robin"],"dc:date":"2003-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934106,"sim:weight":0.61816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932198,"sim:weight":0.599163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.456022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.405407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.3985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934300,"sim:weight":0.39015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.387907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934473,"sim:weight":0.374513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934272,"sim:weight":0.374461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.37384,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.360288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.354207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19256,"sim:weight":0.348196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933380,"sim:weight":0.345288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934343,"sim:weight":0.345085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.337403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.327511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.327511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934421,"sim:weight":0.319317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000287,"sim:weight":0.316542,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72412,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Global abstraction-safe marshalling with hash\n        types","bibo:abstract":"Type abstraction is a key feature of ML-like languages for\n        writing large programs. Marshalling is necessary for writing\n        distributed programs, exchanging values via network byte-streams\n        or persistent stores. In this paper we combine the two,\n        developing compile-time and run-time semantics for marshalling,\n        that guarantee abstraction-safety between separately-built\n        programs.\n        \n        We obtain a namespace for abstract types that is global, ie\n        meaningful between programs, by hashing module declarations. We\n        examine the scenarios in which values of abstract types are\n        communicated from one program to another, and ensure, by\n        constructing hashes appropriately, that the dynamic and static\n        notions of type equality mirror each other. We use singleton\n        kinds to express abstraction in the static semantics;\n        abstraction is tracked in the dynamic semantics by coloured\n        brackets. These allow us to prove preservation, erasure, and\n        coincidence results. We argue that our proposal is a good basis\n        for extensions to existing ML-like languages, pragmatically\n        straightforward for language users and for implementors.","bibo:AuthorList":["Leifer, James J.","Peskine, Gilles","Sewell, Peter","Wansbrough, Keith"],"dc:date":"2003-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934501,"sim:weight":0.363455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.216125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.214548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.207924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.202341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026425,"sim:weight":0.177006,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.175794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.165912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.16324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.158512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.156341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.151852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.14018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.138438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.13422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.133321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.130616,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.129527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.128397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.128065,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72414,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Dynamic rebinding for marshalling and update, with\n        destruct-time λ","bibo:abstract":"Most programming languages adopt static binding, but for\n        distributed programming an exclusive reliance on static binding\n        is too restrictive: dynamic binding is required in various\n        guises, for example when a marshalled value is received from the\n        network, containing identifiers that must be rebound to local\n        resources. Typically it is provided only by ad-hoc mechanisms\n        that lack clean semantics.\n        \n        In this paper we adopt a foundational approach, developing core\n        dynamic rebinding mechanisms as extensions to the simply-typed\n        call-by-value λ-calculus. To do so we must first explore\n        refinements of the call-by-value reduction strategy that delay\n        instantiation, to ensure computations make use of the most\n        recent versions of rebound definitions. We introduce redex-time\n        and destruct-time strategies. The latter forms the basis for a\n        λ-marsh calculus that supports dynamic rebinding of marshalled\n        values, while remaining as far as possible statically-typed. We\n        sketch an extension of λ-marsh with concurrency and\n        communication, giving examples showing how wrappers for\n        encapsulating untrusted code can be expressed. Finally, we show\n        that a high-level semantics for dynamic updating can also be\n        based on the destruct-time strategy, defining a λ-update\n        calculus with simple primitives to provide type-safe updating of\n        running code. We thereby establish primitives and a common\n        semantic foundation for a variety of real-world dynamic\n        rebinding requirements.","bibo:AuthorList":["Bierman, Gavin","Hicks, Michael","Sewell, Peter","Stoyle, Gareth","Wansbrough, Keith"],"dc:date":"2004-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934501,"sim:weight":0.330944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.239413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.215146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.196148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.185787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10494,"sim:weight":0.183382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.177615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.176325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.162848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.157981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.14933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.148501,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.147962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934829,"sim:weight":0.1479,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549536,"sim:weight":0.147584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.143619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.143462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184278,"sim:weight":0.140628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.129764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.128198,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72416,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Using inequalities as term ordering\n        constraints","bibo:abstract":"In this paper we show how linear inequalities can be used to\n        approximate Knuth-Bendix term ordering constraints, and how term\n        operations such as substitution can be carried out on systems of\n        inequalities. Using this representation allows an off-the-shelf\n        linear arithmetic decision procedure to check the satisfiability\n        of a set of ordering constraints. We present a formal\n        description of a resolution calculus where systems of\n        inequalities are used to constrain clauses, and implement this\n        using the Omega test as a satisfiability checker. We give the\n        results of an experiment over problems in the TPTP archive,\n        comparing the practical performance of the resolution calculus\n        with and without inherited inequality constraints.","bibo:AuthorList":["Hurd, Joe"],"dc:date":"2003-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98829,"sim:weight":0.283817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.283745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.224995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933206,"sim:weight":0.192278,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931954,"sim:weight":0.176441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931558,"sim:weight":0.172312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934285,"sim:weight":0.167221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278037,"sim:weight":0.166586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9767,"sim:weight":0.163455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.159063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931566,"sim:weight":0.151819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.145537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.143386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933273,"sim:weight":0.143168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933405,"sim:weight":0.1399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.138363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.137215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.135639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43062,"sim:weight":0.134476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.133393,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72418,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Formal verification of probabilistic\n        algorithms","bibo:abstract":"This thesis shows how probabilistic algorithms can be formally\n        verified using a mechanical theorem prover.\n        \n        We begin with an extensive foundational development of\n        probability, creating a higher-order logic formalization of\n        mathematical measure theory. This allows the definition of the\n        probability space we use to model a random bit generator, which\n        informally is a stream of coin-flips, or technically an infinite\n        sequence of IID Bernoulli(1/2) random variables.\n        \n        Probabilistic programs are modelled using the state-transformer\n        monad familiar from functional programming, where the random bit\n        generator is passed around in the computation. Functions remove\n        random bits from the generator to perform their calculation, and\n        then pass back the changed random bit generator with the result.\n        \n        Our probability space modelling the random bit generator allows\n        us to give precise probabilistic specifications of such\n        programs, and then verify them in the theorem prover.\n        \n        We also develop technical support designed to expedite\n        verification: probabilistic quantifiers; a compositional\n        property subsuming measurability and independence; a\n        probabilistic while loop together with a formal concept of\n        termination with probability 1. We also introduce a technique\n        for reducing properties of a probabilistic while loop to\n        properties of programs that are guaranteed to terminate: these\n        can then be established using induction and standard methods of\n        program correctness.\n        \n        We demonstrate the formal framework with some example\n        probabilistic programs: sampling algorithms for four probability\n        distributions; some optimal procedures for generating dice rolls\n        from coin flips; the symmetric simple random walk. In addition,\n        we verify the Miller-Rabin primality test, a well-known and\n        commercially used probabilistic algorithm. Our fundamental\n        perspective allows us to define a version with strong\n        properties, which we can execute in the logic to prove\n        compositeness of numbers.","bibo:AuthorList":["Hurd, Joe"],"dc:date":"2003-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8997506,"sim:weight":0.438473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20414,"sim:weight":0.438383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.430048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9658,"sim:weight":0.423743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80132,"sim:weight":0.416926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.406929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.404366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.3992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21892,"sim:weight":0.386371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20907,"sim:weight":0.372826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826714,"sim:weight":0.371516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.371493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933554,"sim:weight":0.367554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.366933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.356916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.351951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.342702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.341282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.340678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397696,"sim:weight":0.339121,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72420,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Fast Marching farthest point sampling for point clouds\n        and implicit surfaces","bibo:abstract":"In a recent paper (Moenning and Dodgson, 2003), the Fast\n        Marching farthest point sampling strategy (FastFPS) for planar\n        domains and curved manifolds was introduced. The version of\n        FastFPS for curved manifolds discussed in the paper deals with\n        surface domains in triangulated form only. Due to a restriction\n        of the underlying Fast Marching method, the algorithm further\n        requires the splitting of any obtuse into acute triangles to\n        ensure the consistency of the Fast Marching approximation. In\n        this paper, we overcome these restrictions by using Memoli and\n        Sapiro’s (Memoli and Sapiro, 2001 and 2002) extension of the\n        Fast Marching method to the handling of implicit surfaces and\n        point clouds. We find that the extended FastFPS algorithm can be\n        applied to surfaces in implicit or point cloud form without the\n        loss of the original algorithm’s computational optimality and\n        without the need for any preprocessing.","bibo:AuthorList":["Moenning, Carsten","Dodgson, Neil A."],"dc:date":"2003-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1496193,"sim:weight":0.269532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.260326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.243697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43144,"sim:weight":0.221842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000332,"sim:weight":0.205696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16497,"sim:weight":0.155867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1633742,"sim:weight":0.155648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1633954,"sim:weight":0.154242,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568638,"sim:weight":0.154012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":240353,"sim:weight":0.153202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56380,"sim:weight":0.152877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21022,"sim:weight":0.144751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53283,"sim:weight":0.141496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45824,"sim:weight":0.140408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1665559,"sim:weight":0.13924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.137888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.130561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101555,"sim:weight":0.128492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.127318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":268953,"sim:weight":0.127119,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72422,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Access policies for middleware","bibo:abstract":"This dissertation examines how the architectural layering of\n        middleware constrains the design of a middleware security\n        architecture, and analyses the complications that arise from\n        that. First, we define a precise notion of middleware that\n        includes its architecture and features. Our definition is based\n        on the Common Object Request Broker Architecture (CORBA), which\n        is used throughout this dissertation both as a reference\n        technology and as a basis for a proof of concept implementation.\n        In several steps, we construct a security model that fits to the\n        described middleware architecture. The model facilitates\n        conceptual reasoning about security. The results of our analysis\n        indicate that the cryptographic identities available on the\n        lower layers of the security model are only of limited use for\n        expressing fine-grained security policies, because they are\n        separated from the application layer entities by the middleware\n        layer. To express individual application layer entities in\n        access policies, additional more fine-grained descriptors are\n        required. To solve this problem for the target side (i.e., the\n        receiving side of an invocation), we propose an improved\n        middleware security model that supports individual access\n        policies on a per-target basis. The model is based on so-called\n        “resource descriptors”, which are used in addition to\n        cryptographic identities to describe application layer entities\n        in access policies. To be useful, descriptors need to fulfil a\n        number of properties, such as local uniqueness and persistency.\n        Next, we examine the information available at the middleware\n        layer for its usefulness as resource descriptors, in particular\n        the interface name and the instance information inside the\n        object reference. Unfortunately neither fulfils all required\n        properties. However, it is possible to obtain resource\n        descriptors on the target side through a mapping process that\n        links target instance information to an externally provided\n        descriptor. We describe both the mapping configuration when the\n        target is instantiated and the mapping process at invocation\n        time. A proof of concept implementation, which contains a number\n        of technical improvements over earlier attempts to solve this\n        problem, shows that this approach is useable in practice, even\n        for complex architectures, such as CORBA and CORBASec (the\n        security services specified for CORBA). Finally, we examine the\n        security approaches of several related middleware technologies\n        that have emerged since the specification of CORBA and CORBASec,\n        and show the applicability of the resource descriptor mapping.","bibo:AuthorList":["Lang, Ulrich"],"dc:date":"2003-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":69318,"sim:weight":0.539218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69733,"sim:weight":0.473349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778574,"sim:weight":0.47029,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917664,"sim:weight":0.459876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389830,"sim:weight":0.454718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69740,"sim:weight":0.454301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.432228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.404533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933204,"sim:weight":0.397517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88996,"sim:weight":0.397303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934177,"sim:weight":0.390811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549536,"sim:weight":0.384265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933201,"sim:weight":0.378343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932876,"sim:weight":0.375748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549692,"sim:weight":0.371008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43141,"sim:weight":0.366554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9781,"sim:weight":0.362302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9783,"sim:weight":0.35682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389844,"sim:weight":0.349619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932877,"sim:weight":0.3487,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72424,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"MJ: An imperative core calculus for Java and Java with\n        effects","bibo:abstract":"In order to study rigorously object-oriented languages such as\n        Java or C#, a common practice is to define lightweight\n        fragments, or calculi, which are sufficiently small to\n        facilitate formal proofs of key properties. However many of the\n        current proposals for calculi lack important language features.\n        In this paper we propose Middleweight Java, MJ, as a contender\n        for a minimal imperative core calculus for Java. Whilst compact,\n        MJ models features such as object identity, field assignment,\n        constructor methods and block structure. We define the syntax,\n        type system and operational semantics of MJ, and give a proof of\n        type safety. In order to demonstrate the usefulness of MJ to\n        reason about operational features, we consider a recent proposal\n        of Greenhouse and Boyland to extend Java with an effects system.\n        This effects system is intended to delimit the scope of\n        computational effects within a Java program. We define an\n        extension of MJ with a similar effects system and instrument the\n        operational semantics. We then prove the correctness of the\n        effects system; a question left open by Greenhouse and Boyland.\n        We also consider the question of effect inference for our\n        extended calculus, detail an algorithm for inferring effects\n        information and give a proof of correctness.","bibo:AuthorList":["Bierman, G.M.","Parkinson, M.J.","Pitts, A.M."],"dc:date":"2003-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":27378,"sim:weight":0.236521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.206956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.199368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.19652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.192339,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65305,"sim:weight":0.185136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.184466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.182445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.179572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.178543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.170591,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65319,"sim:weight":0.166863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.161534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.158195,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.15819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.158144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.156456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.151347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.150604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.147546,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72426,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Fast Marching farthest point sampling","bibo:abstract":"Using Fast Marching for the incremental computation of distance\n        maps across the sampling domain, we obtain an efficient farthest\n        point sampling technique (FastFPS). The method is based on that\n        of Eldar et al. (1992, 1997) but extends more naturally to the\n        case of non-uniform sampling and is more widely applicable.\n        Furthermore, it can be applied to both planar domains and curved\n        manifolds and allows for weighted domains in which different\n        cost is associated with different points on the surface. We\n        conclude with considering the extension of FastFPS to the\n        sampling of point clouds without the need for prior surface\n        reconstruction.","bibo:AuthorList":["Moenning, Carsten","Dodgson, Neil A."],"dc:date":"2003-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":104094,"sim:weight":0.452536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549802,"sim:weight":0.313967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21022,"sim:weight":0.280368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.240987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.230039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43144,"sim:weight":0.227118,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98644,"sim:weight":0.222949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.21775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47238,"sim:weight":0.212009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826802,"sim:weight":0.191245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45824,"sim:weight":0.188179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43157,"sim:weight":0.168967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.167873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.160792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84788,"sim:weight":0.1602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56380,"sim:weight":0.157195,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49562,"sim:weight":0.156362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20809,"sim:weight":0.14941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43398,"sim:weight":0.148029,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2143862,"sim:weight":0.144213,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72428,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Resource control of untrusted code in an open network\n        environment","bibo:abstract":"Current research into Active Networks, Open Signalling and other\n        forms of mobile code have made use of the ability to execute\n        user-supplied code at locations within the network\n        infrastructure, in order to avoid the inherent latency\n        associated with wide area networks or to avoid sending excessive\n        amounts of data across bottleneck links or nodes. Existing\n        research has addressed the design and evaluation of programming\n        environments, and testbeds have been implemented on traditional\n        operating systems. Such work has deferred issues regarding\n        resource control; this has been reasonable, since this research\n        has been conducted in a closed environment.\n        \n        In an open environment, which is required for widespread\n        deployment of such technologies, the code supplied to the\n        network nodes may not be from a trusted source. Thus, it cannot\n        be assumed that such code will behave non-maliciously, nor that\n        it will avoid consuming more than its fair share of the\n        available system resources.\n        \n        The computing resources consumed by end-users on programmable\n        nodes within a network are not free, and must ultimately be paid\n        for in some way. Programmable networks allow users substantially\n        greater complexity in the way that they may consume network\n        resources. This dissertation argues that, due to this\n        complexity, it is essential to be able control and account for\n        the resources used by untrusted user-supplied code if such\n        technology is to be deployed effectively in a wide-area open\n        environment.\n        \n        The Resource Controlled Active Node Environment (RCANE) is\n        presented to facilitate the control of untrusted code. RCANE\n        supports the allocation, scheduling and accounting of the\n        resources available on a node, including CPU and network I/O\n        scheduling, memory allocation, and garbage collection overhead.","bibo:AuthorList":["Menage, Paul B."],"dc:date":"2003-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4892816,"sim:weight":0.500166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931552,"sim:weight":0.481256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931598,"sim:weight":0.476198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":377179,"sim:weight":0.457635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.456644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69318,"sim:weight":0.455008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69324,"sim:weight":0.452661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.448108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998729,"sim:weight":0.439677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.439241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69321,"sim:weight":0.437774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008743,"sim:weight":0.43714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70184,"sim:weight":0.43541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.433794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.433779,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70496,"sim:weight":0.432991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.430744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.430067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930413,"sim:weight":0.429041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800134,"sim:weight":0.422005,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72430,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Pronto: MobileGateway with publish-subscribe paradigm\n        over wireless network","bibo:abstract":"This paper presents the design, implementation, and evaluation\n        of Pronto, a middleware system for mobile applications with\n        messaging as a basis. It provides a solution for mobile\n        application specific problems such as resource constraints,\n        network characteristics, and data optimization. Pronto consists\n        of three main functions: 1) MobileJMS Client, a lightweight\n        client of Message Oriented Middleware (MOM) based on Java\n        Message Service (JMS), 2) Gateway for reliable and efficient\n        transmission between mobile devices and a server with pluggable\n        components, and 3) Serverless JMS based on IP multicast. The\n        publish-subscribe paradigm is ideal for mobile applications, as\n        mobile devices are commonly used for data collection under\n        conditions of frequent disconnection and changing numbers of\n        recipients. This paradigm provides greater flexibility due to\n        the decoupling of publisher and subscriber. Adding a gateway as\n        a message hub to transmit information in real-time or with\n        store-and-forward messaging provides powerful optimization and\n        data transformation. Caching is an essential function of the\n        gateway, and SmartCaching is designed for generic caching in an\n        N-tier architecture. Serverless JMS aims at a decentralized\n        messaging model, which supports an ad-hoc network, as well as\n        creating a high-speed messaging BUS. Pronto is an intelligent\n        MobileGateway, providing a useful MOM intermediary between a\n        server and mobile devices over a wireless network.","bibo:AuthorList":["Yoneki, Eiko","Bacon, Jean"],"dc:date":"2003-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":960712,"sim:weight":0.447025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1133788,"sim:weight":0.357081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549558,"sim:weight":0.335214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549554,"sim:weight":0.331962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.330519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123285,"sim:weight":0.327997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549563,"sim:weight":0.326152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647964,"sim:weight":0.31354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":746937,"sim:weight":0.301066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549530,"sim:weight":0.285755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933440,"sim:weight":0.27867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":889162,"sim:weight":0.272689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.268121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.267809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91433,"sim:weight":0.255957,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.244719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91434,"sim:weight":0.244698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.237865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186234,"sim:weight":0.236649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549694,"sim:weight":0.219241,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72432,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A role and context based security model","bibo:abstract":"Security requirements approached at the enterprise level\n        initiate the need for models that capture the organisational and\n        distributed aspects of information usage. Such models have to\n        express organisation-specific security policies and internal\n        controls aiming to protect information against unauthorised\n        access and modification, and against usage of information for\n        unintended purposes. This technical report describes a\n        systematic approach to modelling the security requirements from\n        the perspective of job functions and tasks performed in an\n        organisation. It deals with the design, analysis, and management\n        of security abstractions and mechanisms in a unified framework.\n        \n        The basis of access control policy in this framework is\n        formulated around a semantic construct of a role. Roles are\n        granted permissions according to the job functions that exist in\n        an organisation, and then users are assigned to roles on basis\n        of their specific job responsibilities. In order to ensure that\n        permissions included in the roles are used by users only for\n        purposes corresponding to the organisation’s present business\n        needs, a novel approach of “active” context-based access control\n        is proposed. The usage of role permissions in this approach is\n        controlled according to the emerging context associated with\n        progress of various tasks in the organisation.\n        \n        The work explores formally the security properties of the\n        established model, in particular, support for separation of duty\n        and least privilege principles that are important requirements\n        in many commercial systems. Results have implications for\n        understanding different variations of separation of duty policy\n        that are currently used in the role-based access control.\n        \n        Finally, a design architecture of the defined security model is\n        presented detailing the components and processing phases\n        required for successful application of the model to distributed\n        computer environments. The model provides opportunities for the\n        implementers, based on application requirements, to choose\n        between several alternative design approaches.","bibo:AuthorList":["Beresnevichiene, Yolanta"],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":106411,"sim:weight":0.529971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187729,"sim:weight":0.456227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186346,"sim:weight":0.448734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100616,"sim:weight":0.415575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932135,"sim:weight":0.406077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000282,"sim:weight":0.38948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145717,"sim:weight":0.376238,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.367368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934195,"sim:weight":0.338616,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.335466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.326615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70200,"sim:weight":0.32184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664530,"sim:weight":0.287226,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44432,"sim:weight":0.28083,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381989,"sim:weight":0.277151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43080,"sim:weight":0.276239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108269,"sim:weight":0.276149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81405,"sim:weight":0.269956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664520,"sim:weight":0.268353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48282,"sim:weight":0.265764,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72434,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Iota: A concurrent XML scripting language with\n        applications to Home Area Networking","bibo:abstract":"Iota is a small and simple concurrent language that provides\n        native support for functional XML computation and for typed\n        channel-based communication. It has been designed as a\n        domain-specific language to express device behaviour within the\n        context of Home Area Networking.\n        \n        In this paper we describe Iota, explaining its novel treatment\n        of XML and describing its type system and operational semantics.\n        We give a number of examples including Iota code to program\n        Universal Plug ’n’ Play (UPnP) devices.","bibo:AuthorList":["Bierman, G.M.","Sewell, P."],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8999162,"sim:weight":0.268869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764413,"sim:weight":0.262152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.244015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.236914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.224715,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103167,"sim:weight":0.185227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":987604,"sim:weight":0.176091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138765,"sim:weight":0.16978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.14838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000343,"sim:weight":0.145687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106936,"sim:weight":0.143086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1001703,"sim:weight":0.138073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70475,"sim:weight":0.134787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.128497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710106,"sim:weight":0.128488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.123677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934804,"sim:weight":0.122109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.12081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.117169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91438,"sim:weight":0.114016,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72436,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Turing Switches – Turing machines for all-optical\n        Internet routing","bibo:abstract":"This is technical report outlining an idea for basic long term\n        research into the architectures for programmable all-optical\n        Internet routers.\n        \n        We are revisiting some of the fundamental tenets of computer\n        science to carry out this work, and so it is necessarily highly\n        speculative.\n        \n        Currently, the processing elements in all-electronic routers are\n        typically fairly conventional von-Neumann architecture computers\n        with processors that have large, complex instruction sets (even\n        RISC is relatively complex compared with the actual requirements\n        for packet processing) and Random Access Memory.\n        \n        As the need for speed increases, first this architecture, and\n        then the classical computing hardware components, and finally,\n        electronics cease to be able to keep up.\n        \n        At this time, optical device technology is making great strides,\n        and we see the availability of gates, as well as a plethora of\n        invention in providing buffering mechanisms.\n        \n        However, a critical problem we foresee is the ability to\n        re-program devices for different packet processing functions\n        such as classification and scheduling. This proposal is aimed at\n        researching one direction for adding optical domain\n        programmability.","bibo:AuthorList":["Crowcroft, Jon"],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4187553,"sim:weight":0.283254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.270751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81246,"sim:weight":0.269226,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389844,"sim:weight":0.235156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934790,"sim:weight":0.232852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4159565,"sim:weight":0.223405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.220524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53645,"sim:weight":0.220437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898469,"sim:weight":0.22015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.215237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.214565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.211387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.210234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691218,"sim:weight":0.209865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.20944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.201985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.201331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929812,"sim:weight":0.197737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.19576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":859985,"sim:weight":0.195291,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72438,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"BOURSE – Broadband Organisation of Unregulated Radio\n        Systems through Economics","bibo:abstract":"This is a technical report about an idea for research in the\n        intersection of active nets, cognitive radio and power laws of\n        network topologies.","bibo:AuthorList":["Crowcroft, Jon","Gibbens, Richard","Hailes, Stephen"],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":68122,"sim:weight":0.425412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.385019,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.378016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.352337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.341555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":871436,"sim:weight":0.340387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1593517,"sim:weight":0.307997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058038,"sim:weight":0.236211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145958,"sim:weight":0.228376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003758,"sim:weight":0.211199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930219,"sim:weight":0.206346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":768363,"sim:weight":0.199151,"sim:AssociationMethod":"similarity_cosine"},{"identifier":886742,"sim:weight":0.182931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932412,"sim:weight":0.17335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12701,"sim:weight":0.173032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990979,"sim:weight":0.169223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":95137,"sim:weight":0.168478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982196,"sim:weight":0.163104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151904,"sim:weight":0.157865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":971214,"sim:weight":0.153347,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72440,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Towards a field theory for networks","bibo:abstract":"It is often claimed that Internet Traffic patterns are\n        interesting because the Internet puts few constraints on\n        sources. This leads to innovation. It also makes the study of\n        Internet traffic, what we might cal the search for the Internet\n        Erlang, very difficult. At the same time, traffic control\n        (congestion control) and engineering are both hot topics.\n        \n        What if “flash crowds” (a.k.a. slashdot), cascades, epidemics\n        and so on are the norm? What if the trend continues for network\n        link capacity to become flatter, with more equal capacity in the\n        access and core, or even more capacity in the access than the\n        core (as in the early 1980s with 10Mbps LANs versus Kbps links\n        in the ARPANET)? How could we cope?\n        \n        This is a paper about the use of field equations (e.g.\n        gravitational, electrical, magnetic, strong and weak atomic and\n        so forth) as a future model for managing network traffic. We\n        believe that in the future, one could move from this model to a\n        very general prescriptive technique for designing network\n        control on different timescales, including traffic engineering\n        and the set of admission and congestion control laws. We also\n        speculate about the use of the same idea in wireless networks.","bibo:AuthorList":["Crowcroft, Jon"],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102041,"sim:weight":0.835622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929856,"sim:weight":0.820181,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997616,"sim:weight":0.764672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":30600,"sim:weight":0.665752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933921,"sim:weight":0.643953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103391,"sim:weight":0.601843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997621,"sim:weight":0.544495,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85152,"sim:weight":0.543608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71984,"sim:weight":0.533005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71976,"sim:weight":0.500935,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98509,"sim:weight":0.499655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71982,"sim:weight":0.498471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98508,"sim:weight":0.497336,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71980,"sim:weight":0.473734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55960,"sim:weight":0.463423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71986,"sim:weight":0.447769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930897,"sim:weight":0.440247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49420,"sim:weight":0.439961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998226,"sim:weight":0.352982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1105452,"sim:weight":0.321367,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72442,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Xen 2002","bibo:abstract":"This report describes the design of Xen, the hypervisor\n        developed as part of the XenoServer wide-area computing project.\n        Xen enables the hardware resources of a machine to be\n        virtualized and dynamically partitioned such as to allow\n        multiple different ‘guest’ operating system images to be run\n        simultaneously.\n        \n        Virtualizing the machine in this manner provides flexibility,\n        allowing different users to choose their preferred operating\n        system (Windows, Linux, NetBSD), and also enables use of the\n        platform as a testbed for operating systems research.\n        Furthermore, Xen provides secure partitioning between these\n        ‘domains’, and enables better resource accounting and QoS\n        isolation than can be achieved within a conventional operating\n        system. We show these benefits can be achieved at negligible\n        performance cost.\n        \n        We outline the design of Xen’s main sub-systems, and the\n        interface exported to guest operating systems. Initial\n        performance results are presented for our most mature guest\n        operating system port, Linux 2.4. This report covers the initial\n        design of Xen, leading up to our first public release which we\n        plan to make available for download in April 2003. Further\n        reports will update the design as our work progresses and\n        present the implementation in more detail.","bibo:AuthorList":["Barham, Paul R.","Dragovic, Boris","Fraser, Keir A.","Hand, Steven M.","Harris, Timothy L.","Ho, Alex C.","Kotsovinos, Evangelos","Madhavapeddy, Anil V.S.","Neugebauer, Rolf","Pratt, Ian A.","Warfield, Andrew K."],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.336738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.282872,"sim:AssociationMethod":"similarity_cosine"},{"identifier":717996,"sim:weight":0.281132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.278183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.262844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88894,"sim:weight":0.247395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":888213,"sim:weight":0.231719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100270,"sim:weight":0.226534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.226294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.193976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931552,"sim:weight":0.193225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931598,"sim:weight":0.189598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.186098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51538,"sim:weight":0.18118,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707868,"sim:weight":0.172683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.169337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58342,"sim:weight":0.154705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47237,"sim:weight":0.149377,"sim:AssociationMethod":"similarity_cosine"},{"identifier":989154,"sim:weight":0.148756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.148401,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72443,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Xenoserver computing infrastructure","bibo:abstract":"The XenoServer project will build a public infrastructure for\n        wide-area distributed computing. We envisage a world in which\n        XenoServer execution platforms will be scattered across the\n        globe and available for any member of the public to submit code\n        for execution. Crucially, the code’s sponsor will be billed for\n        all the resources used or reserved during its execution. This\n        will encourage load balancing, limit congestion, and make the\n        platform self-financing.\n        \n        Such a global infrastructure is essential to address the\n        fundamental problem of communication latency. By enabling\n        principals to run programs at points throughout the network they\n        can ensure that their code executes close to the entities with\n        which it interacts. As well as reducing latency this can be used\n        to avoid network bottlenecks, to reduce long-haul network\n        charges and to provide a network presence for\n        transiently-connected mobile devices.\n        \n        This project will build and deploy a global XenoServer test-bed\n        and make it available to authenticated external users; initially\n        members of the scientific community and ultimately of the\n        general public. In this environment accurate resource accounting\n        and pricing is critical – whether in an actual currency or one\n        that is fictitious. As with our existing work on OS resource\n        management, pricing provides the feedback necessary for\n        applications that can adapt, and prevents over-use by\n        applications that cannot.","bibo:AuthorList":["Fraser, Keir A.","Hand, Steven M.","Harris, Timothy L.","Leslie, Ian M.","Pratt, Ian A."],"dc:date":"2003-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931434,"sim:weight":0.465863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.455319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.429817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99366,"sim:weight":0.301663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.290201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.289547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.271372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.265909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43088,"sim:weight":0.253362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.247896,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72445,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The relative consistency of the axiom of choice —\n        mechanized using Isabelle/ZF","bibo:abstract":"The proof of the relative consistency of the axiom of choice has\n        been mechanized using Isabelle/ZF. The proof builds upon a\n        previous mechanization of the reflection theorem. The heavy\n        reliance on metatheory in the original proof makes the\n        formalization unusually long, and not entirely satisfactory: two\n        parts of the proof do not fit together. It seems impossible to\n        solve these problems without formalizing the metatheory.\n        However, the present development follows a standard textbook,\n        Kunen’s “Set Theory”, and could support the formalization of\n        further material from that book. It also serves as an example of\n        what to expect when deep mathematics is formalized.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"2002-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":800014,"sim:weight":0.342837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.332943,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.32188,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43028,"sim:weight":0.312531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.311332,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.306544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.285733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.284686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.27698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394216,"sim:weight":0.256154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040424,"sim:weight":0.255987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.250276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85002,"sim:weight":0.243203,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276302,"sim:weight":0.194554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800013,"sim:weight":0.187722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2040593,"sim:weight":0.184817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84891,"sim:weight":0.179419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279134,"sim:weight":0.171546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.159983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.159497,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72447,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Computer security – a layperson’s guide, from the bottom\n        up","bibo:abstract":"Computer security as a technical matter is complex, and opaque\n        for those who are not themselves computer professionals but who\n        encounter, or are ultimately responsible for, computer systems.\n        This paper presents the essentials of computer security in\n        non-technical terms, with the aim of helping people affected by\n        computer systems to understand what security is about and to\n        withstand the blinding with science mantras that too often\n        obscure the real issues.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"2002-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":99088,"sim:weight":0.463417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":716600,"sim:weight":0.438021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.425851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.42303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96261,"sim:weight":0.418116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352163,"sim:weight":0.416343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68254,"sim:weight":0.41137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.407835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46605,"sim:weight":0.40632,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929812,"sim:weight":0.394144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186346,"sim:weight":0.369807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930821,"sim:weight":0.311138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187618,"sim:weight":0.3021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2734404,"sim:weight":0.298848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":222380,"sim:weight":0.278032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4159565,"sim:weight":0.25698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23990,"sim:weight":0.169871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931822,"sim:weight":0.157024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43763,"sim:weight":0.156542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187654,"sim:weight":0.146625,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72448,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Two remarks on public key cryptology","bibo:abstract":"In some talks I gave in 1997-98, I put forward two observations\n        on public-key cryptology, concerning forward-secure signatures\n        and compatible weak keys. I did not publish a paper on either of\n        them as they appeared to be rather minor footnotes to public key\n        cryptology. But the work has occasionally been cited, and I’ve\n        been asked to write a permanent record.","bibo:AuthorList":["Anderson, Ross"],"dc:date":"2002-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":25904,"sim:weight":0.434854,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.304164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.300468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.265147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.25685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278118,"sim:weight":0.145988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187705,"sim:weight":0.14532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48318,"sim:weight":0.107734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1914779,"sim:weight":0.100109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.0952417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23275,"sim:weight":0.0914797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":60666,"sim:weight":0.0895966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43748,"sim:weight":0.0891204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55108,"sim:weight":0.0890204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":66883,"sim:weight":0.0884455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187439,"sim:weight":0.0881066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48272,"sim:weight":0.0878545,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4156224,"sim:weight":0.086716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108885,"sim:weight":0.0866355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98747,"sim:weight":0.0836429,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72450,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Formal verification of the ARM6\n        micro-architecture","bibo:abstract":"This report describes the formal verification of the ARM6\n        micro-architecture using the HOL theorem prover. The correctness\n        of the microprocessor design compares the micro-architecture\n        with an abstract, target instruction set semantics. Data and\n        temporal abstraction maps are used to formally relate the state\n        spaces and to capture the timing behaviour of the processor. The\n        verification is carried out in HOL and one-step theorems are\n        used to provide the framework for the proof of correctness. This\n        report also describes the formal specification of the ARM6’s\n        three stage pipelined micro-architecture.","bibo:AuthorList":["Fox, Anthony"],"dc:date":"2002-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.375538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057719,"sim:weight":0.348007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":950185,"sim:weight":0.303946,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512117,"sim:weight":0.278566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.266176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.265955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.262084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.26145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.226223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.223606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.21543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.214598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.195292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.189406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.173603,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.173515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.170005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12727,"sim:weight":0.168806,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.164879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932674,"sim:weight":0.163352,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72452,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Semantic optimization of OQL queries","bibo:abstract":"This work explores all the phases of developing a query\n        processor for OQL, the Object Query Language proposed by the\n        Object Data Management Group (ODMG 3.0). There has been a lot of\n        research on the execution of relational queries and their\n        optimization using syntactic or semantic transformations.\n        However, there is no context that has integrated and tested all\n        the phases of processing an object query language, including the\n        use of semantic optimization heuristics. This research is\n        motivated by the need for query execution tools that combine two\n        valuable properties: i) the expressive power to encompass all\n        the features of the object-oriented paradigm and ii) the\n        flexibility to benefit from the experience gained with\n        relational systems, such as the use of semantic knowledge to\n        speed up query execution.\n        \n        The contribution of this work is twofold. First, it establishes\n        a rigorous basis for OQL by defining a type inference model for\n        OQL queries and proposing a complete framework for their\n        translation into calculus and algebraic representations. Second,\n        in order to enhance query execution it provides algorithms for\n        applying two semantic optimization heuristics: constraint\n        introduction and constraint elimination techniques. By taking\n        into consideration a set of association rules with exceptions,\n        it is possible to add or remove predicates from an OQL query,\n        thus transforming it to a more efficient form.\n        \n        We have implemented this framework, which enables us to measure\n        the benefits and the cost of exploiting semantic knowledge\n        during query execution. The experiments showed significant\n        benefits, especially in the application of the constraint\n        introduction technique. In contexts where queries are optimized\n        once and are then executed repeatedly, we can ignore the cost of\n        optimization, and it is always worth carrying out the proposed\n        transformation. In the context of adhoc queries the cost of the\n        optimization becomes an important consideration. We have\n        developed heuristics to estimate the cost as well as the\n        benefits of optimization. The optimizer will carry out a\n        semantic transformation only when the overhead is less than the\n        expected benefit. Thus transformations are performed safely even\n        with adhoc queries. The framework can often speed up the\n        execution of an OQL query to a considerable extent.","bibo:AuthorList":["Trigoni, Agathoniki"],"dc:date":"2002-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8999162,"sim:weight":0.451085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.37135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116788,"sim:weight":0.345478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.336912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.317858,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930751,"sim:weight":0.315544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.314453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.311354,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.30921,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43147,"sim:weight":0.294996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.294414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20460,"sim:weight":0.27392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647361,"sim:weight":0.261366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146176,"sim:weight":0.251166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":7344,"sim:weight":0.248199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.247702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003846,"sim:weight":0.227865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":281289,"sim:weight":0.22701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19738,"sim:weight":0.223862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934682,"sim:weight":0.213084,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72454,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Depth perception in computer graphics","bibo:abstract":"With advances in computing and visual display technology, the\n        interface between man and machine has become increasingly\n        complex. The usability of a modern interactive system depends on\n        the design of the visual display. This dissertation aims to\n        improve the design process by examining the relationship between\n        human perception of depth and three-dimensional\n        computer-generated imagery (3D CGI).\n        \n        Depth is perceived when the human visual system combines various\n        different sources of information about a scene. In Computer\n        Graphics, linear perspective is a common depth cue, and systems\n        utilising binocular disparity cues are of increasing interest.\n        When these cues are inaccurately and inconsistently presented,\n        the effectiveness of a display will be limited. Images generated\n        with computers are sampled, meaning they are discrete in both\n        time and space. This thesis describes the sampling artefacts\n        that occur in 3D CGI and their effects on the perception of\n        depth. Traditionally, sampling artefacts are treated as a Signal\n        Processing problem. The approach here is to evaluate artefacts\n        using Human Factors and Ergonomics methodology; sampling\n        artefacts are assessed via performance on relevant visual tasks.\n        \n        A series of formal and informal experiments were performed on\n        human subjects to evaluate the effects of spatial and temporal\n        sampling on the presentation of depth in CGI. In static images\n        with perspective information, the relative size of an object can\n        be inconsistently presented across depth. This inconsistency\n        prevented subjects from making accurate relative depth\n        judgements. In moving images, these distortions were most\n        visible when the object was moving slowly, pixel size was large,\n        the object was located close to the line of sight and/or the\n        object was located a large virtual distance from the viewer.\n        When stereo images are presented with perspective cues, the\n        sampling artefacts found in each cue interact. Inconsistencies\n        in both size and disparity can occur as the result of spatial\n        and temporal sampling. As a result, disparity can vary\n        inconsistently across an object. Subjects judged relative depth\n        less accurately when these inconsistencies were present. An\n        experiment demonstrated that stereo cues dominated in conflict\n        situations for static images. In moving imagery, the number of\n        samples in stereo cues is limited. Perspective information\n        dominated the perception of depth for unambiguous (i.e.,\n        constant in direction and velocity) movement.\n        \n        Based on the experimental results, a novel method was developed\n        that ensures the size, shape and disparity of an object are\n        consistent as it moves in depth. This algorithm manipulates the\n        edges of an object (at the expense of positional accuracy) to\n        enforce consistent size, shape and disparity. In a\n        time-to-contact task using only stereo and perspective depth\n        cues, velocity was judged more accurately using this method. A\n        second method manipulated the location and orientation of the\n        viewpoint to maximise the number of samples of perspective and\n        stereo depth in a scene. This algorithm was tested in a\n        simulated air traffic control task. The experiment demonstrated\n        that knowledge about where the viewpoint is located dominates\n        any benefit gained in reducing sampling artefacts.\n        \n        This dissertation provides valuable information for the visual\n        display designer in the form of task-specific experimental\n        results and computationally inexpensive methods for reducing the\n        effects of sampling.","bibo:AuthorList":["Pfautz, Jonathan David"],"dc:date":"2002-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":176864,"sim:weight":0.446883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":82867,"sim:weight":0.445098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86026,"sim:weight":0.407879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929808,"sim:weight":0.405769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2734377,"sim:weight":0.376737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102678,"sim:weight":0.375584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":267078,"sim:weight":0.366655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1645660,"sim:weight":0.358135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52305,"sim:weight":0.357275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52378,"sim:weight":0.357275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52385,"sim:weight":0.349211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52286,"sim:weight":0.346096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52302,"sim:weight":0.34495,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52298,"sim:weight":0.34495,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99050,"sim:weight":0.34135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.337443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52289,"sim:weight":0.332991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52294,"sim:weight":0.332991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84542,"sim:weight":0.3207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84951,"sim:weight":0.320288,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72456,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A HOL specification of the ARM instruction set\n        architecture","bibo:abstract":"This report gives details of a HOL specification of the ARM\n        instruction set architecture. It is shown that the HOL proof\n        tool provides a suitable environment in which to model the\n        architecture. The specification is used to execute fragments of\n        ARM code generated by an assembler. The specification is based\n        primarily around the third version of the ARM architecture, and\n        the intent is to provide a target semantics for future\n        microprocessor verifications.","bibo:AuthorList":["Fox, Anthony C.J."],"dc:date":"2001-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43115,"sim:weight":0.234661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512117,"sim:weight":0.210285,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.198008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.18607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826909,"sim:weight":0.175706,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57391,"sim:weight":0.165621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934773,"sim:weight":0.158959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707885,"sim:weight":0.150297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98066,"sim:weight":0.147661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.14292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.13645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.134602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.132331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.127822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513188,"sim:weight":0.126713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.126195,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.120653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826876,"sim:weight":0.119602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.119235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.117304,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72458,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On the support of recursive subdivision","bibo:abstract":"We study the support of subdivision schemes, that is, the area\n        of the subdivision surface that will be affected by the\n        displacement of a single control point. Our main results cover\n        the regular case, where the mesh induces a regular Euclidean\n        tessellation of the parameter space. If n is the ratio of\n        similarity between the tessellation at step k and step k−1 of\n        the subdivision, we show that this number determines if the\n        support is polygonal or fractal. In particular if n\u003d2, as it is\n        in the most schemes, the support is a polygon whose vertices can\n        be easily determined. If n is not equal to two as, for example,\n        in the square root of three scheme, the support is usually\n        fractal and on its boundary we can identify sets like the\n        classic ternary Cantor set.","bibo:AuthorList":["Ivrissimtzis, I.P.","Sabin, M.A.","Dodgson, N.A."],"dc:date":"2002-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":540691,"sim:weight":0.434993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1496193,"sim:weight":0.355127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18180,"sim:weight":0.347289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382821,"sim:weight":0.339261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.299065,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.284842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.280769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":29460,"sim:weight":0.269826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98638,"sim:weight":0.267509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":835300,"sim:weight":0.266573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":29536,"sim:weight":0.265709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352776,"sim:weight":0.259644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1633896,"sim:weight":0.251924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":97547,"sim:weight":0.247982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1443029,"sim:weight":0.241196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2768401,"sim:weight":0.236908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000332,"sim:weight":0.228303,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.226929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.223523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269538,"sim:weight":0.220024,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72460,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Evaluating similarity-based visualisations as interfaces\n        for image browsing","bibo:abstract":"Large collections of digital images are becoming more and more\n        common, and the users of these collections need computer-based\n        systems to help them find the images they require. Digital\n        images are easy to shrink to thumbnail size, allowing a large\n        number of them to be presented to the user simultaneously.\n        Generally, current image browsing interfaces display thumbnails\n        in a two-dimensional grid, in some default order, and there has\n        been little exploration of possible alternatives to this model.\n        \n        With textual document collections, information visualisation\n        techniques have been used to produce representations where the\n        documents appear to be clustered according to their mutual\n        similarity, which is based on the words they have in common. The\n        same techniques can be applied to images, to arrange a set of\n        thumbnails according to a defined measure of similarity. In many\n        collections, the images are manually annotated with descriptive\n        text, allowing their similarity to be measured in an analogous\n        way to textual documents. Alternatively, research in\n        content-based image retrieval has made it possible to measure\n        similarity based on low-level visual features, such as colour.\n        \n        The primary goal of this research was to investigate the\n        usefulness of such similarity-based visualisations as interfaces\n        for image browsing. We concentrated on visual similarity,\n        because it is applicable to any image collection, regardless of\n        the availability of annotations. Initially, we used conventional\n        information retrieval evaluation methods to compare the relative\n        performance of a number of different visual similarity measures,\n        both for retrieval and for creating visualisations.\n        \n        Thereafter, our approach to evaluation was influenced more by\n        human-computer interaction: we carried out a series of user\n        experiments where arrangements based on visual similarity were\n        compared to random arrangements, for different image browsing\n        tasks. These included finding a given target image, finding a\n        group of images matching a generic requirement, and choosing\n        subjectively suitable images for a particular purpose (from a\n        shortlisted set). As expected, we found that similarity-based\n        arrangements are generally more helpful than random\n        arrangements, especially when the user already has some idea of\n        the type of image she is looking for.\n        \n        Images are used in many different application domains; the ones\n        we chose to study were stock photography and personal\n        photography. We investigated the organisation and browsing of\n        personal photographs in some depth, because of the inevitable\n        future growth in usage of digital cameras, and a lack of\n        previous research in this area.","bibo:AuthorList":["Rodden, Kerry"],"dc:date":"2002-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":18898,"sim:weight":0.549821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89006,"sim:weight":0.534114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43063,"sim:weight":0.529203,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53053,"sim:weight":0.526013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933343,"sim:weight":0.524395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51053,"sim:weight":0.512659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826772,"sim:weight":0.50971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18327,"sim:weight":0.509399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101200,"sim:weight":0.507131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5193110,"sim:weight":0.504797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105409,"sim:weight":0.501964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68349,"sim:weight":0.500297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50074,"sim:weight":0.496552,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394018,"sim:weight":0.494996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51203,"sim:weight":0.494087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.492013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269952,"sim:weight":0.488236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930472,"sim:weight":0.484444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55646,"sim:weight":0.482683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51173,"sim:weight":0.480949,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72463,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A generative classification of mesh refinement rules\n        with lattice transformations","bibo:abstract":"We give a classification of the subdivision refinement rules\n        using sequences of similar lattices. Our work expands and\n        unifies recent results in the classification of primal\n        triangular subdivision [Alexa, 2001], and results on the\n        refinement of quadrilateral lattices [Sloan, 1994, 1989]. In the\n        examples we concentrate on the cases with low ratio of\n        similarity and find new univariate and bivariate refinement\n        rules with the lowest possible such ratio, showing that this\n        very low ratio usually comes at the expense of symmetry.","bibo:AuthorList":["Ivrissimtzis, I.P.","Dodgson, N.A.","Sabin, M.A."],"dc:date":"2002-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":55880,"sim:weight":0.292199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55875,"sim:weight":0.291761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381717,"sim:weight":0.279562,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1496193,"sim:weight":0.271646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382821,"sim:weight":0.257735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934278,"sim:weight":0.254712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2800762,"sim:weight":0.244696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334869,"sim:weight":0.242643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98325,"sim:weight":0.237081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.235706,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18032,"sim:weight":0.221593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.209405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98269,"sim:weight":0.208197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.206248,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51966,"sim:weight":0.205869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98638,"sim:weight":0.201428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":270130,"sim:weight":0.20074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334941,"sim:weight":0.192911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827048,"sim:weight":0.192191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":337836,"sim:weight":0.164926,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72464,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Different applications of two-dimensional potential\n        fields for volume modeling","bibo:abstract":"Current methods for building models using implicit volume\n        techniques present problems defining accurate and controllable\n        blend shapes between implicit primitives. We present new methods\n        to extend the freedom and controllability of implicit volume\n        modeling. The main idea is to use a free-form curve to define\n        the profile of the blend region between implicit primitives.\n        \n        The use of a free-form implicit curve, controlled point-by-point\n        in the Euclidean user space, allows us to group boolean\n        composition operators with sharp transitions or smooth free-form\n        transitions in a single modeling metaphor. This idea is\n        generalized for the creation, sculpting and manipulation of\n        volume objects, while providing the user with simplicity,\n        controllability and freedom in volume modeling.\n        \n        Bounded volume objects, known as “Soft objects” or “Metaballs”,\n        have specific properties. We also present binary Boolean\n        composition operators that gives more control on the form of the\n        transition when these objects are blended.\n        \n        To finish, we show how our free-form implicit curves can be used\n        to build implicit sweep objects.","bibo:AuthorList":["Barthe, L.","Dodgson, N.A.","Sabin, M.A.","Wyvill, B.","Gaildrat, V."],"dc:date":"2002-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":68122,"sim:weight":0.261694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68067,"sim:weight":0.261525,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.247301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.24265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.21951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":748618,"sim:weight":0.177304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.17131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43156,"sim:weight":0.171294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43589,"sim:weight":0.167851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.163513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":269940,"sim:weight":0.162784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43117,"sim:weight":0.160945,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.157442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86557,"sim:weight":0.155713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.154217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":338258,"sim:weight":0.151156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54103,"sim:weight":0.143424,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.138011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86966,"sim:weight":0.137363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.135589,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72467,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The use of computer graphics rendering software in the\n        analysis of a novel autostereoscopic display design","bibo:abstract":"Computer graphics ‘ray tracing’ software has been used in the\n        design and evaluation of a new autostereoscopic 3D display. This\n        software complements the conventional optical design software\n        and provides a cost-effective method of simulating what is\n        actually seen by a viewer of the display. It may prove a useful\n        tool in similar design problems.","bibo:AuthorList":["Dodgson, N.A.","Moore, J.R."],"dc:date":"2002-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":108083,"sim:weight":0.296053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.281071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":66639,"sim:weight":0.27219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50644,"sim:weight":0.257201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.228547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187477,"sim:weight":0.226104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933666,"sim:weight":0.217675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18107,"sim:weight":0.216694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899505,"sim:weight":0.213166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86026,"sim:weight":0.204795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51966,"sim:weight":0.199131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70096,"sim:weight":0.194711,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176864,"sim:weight":0.194118,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.188412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43093,"sim:weight":0.188407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.186136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98523,"sim:weight":0.183149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.179467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.178021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998620,"sim:weight":0.174009,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72468,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Towards a ternary interpolating subdivision scheme for\n        the triangular mesh","bibo:abstract":"We derive a ternary interpolating subdivision scheme which works\n        on the regular triangular mesh. It has quadratic precision and\n        fulfils the standard necessary conditions for C2 continuity.\n        Further analysis is required to determine its actual continuity\n        class and to define its behaviour around extraordinary points.","bibo:AuthorList":["Dodgson, N.A.","Sabin, M.A.","Barthe, L.","Hassan, M.F."],"dc:date":"2002-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":540691,"sim:weight":0.492809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387305,"sim:weight":0.247513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44411,"sim:weight":0.241094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334941,"sim:weight":0.222739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98585,"sim:weight":0.217148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99195,"sim:weight":0.217142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15287,"sim:weight":0.205843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352776,"sim:weight":0.202684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271192,"sim:weight":0.193758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43138,"sim:weight":0.180378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.179506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.177982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653030,"sim:weight":0.17557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101364,"sim:weight":0.172124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.171103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.167459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":270130,"sim:weight":0.167325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25779,"sim:weight":0.164894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43175,"sim:weight":0.159247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934481,"sim:weight":0.157738,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72470,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Escritoire: A personal projected display for\n        interacting with documents","bibo:abstract":"The Escritoire is a horizontal desk interface that uses two\n        projectors to create a foveal display. Items such as images,\n        documents, and the interactive displays of other conventional\n        computers, can be manipulated on the desk using pens in both\n        hands. The periphery covers the desk, providing ample space for\n        laying out the objects relevant to a task, allowing them to be\n        identified at a glance and exploiting human spatial memory for\n        rapid retrieval. The fovea is a high resolution focal area that\n        can be used to view any item in detail. The projected images are\n        continuously warped with commodity graphics hardware before\n        display, to reverse the effects of misaligned projectors and\n        ensure registration between fovea and periphery. The software is\n        divided into a hardware-specific client driving the display, and\n        a platform-independent server imposing control.","bibo:AuthorList":["Ashdown, Mark","Robinson, Peter"],"dc:date":"2002-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931624,"sim:weight":0.373627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.359468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70123,"sim:weight":0.356418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.346202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108083,"sim:weight":0.261422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176864,"sim:weight":0.213308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86026,"sim:weight":0.198593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.182227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997910,"sim:weight":0.181855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.174509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151982,"sim:weight":0.172885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.169756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653040,"sim:weight":0.169081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933590,"sim:weight":0.167937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631613,"sim:weight":0.167329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.167057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.166512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59326,"sim:weight":0.160736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":11127,"sim:weight":0.159828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43589,"sim:weight":0.159249,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72472,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Parallel systems in symbolic and algebraic\n        computation","bibo:abstract":"This report describes techniques to exploit distributed memory\n        massively parallel supercomputers to satisfy the peak memory\n        demands of some very large computer algebra problems (over 10\n        GB). The memory balancing is based on a randomized hashing\n        algorithm for dynamic data distribution. Fine grained\n        partitioning is used to provide flexibility in the memory\n        allocation, at the cost of higher communication cost. The main\n        problem areas are multivariate polynomial algebra, and linear\n        algebra with polynomial matrices. The system was implemented and\n        tested on a Hitachi SR2201 supercomputer.","bibo:AuthorList":["Matooane, Mantsika"],"dc:date":"2002-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":50840,"sim:weight":0.50615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.502751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105390,"sim:weight":0.478272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933331,"sim:weight":0.477082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008746,"sim:weight":0.463802,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4873811,"sim:weight":0.462774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9033132,"sim:weight":0.427108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057140,"sim:weight":0.417496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":13017,"sim:weight":0.415088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5491051,"sim:weight":0.41017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617567,"sim:weight":0.404587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80584,"sim:weight":0.403674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003673,"sim:weight":0.394528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008800,"sim:weight":0.386441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998374,"sim:weight":0.378564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.378245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81556,"sim:weight":0.370237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998850,"sim:weight":0.367475,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934289,"sim:weight":0.362982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929808,"sim:weight":0.362814,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72474,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Low temperature data remanence in static RAM","bibo:abstract":"Security processors typically store secret key material in\n        static RAM, from which power is removed if the device is\n        tampered with. It is commonly believed that, at temperatures\n        below −20 °C, the contents of SRAM can be ‘frozen’; therefore,\n        many devices treat temperatures below this threshold as\n        tampering events. We have done some experiments to establish the\n        temperature dependency of data retention time in modern SRAM\n        devices. Our experiments show that the conventional wisdom no\n        longer holds.","bibo:AuthorList":["Skorobogatov, Sergei"],"dc:date":"2002-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":916736,"sim:weight":0.421401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1051595,"sim:weight":0.372754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123645,"sim:weight":0.372006,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116885,"sim:weight":0.359093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116418,"sim:weight":0.343766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123648,"sim:weight":0.325483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765192,"sim:weight":0.317154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765761,"sim:weight":0.309909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919896,"sim:weight":0.293171,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918848,"sim:weight":0.259588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68067,"sim:weight":0.255649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972934,"sim:weight":0.251216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.241837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.23313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.217579,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960274,"sim:weight":0.20536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26371,"sim:weight":0.200587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512741,"sim:weight":0.193828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101326,"sim:weight":0.185672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710106,"sim:weight":0.168926,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72476,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Designs, disputes and strategies","bibo:abstract":"Important progresses in logic are leading to interactive and\n        dynamical models. Geometry of Interaction and Games Semantics\n        are two major examples. Ludics, initiated by Girard, is a\n        further step in this direction.\n        \n        The objects of Ludics which correspond to proofs are designs. A\n        design can be described as the skeleton of a sequent calculus\n        derivation, where we do not manipulate formulas, but their\n        location (the address where the formula is stored). To study the\n        traces of the interactions between designs as primitive leads to\n        an alternative presentation, which is to describe a design as\n        the set of its possible interactions, called disputes. This\n        presentation has the advantage to make precise the\n        correspondence between the basic notions of Ludics (designs,\n        disputes and chronicles) and the basic notions of Games\n        semantics (strategies, plays and views).","bibo:AuthorList":["Faggian, Claudia","Hyland, Martin"],"dc:date":"2002-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98537,"sim:weight":0.274938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.240797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2424328,"sim:weight":0.208653,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934447,"sim:weight":0.201134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757881,"sim:weight":0.192678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.192658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.18535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.181281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.180729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.179681,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.176805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.176263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.175143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.174773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.17227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23991,"sim:weight":0.171573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.170351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43062,"sim:weight":0.166654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.164895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86557,"sim:weight":0.164484,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72478,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Resource control in network elements","bibo:abstract":"Increasingly, substantial data path processing is happening on\n        devices within the network. At or near the edges of the network,\n        data rates are low enough that commodity workstations may be\n        used to process packet flows. However, the operating systems\n        such machines use are not suited to the needs of data-driven\n        processing. This dissertation shows why this is a problem, how\n        current work fails to address it, and proposes a new approach.\n        \n        The principal problem is that crosstalk occurs in the processing\n        of different data flows when they contend for a shared resource\n        and their accesses to this resource are not scheduled\n        appropriately; typically the shared resource is located in a\n        server process. Previous work on vertically structured operating\n        systems reduces the need for such shared servers by making\n        applications responsible for performing as much of their own\n        processing as possible, protecting and multiplexing devices at\n        the lowest level consistent with allowing untrusted user access.\n        \n        However, shared servers remain on the data path in two\n        circumstances: firstly, dumb network adaptors need non-trivial\n        processing to allow safe access by untrusted user applications.\n        Secondly, shared servers are needed wherever trusted code must\n        be executed for security reasons.\n        \n        This dissertation presents the design and implementation of\n        Expert, an operating system which avoids crosstalk by removing\n        the need for such servers.\n        \n        This dissertation describes how Expert handles dumb network\n        adaptors to enable applications to access them via a low-level\n        interface which is cheap to implement in the kernel, and retains\n        application responsibility for the work involved in running a\n        network stack.\n        \n        Expert further reduces the need for application-level shared\n        servers by introducing paths which can trap into protected\n        modules of code to perform actions which would otherwise have to\n        be implemented within a server.\n        \n        Expert allows traditional compute-bound tasks to be freely mixed\n        with these I/O-driven paths in a single system, and schedules\n        them in a unified manner. This allows the processing performed\n        in a network element to be resource controlled, both for\n        background processing tasks such as statistics gathering, and\n        for data path processing such as encryption.","bibo:AuthorList":["Donnelly, Austin"],"dc:date":"2002-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998433,"sim:weight":0.459843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.454117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.453137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931668,"sim:weight":0.449813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931552,"sim:weight":0.449393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931598,"sim:weight":0.445382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.439076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.428026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.426756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.424416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.417692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.413909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70207,"sim:weight":0.408882,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.407306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69318,"sim:weight":0.406971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.406808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71065,"sim:weight":0.403452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.403317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708264,"sim:weight":0.402173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.398542,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72480,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The acquisition of a unification-based generalised\n        categorial grammar","bibo:abstract":"The purpose of this work is to investigate the process of\n        grammatical acquisition from data. In order to do that, a\n        computational learning system is used, composed of a Universal\n        Grammar with associated parameters, and a learning algorithm,\n        following the Principles and Parameters Theory. The Universal\n        Grammar is implemented as a Unification-Based Generalised\n        Categorial Grammar, embedded in a default inheritance network of\n        lexical types. The learning algorithm receives input from a\n        corpus of spontaneous child-directed transcribed speech\n        annotated with logical forms and sets the parameters based on\n        this input. This framework is used as a basis to investigate\n        several aspects of language acquisition. In this thesis I\n        concentrate on the acquisition of subcategorisation frames and\n        word order information, from data. The data to which the learner\n        is exposed can be noisy and ambiguous, and I investigate how\n        these factors affect the learning process. The results obtained\n        show a robust learner converging towards the target grammar\n        given the input data available. They also show how the amount of\n        noise present in the input data affects the speed of convergence\n        of the learner towards the target grammar. Future work is\n        suggested for investigating the developmental stages of language\n        acquisition as predicted by the learning model, with a thorough\n        comparison with the developmental stages of a child. This is\n        primarily a cognitive computational model of language learning\n        that can be used to investigate and gain a better understanding\n        of human language acquisition, and can potentially be relevant\n        to the development of more adaptive NLP technology.","bibo:AuthorList":["Villavicencio, Aline"],"dc:date":"2002-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":104744,"sim:weight":0.513214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47228,"sim:weight":0.482033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73436,"sim:weight":0.452018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73259,"sim:weight":0.445239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826744,"sim:weight":0.443415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19400,"sim:weight":0.431459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21797,"sim:weight":0.430003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74217,"sim:weight":0.403526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18877,"sim:weight":0.399516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897516,"sim:weight":0.381713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85331,"sim:weight":0.381005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74313,"sim:weight":0.368657,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9682,"sim:weight":0.354077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18454,"sim:weight":0.353844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70572,"sim:weight":0.346108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19460,"sim:weight":0.340855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2979,"sim:weight":0.340137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999919,"sim:weight":0.338666,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20908,"sim:weight":0.338343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73717,"sim:weight":0.338328,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72482,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Internet traffic engineering","bibo:abstract":"Due to the dramatically increasing popularity of the services\n        provided over the public Internet, problems with current\n        mechanisms for control and management of the Internet are\n        becoming apparent. In particular, it is increasingly clear that\n        the Internet and other networks built on the Internet protocol\n        suite do not provide sufficient support for the efficient\n        control and management of traffic, i.e. for Traffic Engineering.\n        \n        This dissertation addresses the problem of traffic engineering\n        in the Internet. It argues that traffic management techniques\n        should be applied at multiple timescales, and not just at data\n        timescales as is currently the case. It presents and evaluates\n        mechanisms for traffic engineering in the Internet at two\n        further timescales: flow admission control and control of\n        per-flow packet marking, enabling control timescale traffic\n        engineering; and support for load based inter-domain routeing in\n        the Internet, enabling management timescale traffic engineering.\n        \n        This dissertation also discusses suitable policies for the\n        application of the proposed mechanisms. It argues that the\n        proposed mechanisms are able to support a wide range of policies\n        useful to both users and operators. Finally, in a network of the\n        size of the Internet consideration must also be given to the\n        deployment of proposed solutions. Consequently, arguments for\n        and against the deployment of these mechanisms are presented and\n        the conclusion drawn that there are a number of feasible paths\n        toward deployment.\n        \n        The work presented argues the following: firstly, it is possible\n        to implement mechanisms within the Internet framework that\n        enable traffic engineering to be carried out by operators;\n        secondly, that applying these mechanisms with suitable policies\n        can ease the management problems faced by operators and at the\n        same time improve the efficiency with which the network can be\n        run; thirdly, that these improvements can correspond to\n        increased network performance as viewed by the user; and\n        finally, that not only the resulting deployment but also the\n        deployment process itself are feasible.","bibo:AuthorList":["Mortier, Richard"],"dc:date":"2002-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":103079,"sim:weight":0.555587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4892681,"sim:weight":0.512101,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.500568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.499952,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102730,"sim:weight":0.499388,"sim:AssociationMethod":"similarity_cosine"},{"identifier":926796,"sim:weight":0.489329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998726,"sim:weight":0.489134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708264,"sim:weight":0.488723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102360,"sim:weight":0.486507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998728,"sim:weight":0.480109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998725,"sim:weight":0.471117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930869,"sim:weight":0.468436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26733,"sim:weight":0.467815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901800,"sim:weight":0.46205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041455,"sim:weight":0.445209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003708,"sim:weight":0.442284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88677,"sim:weight":0.441986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":826403,"sim:weight":0.435335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930413,"sim:weight":0.435125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":120725,"sim:weight":0.435069,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72484,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Verifying the SET registration protocols","bibo:abstract":"SET (Secure Electronic Transaction) is an immense e-commerce\n        protocol designed to improve the security of credit card\n        purchases. In this paper we focus on the initial bootstrapping\n        phases of SET, whose objective is the registration of customers\n        and merchants with a SET certification authority. The aim of\n        registration is twofold: getting the approval of the\n        cardholder’s or merchant’s bank, and replacing traditional\n        credit card numbers with electronic credentials that customers\n        can present to the merchant, so that their privacy is protected.\n        These registration sub-protocols present a number of challenges\n        to current formal verification methods. First, they do not\n        assume that each agent knows the public keys of the other\n        agents. Key distribution is one of the protocols’ tasks. Second,\n        SET uses complex encryption primitives (digital envelopes) which\n        introduce dependency chains: the loss of one secret key can lead\n        to potentially unlimited losses. Building upon our previous\n        work, we have been able to model and formally verify SET’s\n        registration with the inductive method in Isabelle/HOL solving\n        its challenges with very general techniques.","bibo:AuthorList":["Bella, Giampaolo","Massacci, Fabio","Paulson, Lawrence C."],"dc:date":"2002-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1082636,"sim:weight":0.339198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":904407,"sim:weight":0.294168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918854,"sim:weight":0.28584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920845,"sim:weight":0.261262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017249,"sim:weight":0.241664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.225708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116448,"sim:weight":0.215865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109103,"sim:weight":0.211881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729427,"sim:weight":0.208441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819982,"sim:weight":0.204438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":695480,"sim:weight":0.202079,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187705,"sim:weight":0.200546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96261,"sim:weight":0.195746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.192665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997742,"sim:weight":0.19197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12059,"sim:weight":0.188215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710106,"sim:weight":0.185835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.176401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082257,"sim:weight":0.174196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":221368,"sim:weight":0.173571,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72486,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Subcategorization acquisition","bibo:abstract":"Manual development of large subcategorised lexicons has proved\n        difficult because predicates change behaviour between\n        sublanguages, domains and over time. Yet access to a\n        comprehensive subcategorization lexicon is vital for successful\n        parsing capable of recovering predicate-argument relations, and\n        probabilistic parsers would greatly benefit from accurate\n        information concerning the relative likelihood of different\n        subcategorisation frames SCFs of a given predicate. Acquisition\n        of subcategorization lexicons from textual corpora has recently\n        become increasingly popular. Although this work has met with\n        some success, resulting lexicons indicate a need for greater\n        accuracy. One significant source of error lies in the\n        statistical filtering used for hypothesis selection, i.e. for\n        removing noise from automatically acquired SCFs.\n        \n        This thesis builds on earlier work in verbal subcategorization\n        acquisition, taking as a starting point the problem with\n        statistical filtering. Our investigation shows that statistical\n        filters tend to work poorly because not only is the underlying\n        distribution zipfian, but there is also very little correlation\n        between conditional distribution of SCFs specific to a verb and\n        unconditional distribution regardless of the verb. More accurate\n        back-off estimates are needed for SCF acquisition than those\n        provided by unconditional distribution.\n        \n        We explore whether more accurate estimates could be obtained by\n        basing them on linguistic verb classes. Experiments are reported\n        which show that in terms of SCF distributions, individual verbs\n        correlate more closely with syntactically similar verbs and even\n        more closely with semantically similar verbs, than with all\n        verbs in general. On the basis of this result, we suggest\n        classifying verbs according to their semantic classes and\n        obtaining back-off estimates specific to these classes.\n        \n        We propose a method for obtaining such semantically based\n        back-off estimates, and a novel approach to hypothesis selection\n        which makes use of these estimates. This approach involves\n        automatically identifying the semantic class of a predicate,\n        using subcategorization acquisition machinery to hypothesise\n        conditional SCF distribution for the predicate, smoothing the\n        conditional distribution with the back-off estimates of the\n        respective semantic verb class, and employing a simple method\n        for filtering, which uses a threshold on the estimates from\n        smoothing. Adopting Briscoe and Carroll’s (1997) system as a\n        framework, we demonstrate that this semantically-driven approach\n        to hypothesis selection can significantly improve the accuracy\n        of large-scale subcategorization acquisition.","bibo:AuthorList":["Korhonen, Anna"],"dc:date":"2002-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":19655,"sim:weight":0.399775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19460,"sim:weight":0.385509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70286,"sim:weight":0.369217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70572,"sim:weight":0.346991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15733,"sim:weight":0.343201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.326654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22376,"sim:weight":0.325436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104720,"sim:weight":0.324134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008577,"sim:weight":0.322351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19526,"sim:weight":0.320848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19949,"sim:weight":0.314144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21802,"sim:weight":0.31082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.309771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12165,"sim:weight":0.307233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4188167,"sim:weight":0.296486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85014,"sim:weight":0.294209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997738,"sim:weight":0.291899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897516,"sim:weight":0.286133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9679,"sim:weight":0.285054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18877,"sim:weight":0.279349,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72488,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The triVM intermediate language reference\n        manual","bibo:abstract":"The triVM intermediate language has been developed as part of a\n        research programme concentrating on code space optimization. The\n        primary aim in developing triVM is to provide a language that\n        removes the complexity of high-level languages, such as C or ML,\n        while maintaining sufficient detail, at as simple a level as\n        possible, to support reseach and experimentation into code size\n        optimization. The basic structure of triVM is a notional Static\n        Single Assignment-based three-address machine. A secondary aim\n        is to develop an intermediate language that supports graph-based\n        translation, using graph rewrite rules, in a textual,\n        human-readable format. Experience has shown that text-format\n        intermediate files are much easier to use for experimentation,\n        while the penalty in translating this human-readable form to the\n        internal data structures used by the software is negligible.\n        Another aim is to provide a flexible language in which features\n        and innovations can be evaluated; for example, this is one of\n        the first intermediate languages directly based on the Static\n        Single Assignment technique, and which explicitly exposes the\n        condition codes as a result of arithmetic operations. While this\n        paper is concerned solely with the description of triVM, we\n        present a brief summary of other research-orientated\n        intermediate languages.","bibo:AuthorList":["Johnson, Neil"],"dc:date":"2002-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45721,"sim:weight":0.290176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.283376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1384135,"sim:weight":0.268658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.266042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.245986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707885,"sim:weight":0.240488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930751,"sim:weight":0.233502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47026,"sim:weight":0.223047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352240,"sim:weight":0.219488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.213647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86159,"sim:weight":0.212559,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.211617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.211453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.206263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710661,"sim:weight":0.205939,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.202124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382076,"sim:weight":0.201605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.199426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43975,"sim:weight":0.195983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.195584,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72490,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Measurement-based management of network\n        resources","bibo:abstract":"Measurement-Based Estimators are able to characterise data\n        flows, enabling improvements to existing management techniques\n        and access to previously impossible management techniques. It is\n        the thesis of this dissertation that in addition to making\n        practical adaptive management schemes, measurement-based\n        estimators can be practical within current limitations of\n        resource.\n        \n        Examples of network management include the characterisation of\n        current utilisation for explicit admission control and the\n        configuration of a scheduler to divide link-capacity among\n        competing traffic classes. Without measurements, these\n        management techniques have relied upon the accurate\n        characterisation of traffic – without accurate traffic\n        characterisation, network resources may be under or over\n        utilised.\n        \n        Embracing Measurement-Based Estimation in admission control,\n        Measurement-Based Admission Control (MBAC) algorithms have\n        allowed characterisation of new traffic flows while adapting to\n        changing flow requirements. However, there have been many MBAC\n        algorithms proposed, often with no clear differentiation between\n        them. This has motivated the need for a realistic,\n        implementation-based comparison in order to identify an ideal\n        MBAC algorithm.\n        \n        This dissertation reports on an implementation-based comparison\n        of MBAC algorithms conducted using a purpose built test\n        environment. The use of an implementation-based comparison has\n        allowed the MBAC algorithms to be tested under realistic\n        conditions of traffic load and realistic limitations on memory,\n        computational resources and measurements. Alongside this\n        comparison is a decomposition of a group of MBAC algorithms,\n        illustrating the relationship among MBAC algorithm components,\n        as well as highlighting common elements among different MBAC\n        algorithms.\n        \n        The MBAC algorithm comparison reveals that, while no single\n        algorithm is ideal, the specific resource demands, such as\n        computation overheads, can dramatically impact on the MBAC\n        algorithm’s performance. Further, due to the multiple timescales\n        present in both traffic and management, the estimator of a\n        robust MBAC algorithm must base its estimate on measurements\n        made over a wide range of timescales. Finally, a reliable\n        estimator must account for the error resulting from random\n        properties of measurements.\n        \n        Further identifying that the estimator components used in MBAC\n        algorithms need not be tied to the admission control problem,\n        one of the estimators (originally constructed as part of an MBAC\n        algorithm) is used to continuously characterise resource\n        requirements for a number of classes of traffic. Continuous\n        characterisation of traffic, whether requiring similar or\n        orthogonal resources, leads to the construction and\n        demonstration of a network switch that is able to provide\n        differentiated service while being adaptive to the demands of\n        each traffic class. The dynamic allocation of resources is an\n        approach unique to a measurement-based technique that would not\n        be possible if resources were based upon static declarations of\n        requirement.","bibo:AuthorList":["Moore, Andrew William"],"dc:date":"2002-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":971770,"sim:weight":0.527125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998726,"sim:weight":0.521698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998720,"sim:weight":0.504131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998729,"sim:weight":0.487453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920217,"sim:weight":0.482546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998725,"sim:weight":0.479104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.466508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":864294,"sim:weight":0.465985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998727,"sim:weight":0.461964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":826403,"sim:weight":0.452842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930993,"sim:weight":0.449324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990908,"sim:weight":0.448931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102564,"sim:weight":0.440826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69273,"sim:weight":0.44061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103079,"sim:weight":0.437696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.43012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102360,"sim:weight":0.42524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":120725,"sim:weight":0.420418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15943,"sim:weight":0.417245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397680,"sim:weight":0.414987,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72492,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Architectures for ubiquitous systems","bibo:abstract":"Advances in digital electronics over the last decade have made\n        computers faster, cheaper and smaller. This coupled with the\n        revolution in communication technology has led to the\n        development of sophisticated networked appliances and handheld\n        devices. “Computers” are no longer boxes sitting on a desk, they\n        are all around us, embedded in every nook and corner of our\n        environment. This increasing complexity in our environment leads\n        to the desire to design a system that could allow this pervasive\n        functionality to disappear in the infrastructure, automatically\n        carrying out everyday tasks of the users.\n        \n        Such a system would enable devices embedded in the environment\n        to cooperate with one another to make a wide range of new and\n        useful applications possible, not originally conceived by the\n        manufacturer, to achieve greater functionality, flexibility and\n        utility.\n        \n        The compelling question then becomes “what software needs to be\n        embedded in these devices to enable them to participate in such\n        a ubiquitous system”? This is the question addressed by the\n        dissertation.\n        \n        Based on the experience with home automation systems, as part of\n        the AutoHAN project, the dissertation presents two compatible\n        but different architectures; one to enable dumb devices to be\n        controlled by the system and the other to enable intelligent\n        devices to control, extend and program the system.\n        \n        Control commands for dumb devices are managed using an\n        HTTP-based publish/subscribe/notify architecture; devices\n        publish their control commands to the system as XML-typed\n        discrete messages, applications discover and subscribe interest\n        in these events to send and receive control commands from these\n        devices, as typed messages, to control their behavior. The\n        architecture handles mobility and failure of devices by using\n        soft-state, redundent subscriptions and “care-of” nodes. The\n        system is programmed with event scripts that encode automation\n        rules as condition-action bindings. Finally, the use of XML and\n        HTTP allows devices to be controlled by a simple Internet\n        browser.\n        \n        While the publish/subscribe/notify defines a simple architecture\n        to enable interoperability of limited capability devices,\n        intelligent devices can afford more complexity that can be\n        utilized to support user applications and services to control,\n        manage and program the system. However, the operating system\n        embedded in these devices needs to address the heterogeneity,\n        longevity, mobility and dynamism of the system.\n        \n        The dissertation presents the architecture of an embedded\n        distributed operating system that lends itself to safe\n        context-driven adaptation. The operating system is instrumented\n        with four artifacts to address the challenges posed by a\n        ubiquitous system. 1) An XML-based directory service captures\n        and notifies the applications and services about changes in the\n        device context, as resources move, fail, leave or join the\n        system, to allow context-driven adaptation. 2) A Java-based\n        mobile agent system allows new software to be injected in the\n        system and moved and replicated with the changing\n        characteristics of the system to define a self-organizing\n        system. 3) A subscribe/notify interface allows context-specific\n        extensions to be dynamically added to the operating system to\n        enable it to efficiently interoperate in its current context\n        according to application requirements. 4) Finally, a Dispatcher\n        module serves as the context-aware system call interface for the\n        operating system; when requested to invoke a service, the\n        Dispatcher invokes the resource that best satisfies the\n        requirements given the characteristics of the system.\n        \n        Definition alone is not sufficient to prove the validity of an\n        architecture. The dissertation therefore describes a prototype\n        implementation of the operating system and presents both a\n        quantitative comparison of its performance with related systems\n        and its qualitative merit by describing new applications made\n        possible by its novel architecture.","bibo:AuthorList":["Saif, Umar"],"dc:date":"2002-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":41028,"sim:weight":0.559265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.536206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70482,"sim:weight":0.533405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70436,"sim:weight":0.533352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998504,"sim:weight":0.500043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998462,"sim:weight":0.490645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91418,"sim:weight":0.486849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69318,"sim:weight":0.484994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70312,"sim:weight":0.482297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000343,"sim:weight":0.48207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44610,"sim:weight":0.481049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70446,"sim:weight":0.48048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70184,"sim:weight":0.479296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710182,"sim:weight":0.478607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70181,"sim:weight":0.477931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.476432,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84850,"sim:weight":0.474626,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.474032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":377290,"sim:weight":0.473893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.473732,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72494,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Extending lossless image compression","bibo:abstract":"“It is my thesis that worthwhile improvements can be made to\n        lossless image compression schemes, by considering the\n        correlations between the spectral, temporal and interview\n        aspects of image data, in extension to the spatial correlations\n        that are traditionally exploited.”\n        \n        Images are an important part of today’s digital world. However,\n        due to the large quantity of data needed to represent modern\n        imagery the storage of such data can be expensive. Thus, work on\n        efficient image storage (image compression) has the potential to\n        reduce storage costs and enable new applications.\n        \n        Many image compression schemes are lossy; that is they sacrifice\n        image informationto achieve very compact storage. Although this\n        is acceptable for many applications, some environments require\n        that compression not alter the image data. This lossless image\n        compression has uses in medical, scientific and professional\n        video processing applications.\n        \n        Most of the work on lossless image compression has focused on\n        monochrome images and has made use of the spatial smoothness of\n        image data. Only recently have researchers begun to look\n        specifically at the lossless compression of colour images and\n        video. By extending compression schemes for colour images and\n        video, the storage requirements for these important classes of\n        image data can be further reduced.\n        \n        Much of the previous research into lossless colour image and\n        video compression has been exploratory. This dissertation\n        studies the problem in a structured way. Spatial, spectral and\n        temporal correlations are all considered to facilitate improved\n        compression. This has lead to a greater data reduction than many\n        existing schemes for lossless colour image and colour video\n        compression.\n        \n        Furthermore, this work has considered the application of\n        extended lossless image coding to more recent image types, such\n        as multiview imagery. Thus, systems that use multiple views of\n        the same scene to provide 3D viewing, have beenprovided with a\n        completely novel solution for the compression of multiview\n        colour video.","bibo:AuthorList":["Penrose, Andrew J."],"dc:date":"2001-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1106439,"sim:weight":0.638758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897895,"sim:weight":0.579877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116863,"sim:weight":0.524626,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2734386,"sim:weight":0.504117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44429,"sim:weight":0.471934,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933744,"sim:weight":0.451108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937452,"sim:weight":0.429456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45417,"sim:weight":0.427208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930990,"sim:weight":0.414437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999730,"sim:weight":0.390694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102813,"sim:weight":0.382805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102690,"sim:weight":0.371542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.350682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932088,"sim:weight":0.343323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998077,"sim:weight":0.334034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24116,"sim:weight":0.327589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.325964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":336058,"sim:weight":0.322395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930535,"sim:weight":0.318816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934810,"sim:weight":0.302391,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72496,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Extensible virtual machines","bibo:abstract":"Virtual machines (VMs) have enjoyed a resurgence as a way of\n        allowing the same application program to be used across a range\n        of computer systems. This flexibility comes from the abstraction\n        that the provides over the native interface of a particular\n        computer. However, this also means that the application is\n        prevented from taking the features of particular physical\n        machines into account in its implementation.\n        \n        This dissertation addresses the question of why, where and how\n        it is useful, possible and practicable to provide an application\n        with access to lower-level interfaces. It argues that many\n        aspects of implementation can be devolved safely to untrusted\n        applications and demonstrates this through a prototype which\n        allows control over run-time compilation, object placement\n        within the heap and thread scheduling. The proposed architecture\n        separates these application-specific policy implementations from\n        the application itself. This allows one application to be used\n        with different policies on different systems and also allows\n        naïve or premature optimizations to be removed.","bibo:AuthorList":["Harris, Timothy L."],"dc:date":"2001-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2709901,"sim:weight":0.49991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.480291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.473725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931782,"sim:weight":0.470172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932276,"sim:weight":0.460461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.457214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89093,"sim:weight":0.449962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930755,"sim:weight":0.429807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932044,"sim:weight":0.425569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549536,"sim:weight":0.415004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.409483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934829,"sim:weight":0.404027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.398816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.392918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1001703,"sim:weight":0.391702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91883,"sim:weight":0.384788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.375162,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389844,"sim:weight":0.37339,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1433748,"sim:weight":0.369064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933016,"sim:weight":0.362312,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72498,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Verifying the SET purchase protocols","bibo:abstract":"The Secure Electronic Transaction (SET) protocol has been\n        proposed by a consortium of credit card companies and software\n        corporations to guarantee the authenticity of e-commerce\n        transactions and the confidentiality of data. When the customer\n        makes a purchase, the SET dual signature keeps his account\n        details secret from the merchant and his choice of goods secret\n        from the bank. This paper reports verification results for the\n        purchase step of SET, using the inductive method. The credit\n        card details do remain confidential. The customer, merchant and\n        bank can confirm most details of a transaction even when some of\n        those details are kept from them. The usage of dual signatures\n        requires repetition in protocol messages, making proofs more\n        difficult but still feasible. The formal analysis has revealed a\n        significant defect. The dual signature lacks explicitness,\n        giving rise to potential vulnerabilities.","bibo:AuthorList":["Bella, Giampaolo","Massacci, Fabio","Paulson, Lawrence C."],"dc:date":"2001-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1082636,"sim:weight":0.369161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":949514,"sim:weight":0.332294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819982,"sim:weight":0.309232,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918854,"sim:weight":0.301768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":904407,"sim:weight":0.300893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729427,"sim:weight":0.298787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":938779,"sim:weight":0.289073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920845,"sim:weight":0.272972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80823,"sim:weight":0.259956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756356,"sim:weight":0.256463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69737,"sim:weight":0.245807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109103,"sim:weight":0.240478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69741,"sim:weight":0.239311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.236637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":863974,"sim:weight":0.234409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778716,"sim:weight":0.233809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017249,"sim:weight":0.220716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176865,"sim:weight":0.212194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.21206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9425337,"sim:weight":0.208546,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72500,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bigraphical reactive systems: basic theory","bibo:abstract":"A notion of bigraph is proposed as the basis for a model of\n        mobile interaction. A bigraph consists of two independent\n        structures: a topograph representing locality and a monograph\n        representing connectivity. Bigraphs are equipped with reaction\n        rules to form bigraphical reactive systems (BRSs), which include\n        versions of the π-calculus and the ambient calculus. Bigraphs\n        are shown to be a special case of a more abstract notion, wide\n        reactive systems (WRSs), not assuming any particular graphical\n        or other structure but equipped with a notion of width, which\n        expresses that agents, contexts and reactions may all be widely\n        distributed entities.\n        \n        A behavioural theory is established for WRSs using the\n        categorical notion of relative pushout; it allows labelled\n        transition systems to be derived uniformly, in such a way that\n        familiar behavioural preorders and equivalences, in particular\n        bisimilarity, are congruential under certain conditions. Then\n        the theory of bigraphs is developed, and they are shown to meet\n        these conditions. It is shown that, using certain functors,\n        other WRSs which meet the conditions may also be derived; these\n        may, for example, be forms of BRS with additional structure.\n        \n        Simple examples of bigraphical systems are discussed; the theory\n        is developed in a number of ways in preparation for deeper\n        application studies.","bibo:AuthorList":["Milner, Robin"],"dc:date":"2001-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934106,"sim:weight":0.464972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.456143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932198,"sim:weight":0.449281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84770,"sim:weight":0.441021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98506,"sim:weight":0.427236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49420,"sim:weight":0.399459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151689,"sim:weight":0.372182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.358476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.357788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933380,"sim:weight":0.356909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934428,"sim:weight":0.345639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19256,"sim:weight":0.32686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934427,"sim:weight":0.326169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934300,"sim:weight":0.319522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.318342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934379,"sim:weight":0.316396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934421,"sim:weight":0.314174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.312457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98087,"sim:weight":0.3035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934476,"sim:weight":0.301299,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72502,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Practical behavioural animation based on vision and\n        attention","bibo:abstract":"The animation of human like characters is a vital aspect of\n        computer animation. Most animations rely heavily on characters\n        of some sort or other. This means that one important aspect of\n        computer animation research is to improve the animation of these\n        characters both by making it easier to produce animations and by\n        improving the quality of animation produced. One approach to\n        animating characters is to produce a simulation of the behaviour\n        of the characters which will automatically animate the\n        character.\n        \n        The dissertation investigates the simulation of behaviour in\n        practical applications. In particular it focuses on models of\n        visual perception for use in simulating human behaviour. A\n        simulation of perception is vital for any character that\n        interacts with its surroundings. Two main aspects of the\n        simulation of perception are investigated:\n        \n        – The use of psychology for designing visual algorithms.\n        \n        – The simulation of attention in order to produce both behaviour\n        and gaze patterns.\n        \n        Psychological theories are a useful starting point for designing\n        algorithms for simulating visual perception. The dissertation\n        investigates their use and presents some algorithms based on\n        psychological theories.\n        \n        Attention is the focusing of a person’s perception on a\n        particular object. The dissertation presents a simulation of\n        what a character is attending to (looking at). This is used to\n        simulate behaviour and for animating eye movements.\n        \n        The algorithms for the simulation of vision and attention are\n        applied to two tasks in the simulation of behaviour. The first\n        is a method for designing generic behaviour patterns from simple\n        pieces of motion. The second is a behaviour pattern for\n        navigating a cluttered environment. The simulation of vision and\n        attention gives advantages over existing work on both problems.\n        The approaches to the simulation of perception will be evaluated\n        in the context of these examples.","bibo:AuthorList":["Gillies, Mark F.P."],"dc:date":"2001-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":101644,"sim:weight":0.846315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84770,"sim:weight":0.845039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":97167,"sim:weight":0.844894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16051,"sim:weight":0.842593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85704,"sim:weight":0.83815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108124,"sim:weight":0.837615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84749,"sim:weight":0.835967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85373,"sim:weight":0.834307,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91399,"sim:weight":0.834148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997739,"sim:weight":0.832321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84756,"sim:weight":0.830807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15899,"sim:weight":0.829961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568227,"sim:weight":0.827109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102006,"sim:weight":0.827034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15982,"sim:weight":0.826954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96827,"sim:weight":0.824284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55883,"sim:weight":0.821925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16093,"sim:weight":0.816292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998234,"sim:weight":0.809989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98509,"sim:weight":0.806408,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72505,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Ternary and three-point univariate subdivision\n        schemes","bibo:abstract":"The generating function formalism is used to analyze the\n        continuity properties of univariate ternary subdivision schemes.\n        These are compared with their binary counterparts.","bibo:AuthorList":["Hassan, Mohamed","Dodgson, Neil A."],"dc:date":"2001-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":540691,"sim:weight":0.487582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991555,"sim:weight":0.344925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917087,"sim:weight":0.279655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766989,"sim:weight":0.271468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104402,"sim:weight":0.254781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766499,"sim:weight":0.25007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334782,"sim:weight":0.234714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":639,"sim:weight":0.187957,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12410,"sim:weight":0.185221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1107473,"sim:weight":0.184831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1078663,"sim:weight":0.17881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":840082,"sim:weight":0.171735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":492673,"sim:weight":0.162798,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18180,"sim:weight":0.16196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":616,"sim:weight":0.155237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":871470,"sim:weight":0.153677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382821,"sim:weight":0.151087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1090557,"sim:weight":0.150692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998620,"sim:weight":0.149999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931792,"sim:weight":0.149976,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72507,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An attack on a traitor tracing scheme","bibo:abstract":"In Crypto’99, Boneh and Franklin proposed a public key traitor\n        tracing scheme, which was believed to be able to catch all\n        traitors while not accusing any innocent users (i.e.,\n        full-tracing and error-free). Assuming that Decision\n        Diffie-Hellman problem is unsolvable in Gq, Boneh and Franklin\n        proved that a decoder cannot distinguish valid ciphertexts from\n        invalid ones that are used for tracing. However, our novel\n        pirate decoder P3 manages to make some invalid ciphertexts\n        distinguishable without violating their assumption, and it can\n        also frame innocent user coalitions to fool the tracer. Neither\n        the single-key nor arbitrary pirate tracing algorithm presented\n        in [1] can identify all keys used by P3 as claimed. Instead, it\n        is possible for both algorithms to catch none of the traitors.\n        We believe that the construction of our novel pirate also\n        demonstrates a simple way to defeat some other black-box traitor\n        tracing schemes in general.","bibo:AuthorList":["Yan, Jeff Jianxin","Wu, Yongdong"],"dc:date":"2001-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102461,"sim:weight":0.375475,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102475,"sim:weight":0.275945,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102432,"sim:weight":0.210791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102367,"sim:weight":0.20625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102373,"sim:weight":0.138976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.127064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116448,"sim:weight":0.124549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187705,"sim:weight":0.117577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973002,"sim:weight":0.117496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26422,"sim:weight":0.116837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793210,"sim:weight":0.116694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":717305,"sim:weight":0.116161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352238,"sim:weight":0.115544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918846,"sim:weight":0.105547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48414,"sim:weight":0.105471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":888218,"sim:weight":0.101197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549853,"sim:weight":0.0996201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083575,"sim:weight":0.0980032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929735,"sim:weight":0.0970735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931561,"sim:weight":0.0921076,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72509,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Nomadic π-calculi: Expressing and verifying\n        communication infrastructure for mobile computation","bibo:abstract":"This thesis addresses the problem of verifying distributed\n        infrastructure for mobile computation. In particular, we study\n        language primitives for communication between mobile agents.\n        They can be classified into two groups. At a low level there are\n        “location dependent” primitives that require a programmer to\n        know the current site of a mobile agent in order to communicate\n        with it. At a high level there are “location independent”\n        primitives that allow communication with a mobile agent\n        irrespective of any migrations. Implementation of the high level\n        requires delicate distributed infrastructure algorithms. In\n        earlier work of Sewell, Wojciechowski and Pierce, the two levels\n        were made precise as process calculi, allowing such algorithms\n        to be expressed as encodings of the high level into the low\n        level; a distributed programming language “Nomadic Pict” has\n        been built for experimenting with such encodings.\n        \n        This thesis turns to semantics, giving a definition of the core\n        language (with a type system) and proving correctness of an\n        example infrastructure. This involves extending the standard\n        semantics and proof techniques of process calculi to deal with\n        the new notions of sites and agents. The techniques adopted\n        include labelled transition semantics, operational equivalences\n        and preorders (e.g., expansion and coupled simulation), “up to”\n        equivalences, and uniform receptiveness. We also develop two\n        novel proof techniques for capturing the design intuitions\n        regarding mobile agents: we consider “translocating” versions of\n        operational equivalences that take migration into account,\n        allowing compositional reasoning; and “temporary immobility”,\n        which captures the intuition that while an agent is waiting for\n        a lock somewhere in the system, it will not migrate.\n        \n        The correctness proof of an example infrastructure is\n        non-trivial. It involves analysing the possible reachable states\n        of the encoding applied to an arbitrary high-level source\n        program. We introduce an intermediate language for factoring out\n        as many ‘house-keeping’ reduction steps as possible, and\n        focusing on the partially-committed steps.","bibo:AuthorList":["Unyapoth, Asis"],"dc:date":"2001-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932694,"sim:weight":0.3859,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.377891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.36736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41028,"sim:weight":0.344364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932666,"sim:weight":0.334648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934255,"sim:weight":0.31456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933923,"sim:weight":0.313012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934455,"sim:weight":0.312301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23991,"sim:weight":0.307883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934428,"sim:weight":0.306129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934237,"sim:weight":0.302578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":38466,"sim:weight":0.298703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000282,"sim:weight":0.298472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80601,"sim:weight":0.296109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334566,"sim:weight":0.293113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934243,"sim:weight":0.288738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.286409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932193,"sim:weight":0.284105,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.282024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934390,"sim:weight":0.281274,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72511,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An algebraic framework for modelling and verifying\n        microprocessors using HOL","bibo:abstract":"This report describes an algebraic approach to the specification\n        and verification of microprocessor designs. Key results are\n        expressed and verified using the HOL proof tool. Particular\n        attention is paid to the models of time and temporal\n        abstraction, culminating in a number of one-step theorems. This\n        work is then explained with a small but complete case study,\n        which verifies the correctness of a datapath with microprogram\n        control.","bibo:AuthorList":["Fox, Anthony"],"dc:date":"2001-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.224682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.219175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.205695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933328,"sim:weight":0.201003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.198299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.191994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.190774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.186567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":950185,"sim:weight":0.175093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931277,"sim:weight":0.174592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.169736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057719,"sim:weight":0.168351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.164376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1502782,"sim:weight":0.163334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512117,"sim:weight":0.161967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.161292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884619,"sim:weight":0.154748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708241,"sim:weight":0.149273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932726,"sim:weight":0.147832,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.143336,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72513,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Switchlets and resource-assured MPLS networks","bibo:abstract":"MPLS (Multi-Protocol Label Switching) is a technology with the\n        potential to support multiple control systems, each with\n        guaranteed QoS (Quality of Service), on connectionless\n        best-effort networks. However, it does not provide all the\n        capabilities required of a multi-service network. In particular,\n        although resource-assured VPNs (Virtual Private Networks) can be\n        created, there is no provision for inter-VPN resource\n        management. Control flexibility is limited because resources\n        must be pinned down to be guaranteed, and best-effort flows in\n        different VPNs compete for the same resources, leading to QoS\n        crosstalk.\n        \n        The contribution of this paper is an implementation on MPLS of a\n        network control framework that supports inter-VPN resource\n        management. Using resource partitions known as switchlets, it\n        allows the creation of multiple VPNs with guaranteed resource\n        allocations, and maintains isolation between these VPNs.\n        Devolved control techniques permit each VPN a customised control\n        system.\n        \n        We motivate our work by discussing related efforts and example\n        scenarios of effective deployment of our system. The\n        implementation is described and evaluated, and we address\n        interoperability with external IP control systems, in addition\n        to interoperability of data across different layer 2\n        technologies.","bibo:AuthorList":["Mortier, Richard","Isaacs, Rebecca","Fraser, Keir"],"dc:date":"2000-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":793795,"sim:weight":0.437982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":989014,"sim:weight":0.433918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":909739,"sim:weight":0.399152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":874014,"sim:weight":0.375854,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764412,"sim:weight":0.366819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998729,"sim:weight":0.305009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.280427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88894,"sim:weight":0.267479,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.256331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.241435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707947,"sim:weight":0.240437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1075505,"sim:weight":0.230043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102756,"sim:weight":0.224256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102217,"sim:weight":0.21775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.207076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.201817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899689,"sim:weight":0.196049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997667,"sim:weight":0.184214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138767,"sim:weight":0.183086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.178989,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72515,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Proximity visualisation of abstract data","bibo:abstract":"Data visualisation is an established technique for exploration,\n        analysis and presentation of data. A graphical presentation is\n        generated from the data content, and viewed by an observer,\n        engaging vision – the human sense with the greatest bandwidth,\n        and the ability to recognise patterns subconciously. For\n        instance, a correlation present between two variables can be\n        elucidated with a scatter plot. An effective visualisation can\n        be difficult to achieve for an abstract collection of objects,\n        e.g. a database table with many attributes, or a set of\n        multimedia documents, since there is no immediately obvious way\n        of arranging the objects based on their content. Thankfully,\n        similarity between pairs of elements of such a collection can be\n        measured, and a good overview picture should respect this\n        proximity information, by positioning similar elements close to\n        one another, and far from dissimilar objects. The resulting\n        proximity visualisation is a topology preserving map of the\n        underlying data collection, and this work investigates various\n        methods for generating such maps. A number of algorithms are\n        devised, evaluated quantitatively by means of statistical\n        inference, and qualitatively in a case study for each type of\n        data collection. Other graphical representations for abstract\n        data are surveyed and compared to proximity visualisation.\n        \n        A standard method for modelling prximity relations is\n        multidimensional scaling (MDS) analysis. The result is usually a\n        two- or three-dimensional configuration of points – each\n        representing a single element from a collection., with\n        inter-point distances approximating the corresponding\n        proximities. The quality of this approximation can be expressed\n        as a loss function, and the optimal arrangement can be found by\n        minimising it numerically – a procedure known as least-squares\n        metric MDS. This work presents a number of algorithmic instances\n        of this problem, using established function optimisation\n        heuristics: Newton-Raphson, Tabu Search, Genetic Algorithm,\n        Iterative Majorization, and Stimulated annealing. Their\n        effectiveness at minimising the loss function is measured for a\n        representative sample of data collections, and the relative\n        ranking established. The popular classical scaling method serves\n        as a benchmark for this study.\n        \n        The computational cost of conventional MDS makes it unsuitable\n        for visualising a large data collection. Incremental\n        multidimensional scaling solves this problem by considering only\n        a carefully chosen subset of all pairwise proximities. Elements\n        that make up cluster diameters at a certain level of the single\n        link cluster hierarchy are identified, and are subject to\n        standard MDS, in order to establish the overall shape of the\n        configuration. The remaining elements are positioned\n        independently of one another with respect to this skeleton\n        configuration. For very large collections the skeleton\n        configuration can itself be built up incrementally. The\n        incremental method is analysed for the compromise between\n        solution quality and the proportion of proximities used, and\n        compared to Principal Components Analysis on a number of large\n        database tables.\n        \n        In some applications it is convenient to represent individual\n        objects by compact icons of fixed size, for example the use of\n        thumbnails when visualising a set of images. Because the MDS\n        analysis only takes the position of icons into account, and not\n        their size, its direct use for visualisation may lead to partial\n        or complete overlap of icons. Proximity grid – an analogue of\n        MDS in a discrete domain – is proposed to overcome this\n        deficiency. Each element of an abstract data collection is\n        represented within a single cell of the grid, and thus\n        considerable detail can be shown without overlap. The proximity\n        relationships are preserved by clustering similar elements in\n        the grid, and keeping dissimilar ones apart. Algorithms for\n        generating such an arrangement are presented and compared in\n        terms of output quality to one another as well as standard MDS.","bibo:AuthorList":["Basalaj, Wojciech"],"dc:date":"2001-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":106836,"sim:weight":0.312877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.302758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98504,"sim:weight":0.287892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.284449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":981110,"sim:weight":0.283021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102704,"sim:weight":0.278308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43113,"sim:weight":0.272358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.264202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.256506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19444,"sim:weight":0.254603,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549802,"sim:weight":0.250817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147453,"sim:weight":0.236665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383664,"sim:weight":0.233405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":385988,"sim:weight":0.232886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43067,"sim:weight":0.231558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84788,"sim:weight":0.231027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934910,"sim:weight":0.228965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98526,"sim:weight":0.223456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98644,"sim:weight":0.221405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386794,"sim:weight":0.221301,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72517,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanizing a theory of program composition for\n        UNITY","bibo:abstract":"Compositional reasoning must be better understood if non-trivial\n        concurrent programs are to be verified. Chandy and Sanders\n        [2000] have proposed a new approach to reasoning about\n        composition, which Charpentier and Chandy [1999] have\n        illustrated by developing a large example in the UNITY\n        formalism. The present paper describes extensive experiments on\n        mechanizing the compositionality theory and the example, using\n        the proof tool Isabelle. Broader issues are discussed, in\n        particular, the formalization of program states. The usual\n        representation based upon maps from variables to values is\n        contrasted with the alternatives, such as a signature of typed\n        variables. Properties need to be transferred from one program\n        component’s signature to the common signature of the system.\n        Safety properties can be so transferred, but progress properties\n        cannot be. Using polymorphism, this problem can be circumvented\n        by making signatures sufficiently flexible. Finally the proof of\n        the example itself is outlined.","bibo:AuthorList":["Paulson, Lawrence"],"dc:date":"2000-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":386661,"sim:weight":0.388523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.38288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.312342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.303114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.247125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.221312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.218566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.204165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.195789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.191257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.180964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.174676,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.167663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74038,"sim:weight":0.166157,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.165618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929386,"sim:weight":0.164289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932538,"sim:weight":0.162782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1339,"sim:weight":0.162216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.16076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.160157,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72519,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Modules, abstract types, and distributed\n        versioning","bibo:abstract":"In a wide-area distributed system it is often impractical to\n        synchronise software updates, so one must deal with many\n        coexisting versions. We study static typing support for modular\n        wide-area programming, modelling separate compilation/linking\n        and execution of programs that interact along typed channels.\n        Interaction may involve communication of values of abstract\n        types; we provide the developer with fine-grain versioning\n        control of these types to support interoperation of old and new\n        code. The system makes use of a second-class module system with\n        singleton kinds; we give a novel operational semantics for\n        separate compilation/linking and execution and prove soundness.","bibo:AuthorList":["Sewell, Peter"],"dc:date":"2000-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934336,"sim:weight":0.318128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.275741,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.246669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.213211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.204818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.170523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.167384,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.157663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.155974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.150618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57232,"sim:weight":0.149869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.146531,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937303,"sim:weight":0.145628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.142794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.140713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.140406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.138765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707701,"sim:weight":0.136123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.131623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.130803,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72521,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Models for name-passing processes: interleaving and\n        causal","bibo:abstract":"We study syntax-free models for name-passing processes. For\n        interleaving semantics, we identify the indexing structure\n        required of an early labelled transition system to support the\n        usual π-calculus operations, defining Indexed Labelled\n        Transition Systems. For noninterleaving causal semantics we\n        define Indexed Labelled Asynchronous Transition Systems,\n        smoothly generalizing both our interleaving model and the\n        standard Asynchronous Transition Systems model for CCS-like\n        calculi. In each case we relate a denotational semantics to an\n        operational view, for bisimulation and causal bisimulation\n        respectively. We establish completeness properties of, and\n        adjunctions between, categories of the two models. Alternative\n        indexing structures and possible applications are also\n        discussed. These are first steps towards a uniform understanding\n        of the semantics and operations of name-passing calculi.","bibo:AuthorList":["Cattani, Gian Luca","Sewell, Peter"],"dc:date":"2000-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934421,"sim:weight":0.490536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.487108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.463455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":861783,"sim:weight":0.432123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.363222,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.363222,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.310433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.309074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934212,"sim:weight":0.307586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513636,"sim:weight":0.306378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512635,"sim:weight":0.301664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.290283,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934476,"sim:weight":0.287425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934433,"sim:weight":0.28602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934243,"sim:weight":0.268793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":34288,"sim:weight":0.266637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934195,"sim:weight":0.260141,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934428,"sim:weight":0.257899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80601,"sim:weight":0.253569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.249549,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72523,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Hardware/software co-design using functional\n        languages","bibo:abstract":"In previous work we have developed and prototyped a silicon\n        compiler which translates a functional language (SAFL) into\n        hardware. Here we present a SAFL-level program transformation\n        which: (i) partitions a specification into hardware and software\n        parts and (ii) generates a specialised architecture to execute\n        the software part. The architecture consists of a number of\n        interconnected heterogeneous processors. Our method allows a\n        large design space to be explored by systematically transforming\n        a single SAFL specification to investigate different points on\n        the area-time spectrum.","bibo:AuthorList":["Mycroft, Alan","Sharp, Richard"],"dc:date":"2000-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":765423,"sim:weight":0.447723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003815,"sim:weight":0.38981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898469,"sim:weight":0.267833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":939318,"sim:weight":0.259485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.256755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.242931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898472,"sim:weight":0.241004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.240976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.210844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21339,"sim:weight":0.209093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026261,"sim:weight":0.201164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.19858,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.197307,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932377,"sim:weight":0.183386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.17727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43245,"sim:weight":0.176412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707701,"sim:weight":0.17607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.161009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.155678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795327,"sim:weight":0.154221,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72525,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The memorability and security of passwords – some\n        empirical results","bibo:abstract":"There are many things that are ‘well known’ about passwords,\n        such as that uers can’t remember strong passwords and that the\n        passwords they can remember are easy to guess. However, there\n        seems to be a distinct lack of research on the subject that\n        would pass muster by the standards of applied psychology.\n        \n        Here we report a controlled trial in which, of four sample\n        groups of about 100 first-year students, three were recruited to\n        a formal experiment and of these two were given specific advice\n        about password selection. The incidence of weak passwords was\n        determined by cracking the password file, and the number of\n        password resets was measured from system logs. We observed a\n        number of phenomena which run counter to the established wisdom.\n        For example, passwords based on mnemonic phrases are just as\n        hard to crack as random passwords yet just as easy to remember\n        as naive user selections.","bibo:AuthorList":["Yan, Jianxin","Blackwell, Alan","Anderson, Ross","Grant, Alasdair"],"dc:date":"2000-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998853,"sim:weight":0.710448,"sim:AssociationMethod":"similarity_cosine"},{"identifier":776175,"sim:weight":0.702852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990061,"sim:weight":0.60246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778367,"sim:weight":0.600425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960671,"sim:weight":0.566658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920152,"sim:weight":0.523369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381658,"sim:weight":0.510999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083663,"sim:weight":0.44633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082672,"sim:weight":0.434927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":17894,"sim:weight":0.434922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998833,"sim:weight":0.421274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757511,"sim:weight":0.388484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":17896,"sim:weight":0.351734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":13096,"sim:weight":0.276004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":17914,"sim:weight":0.247048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23275,"sim:weight":0.242378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.234091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.216058,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48345,"sim:weight":0.19213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46553,"sim:weight":0.185688,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72527,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Enhancing spatial deformation for virtual\n        sculpting","bibo:abstract":"The task of computer-based free-form shape design is fraught\n        with practical and conceptual difficulties. Incorporating\n        elements of traditional clay sculpting has long been recognised\n        as a means of shielding a user from the complexities inherent in\n        this form of modelling. The premise is to deform a\n        mathematically-defined solid in a fashion that loosely simulates\n        the physical moulding of an inelastic substance, such as\n        modelling clay or silicone putty. Virtual sculpting combines\n        this emulation of clay sculpting with interactive feedback.\n        \n        Spatial deformations are a class of powerful modelling\n        techniques well suited to virtual sculpting. They indirectly\n        reshape an object by warping the surrounding space. This is\n        analogous to embedding a flexible shape within a lump of jelly\n        and then causing distortions by flexing the jelly. The user\n        controls spatial deformations by manipulating points, curves or\n        a volumetric hyperpatch. Directly Manipulated Free-Form\n        Deformation (DMFFD), in particular, merges the hyperpatch- and\n        point-based approaches and allows the user to pick and drag\n        object points directly.\n        \n        This thesis embodies four enhancements to the versatility and\n        validity of spatial deformation:\n        \n        1. We enable users to specify deformations by manipulating the\n        normal vector and tangent plane at a point. A first derivative\n        frame can be tilted, twisted and scaled to cause a corresponding\n        distortion in both the ambient space and inset object. This\n        enhanced control is accomplished by extending previous work on\n        bivariate surfaces to trivariate hyperpatches.\n        \n        2. We extend DMFFD to enable curve manipulation by exploiting\n        functional composition and degree reduction. Although the\n        resulting curve-composed DMFFD introduces some modest and\n        bounded approximation, it is superior to previous curve-based\n        schemes in other respects. Our technique combines all three\n        forms of spatial deformation (hyperpatch, point and curve), can\n        maintain any desired degree of derivative continuity, is\n        amenable to the automatic detection and prevention of\n        self-intersection, and achieves interactive update rates over\n        the entire deformation cycle.\n        \n        3. The approximation quality of a polygon-mesh object frequently\n        degrades under spatial deformation to become either\n        oversaturated or undersaturated with polygons. We have devised\n        an efficient adaptive mesh refinement and decimation scheme. Our\n        novel contributions include: incorporating fully symmetrical\n        decimation, reducing the computation cost of the\n        refinement/decimation trigger, catering for boundary and crease\n        edges, and dealing with sampling problems.\n        \n        4. The potential self-intersection of an object is a serious\n        weakness in spatial deformation. We have developed a variant of\n        DMFFD which guards against self-intersection by subdividing\n        manipulations into injective (one-to-one) mappings. This depends\n        on three novel contributions: analytic conditions for\n        identifying self-intersection, and two injectivity tests (one\n        exact but computationally costly and the other approximate but\n        efficient).","bibo:AuthorList":["Gain, James Edward"],"dc:date":"2000-08","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"J Gain. (2000). Enhancing spatial deformation for virtual sculpting.","authors":[],"bibo:shortTitle":"Enhancing spatial deformation for virtual sculpting.","dc:date":"2000","refDocId":72527},{"rawReferenceText":"J Gain. (2000). Enhancing spatial deformation for virtual sculpting.","authors":[],"bibo:shortTitle":"Enhancing spatial deformation for virtual sculpting.","dc:date":"2000","refDocId":72527},{"rawReferenceText":"J Gain. (2000). Enhancing spatial deformation for virtual sculpting.","authors":[],"bibo:shortTitle":"Enhancing spatial deformation for virtual sculpting.","dc:date":"2000","refDocId":72527},{"rawReferenceText":"J Gain. (2000). Enhancing spatial deformation for virtual sculpting.","authors":[],"bibo:shortTitle":"Enhancing spatial deformation for virtual sculpting.","dc:date":"2000","refDocId":72527}],"similarities":[{"identifier":43117,"sim:weight":0.475099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20620,"sim:weight":0.422725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.404344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43151,"sim:weight":0.395364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":239416,"sim:weight":0.383936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241212,"sim:weight":0.381664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45639,"sim:weight":0.380192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":240353,"sim:weight":0.37822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101555,"sim:weight":0.376792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000332,"sim:weight":0.37274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43397,"sim:weight":0.364867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1521,"sim:weight":0.359513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20686,"sim:weight":0.356893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16062,"sim:weight":0.355602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98488,"sim:weight":0.354633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108106,"sim:weight":0.354213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43102,"sim:weight":0.349911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.349662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998620,"sim:weight":0.349508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1352169,"sim:weight":0.348985,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72529,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Applied π – a brief tutorial","bibo:abstract":"This note provides a brief introduction to π-calculi and their\n        application to concurrent and distributed programming. Chapter 1\n        introduces a simple π-calculus and discusses the choice of\n        primitives, operational semantics (in terms of reductions and of\n        indexed early labelled transitions), operational equivalences,\n        Pict-style programming and typing. Chapter 2 goes on to discuss\n        the application of these ideas to distributed systems, looking\n        informally at the design of distributed π-calculi with grouping\n        and interaction primitives. Chapter 3 returns to typing, giving\n        precise definitions for a simple type system and soundness\n        results for the labelled transition semantics. Finally, Chapters\n        4 and 5 provide a model development of the metatheory, giving\n        first an outline and then detailed proofs of the results stated\n        earlier. The note can be read in the partial order 1.(2+3+4.5).","bibo:AuthorList":["Sewell, Peter"],"dc:date":"2000-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934327,"sim:weight":0.317011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.23567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.233183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.224497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932694,"sim:weight":0.213085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.211597,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934173,"sim:weight":0.208057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513636,"sim:weight":0.199606,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.193993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512635,"sim:weight":0.193835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.191728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.188668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932666,"sim:weight":0.187497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.187223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.176428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.169909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934211,"sim:weight":0.169281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934243,"sim:weight":0.161519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.155068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1511422,"sim:weight":0.154863,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72531,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automatic recognition of words in Arabic\n        manuscripts","bibo:abstract":"The need to transliterate large numbers of historic Arabic\n        documents into machine-readable form has motivated new work on\n        offline recognition of Arabic script. Arabic script presents two\n        challenges: orthography is cursive and letter shape is context\n        sensitive.\n        \n        This dissertation presents two techniques to achieve high word\n        recognition rates: the segmentation-free technique and the\n        segmentation-based technique. The segmentation-free technique\n        treats the word as a whole. The word image is first transformed\n        into a normalised polar image. The two-dimensional Fourier\n        transform is then applied to the polar image. This results in a\n        Fourier spectrum that is invariant to dilation, translation, and\n        rotation. The Fourier spectrum is used to form the word\n        template, or train the word model in the template-based and the\n        multiple hidden Markov model (HMM) recognition systems,\n        respectively. The recognition of an input word image is based on\n        the minimum distance measure from the word templates and the\n        maximum likelihood probability for the word models.\n        \n        The segmentation-based technique uses a single hidden Markov\n        model, which is composed of multiple character-models. The\n        technique implements the analytic approach in which words are\n        segmented into smaller units, not necessarily characters. The\n        word skeleton is decomposed into a number of links in\n        orthographic order, it is then transferred into a sequence of\n        discrete symbols using vector quantisation. the training of each\n        character-model is performed using either: state assignment in\n        the lexicon-driven configuration or the Baum-Welch method in the\n        lexicon-free configuration. The observation sequence of the\n        input word is given to the hidden Markov model and the Viterbi\n        algorithm is applied to provide an ordered list of the candidate\n        recognitions.","bibo:AuthorList":["Khorsheed, Mohammad S.M."],"dc:date":"2000-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43122,"sim:weight":0.817517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108124,"sim:weight":0.769906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16089,"sim:weight":0.751965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84770,"sim:weight":0.71977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16068,"sim:weight":0.713116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16093,"sim:weight":0.712849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15973,"sim:weight":0.711421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":95391,"sim:weight":0.707462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16091,"sim:weight":0.673981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98506,"sim:weight":0.650437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96657,"sim:weight":0.639764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85152,"sim:weight":0.63322,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49420,"sim:weight":0.605111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105669,"sim:weight":0.586112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98512,"sim:weight":0.585337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15980,"sim:weight":0.554127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16081,"sim:weight":0.534801,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102854,"sim:weight":0.491286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103391,"sim:weight":0.489876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15987,"sim:weight":0.483426,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72533,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Inductive verification of cryptographic\n        protocols","bibo:abstract":"The dissertation aims at tailoring Paulson’s Inductive Approach\n        for the analysis of classical cryptographic protocols towards\n        real-world protocols. The aim is pursued by extending the\n        approach with new elements (e.g. timestamps and smart cards),\n        new network events (e.g. message reception) and more expressive\n        functions (e.g. agents’ knowledge). Hence, the aim is achieved\n        by analysing large protocols (Kerberos IV and Shoup-Rubin), and\n        by studying how to specify and verify their goals.\n        \n        More precisely, the modelling of timestamps and of a discrete\n        time are first developed on BAN Kerberos, while comparing the\n        outcomes with those of the BAN logic. The machinery is then\n        applied to Kerberos IV, whose complicated use of session keys\n        requires a dedicated treatment. Three new guarantees limiting\n        the spy’s abilities in case of compromise of a specific session\n        key are established. Also, it is discovered that Kerberos IV is\n        subject to an attack due to the weak guarantees of\n        confidentiality for the protocol responder.\n        \n        We develop general strategies to investigate the goals of\n        authenticity, key distribution and non-injective agreement,\n        which is a strong form of authentication. These strategies\n        require formalising the agents’ knowledge of messages. Two\n        approaches are implemented. If an agent creates a message, then\n        he knows all components of the message, including the\n        cryptographic key that encrypts it. Alternatively, a broad\n        definition of agents’ knowledge can be developed if a new\n        network event, message reception, is formalised.\n        \n        The concept of smart card as a secure device that can store\n        long-term secrets and perform easy computations is introduced.\n        The model cards can be stolen and/or cloned by the spy. The\n        kernel of their built-in algorithm works correctly, so they spy\n        cannot acquire unlimited knowledge from their use. However,\n        their functional interface is unreliable, so they send correct\n        outputs in an unspecified order. The provably secure protocol\n        based on smart cards designed by Shoup \u0026 Rubin is\n        mechanised. Some design weaknesses (unknown to the authors’\n        treatment by Bellare \u0026 Rogaway’s approach) are unveiled,\n        while feasible corrections are suggested and verified.\n        \n        We realise that the evidence that a protocol achieves its goals\n        must be available to the peers. In consequence, we develop a new\n        a principle of prudent protocol design, goal availability, which\n        holds of a protocol when suitable guarantees confirming its\n        goals exist on assumptions that both peers can verify. Failure\n        to observe our principle raises the risk of attacks, as is the\n        case, for example, of the attack on Kerberos IV.","bibo:AuthorList":["Bella, Giampaolo"],"dc:date":"2000-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102470,"sim:weight":0.411134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397476,"sim:weight":0.407034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.402137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.395918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102472,"sim:weight":0.377838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.374784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999810,"sim:weight":0.371744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397393,"sim:weight":0.35369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999811,"sim:weight":0.352848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102482,"sim:weight":0.327466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.316689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.315351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.301746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397465,"sim:weight":0.287544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.278506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397386,"sim:weight":0.274499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.267828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.266743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.264139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1023853,"sim:weight":0.256684,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72535,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Nomadic Pict: language and infrastructure design for\n        mobile computation","bibo:abstract":"Mobile agents – units of executing computation that can migrate\n        between machines – are likely to become an important enabling\n        technology for future distributed systems. We study the\n        distributed infrastructures required for location-independent\n        communication between migrating agents. These infrastructures\n        are problematic: the choice or design of an infrastructure must\n        be somewhat application-specific – any given algorithm will only\n        have satisfactory performance for some range of migration and\n        communication behaviour; the algorithms must be matched to the\n        expected properties (and robustness demands) of applications and\n        the failure characteristic of the communication medium. To study\n        this problem we introduce an agent programming language –\n        Nomadic Pict. It is designed to allow infrastructure algorithms\n        to be expressed clearly, as translations from a high-level\n        language to a lower level. The levels are based on\n        rigorously-defined process calculi, which provide sharp levels\n        of abstraction. In this dissertation we describe the language\n        and use it to develop a distributed infrastructure for an\n        example application. The language and examples have been\n        implemented; we conclude with a description of the compiler and\n        runtime system.","bibo:AuthorList":["Wojciechowski, Paweł Tomasz"],"dc:date":"2000-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8929640,"sim:weight":0.545752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102521,"sim:weight":0.522976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":821027,"sim:weight":0.519786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934917,"sim:weight":0.512291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998268,"sim:weight":0.507493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102604,"sim:weight":0.498366,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998241,"sim:weight":0.493833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998027,"sim:weight":0.490589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934797,"sim:weight":0.48647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998255,"sim:weight":0.485398,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394077,"sim:weight":0.483755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934431,"sim:weight":0.480536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.477367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998262,"sim:weight":0.472262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23991,"sim:weight":0.468568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826710,"sim:weight":0.467022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70436,"sim:weight":0.460836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931425,"sim:weight":0.450395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934237,"sim:weight":0.449732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998427,"sim:weight":0.439632,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72537,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Designing a reliable publishing framework","bibo:abstract":"Due to the growth of the Internet and the widespread adoption of\n        easy-to use web browsers, the web provides a new environment for\n        conventional as well as new businesses. Publishing on the web is\n        a fundamental and important means of supporting various\n        activities on the Internet such as commercial transactions,\n        personal home page publishing, medical information distribution,\n        public key certification and academic scholarly publishing.\n        Along with the dramatic growth of the web, the number of\n        reported frauds is increasing sharply. Since the Internet was\n        not originally designed for web publishing, it has some\n        weaknesses that undermine its reliability.\n        \n        How can we rely on web publishing? In order to resolve this\n        question, we need to examine what makes people confident when\n        reading conventional publications printed on paper, to\n        investigate what attacks can erode confidence in web publishing,\n        and to understand the nature of publishing in general.\n        \n        In this dissertation, we examine security properties and policy\n        models, and their applicability to publishing. We then\n        investigate the nature of publishing so that we can extract its\n        technical requirements. To help us understand the practical\n        mechanisms which might satisfy these requirements, some\n        applications of electronic publishing are discussed and some\n        example mechanisms are presented.\n        \n        We conclude that guaranteed integrity, verifiable authenticity\n        and persistent availability of publications are required to make\n        web publishing more reliable. Hence we design a framework that\n        can support these properties. To analyse the framework, we\n        define a security policy for web publishing that focuses on the\n        guaranteed integrity and authenticity of web publications, and\n        then describe some technical primitives that enable us to\n        achieve our requirements. Finally, the Jikzi publishing\n        system—an implementation of our framework—is presented with\n        descriptions of its architecture and possible applications.","bibo:AuthorList":["Lee, Jong-Hyeon"],"dc:date":"2000-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932548,"sim:weight":0.458998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2698721,"sim:weight":0.444234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931398,"sim:weight":0.442645,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932381,"sim:weight":0.429836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103094,"sim:weight":0.421286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96499,"sim:weight":0.408094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103099,"sim:weight":0.389028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":938786,"sim:weight":0.38404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918255,"sim:weight":0.371962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1001541,"sim:weight":0.371749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2690995,"sim:weight":0.36982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":898132,"sim:weight":0.36974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397474,"sim:weight":0.368355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103095,"sim:weight":0.365898,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109103,"sim:weight":0.365522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":52042,"sim:weight":0.358179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932877,"sim:weight":0.353304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103093,"sim:weight":0.349777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397391,"sim:weight":0.345173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":778716,"sim:weight":0.341057,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72539,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automatic summarising and the CLASP system","bibo:abstract":"This dissertation discusses summarisers and summarising in\n        general, and presents CLASP, a new summarising system that uses\n        a shallow semantic representation of the source text called a\n        “predication cohesion graph”.\n        \n        Nodes in the graph are “simple predications” corresponding to\n        events, states and entities mentioned in the text; edges\n        indicate related or similar nodes. Summary content is chosen by\n        selecting some of these predications according to criteria of\n        “importance”, “representativeness” and “cohesiveness”. These\n        criteria are expressed as functions on the nodes of a weighted\n        graph. Summary text is produced either by extracting whole\n        sentences from the source text, or by generating short,\n        indicative “summary phrases” from the selected predications.\n        \n        CLASP uses linguistic processing but no domain knowledge, and\n        therefore does not restrict the subject matter of the source\n        text. It is intended to deal robustly with complex texts that it\n        cannot analyse completely accurately or in full. Experiments in\n        summarising stories from the Wall Street Journal suggest there\n        may be a benefit in identifying important material in a semantic\n        representation rather than a surface one, but that, despite the\n        robustness of the source representation, inaccuracies in CLASP’s\n        linguistic analysis can dramatically affect the readability of\n        its summaries. I discuss ways in which this and other problems\n        might be overcome.","bibo:AuthorList":["Tucker, Richard"],"dc:date":"2000-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":56756,"sim:weight":0.483909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.421756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.391792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937440,"sim:weight":0.383726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19673,"sim:weight":0.380407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933287,"sim:weight":0.371962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81603,"sim:weight":0.369851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.369202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99066,"sim:weight":0.366521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1656370,"sim:weight":0.36436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18401,"sim:weight":0.36252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.362089,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826729,"sim:weight":0.346136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51200,"sim:weight":0.339052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22068,"sim:weight":0.333455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991454,"sim:weight":0.323644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1381997,"sim:weight":0.322605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21972,"sim:weight":0.319557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51183,"sim:weight":0.318131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48252,"sim:weight":0.316766,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72541,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Biometric decision landscapes","bibo:abstract":"This report investigates the “decision landscapes” that\n        characterize several forms of biometric decision making. The\n        issues discussed include: (i) Estimating the degrees-of-freedom\n        associated with different biometrics, as a way of measuring the\n        randomness and complexity (and therefore the uniqueness) of\n        their templates. (ii) The consequences of combining more than\n        one biometric test to arrive at a decision. (iii) The\n        requirements for performing identification by large-scale\n        exhaustive database search, as opposed to mere verification by\n        comparison against a single template. (iv) Scenarios for\n        Biometric Key Cryptography (the use of biometrics for encryption\n        of messages). These issues are considered here in abstract form,\n        but where appropriate, the particular example of iris\n        recognition is used as an illustration. A unifying theme of all\n        four sets of issues is the role of combinatorial complexity, and\n        its measurement, in determining the potential decisiveness of\n        biometric decision making.","bibo:AuthorList":["Daugman, John"],"dc:date":"2000-01","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"J Daugman. (2000). Biometric decision landscapes\u0027,","authors":[],"bibo:shortTitle":"Biometric decision landscapes\u0027,","dc:date":"2000","refDocId":72541},{"rawReferenceText":"J Daugman. (2000). Biometric decision landscapes\u0027,","authors":[],"bibo:shortTitle":"Biometric decision landscapes\u0027,","dc:date":"2000","refDocId":72541}],"similarities":[{"identifier":982184,"sim:weight":0.605445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764614,"sim:weight":0.59792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884715,"sim:weight":0.595726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917012,"sim:weight":0.584847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":865230,"sim:weight":0.583981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082126,"sim:weight":0.48815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":779199,"sim:weight":0.486458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":889699,"sim:weight":0.471084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187627,"sim:weight":0.469535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":611,"sim:weight":0.466936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799340,"sim:weight":0.453554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":910191,"sim:weight":0.444646,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083753,"sim:weight":0.444582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793205,"sim:weight":0.443168,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990048,"sim:weight":0.439708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764394,"sim:weight":0.436259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960681,"sim:weight":0.431842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1107466,"sim:weight":0.429933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729141,"sim:weight":0.400817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397981,"sim:weight":0.353621,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72543,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The interaction between fault tolerance and\n        security","bibo:abstract":"This dissertation studies the effects on system design when\n        including fault tolerance design principles within security\n        services.\n        \n        We start by looking at the changes made to the trust model\n        within protocol design, and how moving away from trusted server\n        design principles affects the structure of the protocol. Taking\n        the primary results from this work, we move on to study how\n        control in protocol execution can be used to increase assurances\n        in the actions of legitimate participants. We study some\n        examples, defining two new classes of attack, and note that by\n        increasing client control in areas of protocol execution, it is\n        possible to overcome certain vulnerabilities.\n        \n        We then look at different models in fault tolerance, and how\n        their adoption into a secure environment can change the design\n        principles and assumptions made when applying the models.\n        \n        We next look at the application of timing checks in protocols.\n        There are some classes of timing attack that are difficult to\n        thwart using existing techniques, because of the inherent\n        unreliability of networked communication. We develop a method of\n        converting the Quality of Service mechanisms built into ATM\n        networks in order to achieve another layer of protection against\n        timing attacks.\n        \n        We then study the use of primary-backup mechanisms within server\n        design, as previous work on server replication in security\n        centres on the use of the state machine approach for\n        replication, which provides a higher degree of assurance in\n        system design, but adds complexity.\n        \n        We then provide a design for a server to reliably and securely\n        store objects across a loosely coupled, distributed environment.\n        The main goal behind this design was to realise the ability for\n        a client to exert control over the fault tolerance inherent in\n        the service.\n        \n        The main conclusions we draw from our research are that fault\n        tolerance has a wider application within security than current\n        practices, which are primarily based on replicating servers, and\n        clients can exert control over the protocols and mechanisms to\n        achieve resilience against differing classes of attack. We\n        promote some new ideas on how, by challenging the prevailing\n        model for client-server architectures in a secure environment,\n        legitimate clients can have greater control over the services\n        they use. We believe this to be a useful goal, given that the\n        client stands to lose if the security of the server is\n        undermined.","bibo:AuthorList":["Price, Geraint"],"dc:date":"1999-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8999810,"sim:weight":0.464252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.433724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103099,"sim:weight":0.327908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709994,"sim:weight":0.324488,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.316101,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.304007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187729,"sim:weight":0.300321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15626,"sim:weight":0.29341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.288508,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.27654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.269196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.254926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998042,"sim:weight":0.251677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.24435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.233092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.233092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.233092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.233092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.233092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.233092,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72544,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Murphy’s law, the fitness of evolving species, and the\n        limits of software reliability","bibo:abstract":"We tackle two problems of interest to the software assurance\n        community. Firstly, existing models of software development\n        (such as the waterfall and spiral models) are oriented towards\n        one-off software development projects, while the growth of mass\n        market computing has led to a world in which most software\n        consists of packages which follow an evolutionary development\n        model. This leads us to ask whether anything interesting and\n        useful may be said about evolutionary development. We answer in\n        the affirmative. Secondly, existing reliability growth models\n        emphasise the Poisson distribution of individual software bugs,\n        while the empirically observed reliability growth for large\n        systems is asymptotically slower than this. We provide a\n        rigorous explanation of this phenomenon. Our reliability growth\n        model is inspired by statistical thermodynamics, but also\n        applies to biological evolution. It is in close agreement with\n        experimental measurements of the fitness of an evolving species\n        and the reliability of commercial software products. However, it\n        shows that there are significant differences between the\n        evolution of software and the evolution of species. In\n        particular, we establish maximisation properties corresponding\n        to Murphy’s law which work to the advantage of a biological\n        species, but to the detriment of software reliability.","bibo:AuthorList":["Brady, Robert M.","Anderson, Ross J.","Ball, Robin C."],"dc:date":"1999-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2707696,"sim:weight":0.487732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.423486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707682,"sim:weight":0.413076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.41236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.397399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.375395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.34867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187752,"sim:weight":0.29189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1666302,"sim:weight":0.282223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77652,"sim:weight":0.258405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.229873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187654,"sim:weight":0.227436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934499,"sim:weight":0.220904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934278,"sim:weight":0.220447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24070,"sim:weight":0.198191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.192473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44505,"sim:weight":0.191332,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12701,"sim:weight":0.185422,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710126,"sim:weight":0.183081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933163,"sim:weight":0.179102,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72546,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanizing UNITY in Isabelle","bibo:abstract":"UNITY is an abstract formalism for proving properties of\n        concurrent systems, which typically are expressed using guarded\n        assignments [Chandy and Misra 1988]. UNITY has been mechanized\n        in higher-order logic using Isabelle, a proof assistant. Safety\n        and progress primitives, their weak forms (for the substitution\n        axiom) and the program composition operator (union) have been\n        formalized. To give a feel for the concrete syntax, the paper\n        presents a few extracts from the Isabelle definitions and\n        proofs. It discusses a small example, two-process mutual\n        exclusion. A mechanical theory of unions of programs supports a\n        degree of compositional reasoning. Original work on extending\n        program states is presented and then illustrated through a\n        simple example involving an array of processes.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1999-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8827025,"sim:weight":0.306024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.285271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.22852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.225191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.204236,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.196891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.177264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.16771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.166875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.156968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.156239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.151042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.149702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.149201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.145629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.141892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335014,"sim:weight":0.138434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.137511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.133346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.133268,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72547,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Integrating Gandalf and HOL","bibo:abstract":"Gandalf is a first-order resolution theorem-prover, optimized\n        for speed and specializing in manipulations of large clauses. In\n        this paper I describe GANDALF TAC, a HOL tactic that proves\n        goals by calling Gandalf and mirroring the resulting proofs in\n        HOL. This call can occur over a network, and a Gandalf server\n        may be set up servicing multiple HOL clients. In addition, the\n        translation of the Gandalf proof into HOL fits in with the LCF\n        model and guarantees logical consistency.","bibo:AuthorList":["Hurd, Joe"],"dc:date":"1999-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98090,"sim:weight":0.383074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.13104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.123894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.118994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.108907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000309,"sim:weight":0.10347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.100453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.092417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.0910448,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.0861217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.0843133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.0821214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.0807788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.0742374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.0737685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65734,"sim:weight":0.0737554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.0733648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9936,"sim:weight":0.0710992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.0698136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.0647937,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72549,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Final coalgebras as greatest fixed points in ZF set\n        theory","bibo:abstract":"A special final coalgebra theorem, in the style of Aczel (1988),\n        is proved within standard Zermelo-Fraenkel set theory. Aczel’s\n        Anti-Foundation Axiom is replaced by a variant definition of\n        function that admits non-well-founded constructions. Variant\n        ordered pairs and tuples, of possibly infinite length, are\n        special cases of variant functions. Analogues of Aczel’s\n        solution and substitution lemmas are proved in the style of\n        Rutten and Turi (1993). The approach is less general than\n        Aczel’s, but the treatment of non-well-founded objects is simple\n        and concrete. The final coalgebra of a functor is its greatest\n        fixedpoint. Compared with previous work (Paulson, 1995a),\n        iterated substitutions and solutions are considered, as well as\n        final coalgebras defined with respect to parameters. The\n        disjoint sum construction is replaced by a smoother treatment of\n        urelements that simplifies many of the derivations. The theory\n        facilitates machine implementation of recursive definitions by\n        letting both inductive and coinductive definitions be\n        represented as fixedpoints. It has already been applied to the\n        theorem prover Isabelle (Paulson, 1994).","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1999-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":691224,"sim:weight":0.338361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.287799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933803,"sim:weight":0.287514,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932125,"sim:weight":0.283312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934006,"sim:weight":0.273098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931642,"sim:weight":0.272534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997462,"sim:weight":0.264232,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934014,"sim:weight":0.257498,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394216,"sim:weight":0.252667,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934408,"sim:weight":0.217733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385348,"sim:weight":0.212395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.193966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000277,"sim:weight":0.182053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513179,"sim:weight":0.177112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.174523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2040593,"sim:weight":0.164399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933446,"sim:weight":0.160528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.160292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.155143,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.154593,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72551,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"C formalised in HOL","bibo:abstract":"We present a formal semantics of the C programming language,\n        covering both the type system and the dynamic behaviour of\n        programs. The semantics is wide-ranging, covering most of the\n        language, with its most significant omission being the C\n        library. Using a structural operational semantics we specify\n        transition relations for C’s expressions, statements and\n        declarations in higher order logic.\n        \n        The consistency of our definition is assured by its\n        specification in the HOL theorem prover. With the theorem\n        prover, we have used the semantics as the basis for a set of\n        proofs of interesting theorems about C. We investigate\n        properties of expressions and statements separately.\n        \n        In our chapter of results about expressions, we begin with two\n        results about the interaction between the type system and the\n        dynamic semantics. We have both type preservation, that the\n        values produced by expressions conform to the type predicted for\n        them; and type safety, that typed expressions will not block,\n        but will either evaluate to a value, or cause undefined\n        behaviour. We then also show that two broad classes of\n        expression are deterministic. This last result is of\n        considerable practical value as it makes later verification\n        proofs significantly easier.\n        \n        In our chapter of results about statements, we prove a series of\n        derived rules that provide C with Floyd-Hoare style “axiomatic”\n        rules for verifying properties of programs. These rules are\n        consequences of the original semantics, not independently stated\n        axioms, so we can be sure of their soundness. This chapter also\n        proves the correctness of an automatic tool for constructing\n        post-conditions for loops with break and return statements.\n        \n        Finally, we perform some simple verification case studies, going\n        some way towards demonstrating practical utility for the\n        semantics and accompanying tools.\n        \n        This technical report is substantially the same as the PhD\n        thesis I submitted in August 1998. The minor differences between\n        that document and this are principally improvements suggested by\n        my examiners Andy Gordon and Tom Melham, whom I thank for their\n        help and careful reading.","bibo:AuthorList":["Norrish, Michael"],"dc:date":"1998-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9658,"sim:weight":0.48107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930772,"sim:weight":0.479007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.462379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9664,"sim:weight":0.434904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.433979,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997961,"sim:weight":0.424405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934773,"sim:weight":0.419971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.397698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.395947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932083,"sim:weight":0.392247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.391861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933815,"sim:weight":0.390296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.386794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":89999,"sim:weight":0.386378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.381005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931553,"sim:weight":0.380386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.377262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98086,"sim:weight":0.375991,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.372978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.369571,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72553,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A formal proof of Sylow’s theorem : An experiment in\n        abstract algebra with Isabelle Hol","bibo:abstract":"The theorem of Sylow is proved in Isabelle HOL. We follow the\n        proof by Wielandt that is more general than the original and\n        uses a non-trivial combinatorial identity. The mathematical\n        proof is explained in some detail leading on to the\n        mechanization of group theory and the necessary combinatorics in\n        Isabelle. We present the mechanization of the proof in detail\n        giving reference to theorems contained in an appendix. Some weak\n        points of the experiment with respect to a natural treatment of\n        abstract algebraic reasoning give rise to a discussion of the\n        use of module systems to represent abstract algebra in theorem\n        provers. Drawing from that, we present tentative ideas for\n        further research into a section concept for Isabelle.","bibo:AuthorList":["Kammüller, Florian","Paulson, Lawrence C."],"dc:date":"1998-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98128,"sim:weight":0.343343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.343065,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.298145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.29554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386661,"sim:weight":0.288496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.284374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.270325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.261764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382755,"sim:weight":0.254344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46229,"sim:weight":0.230273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.229468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50351,"sim:weight":0.217249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568223,"sim:weight":0.213712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":334817,"sim:weight":0.207955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.196015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151801,"sim:weight":0.192719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":287045,"sim:weight":0.186368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49011,"sim:weight":0.185126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.180563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.178142,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72555,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Secure sessions from weak secrets","bibo:abstract":"Sometimes two parties who share a weak secret k (such as a\n        password) wish to share a strong secret s (such as a session\n        key) without revealing information about k to a (possibly\n        active) attacker. We assume that both parties can generate\n        strong random numbers and forget secrets, and present three\n        protocols for secure strong secret sharing, based on RSA,\n        Diffie-Hellman and El-Gamal. As well as being simpler and\n        quicker than their predecessors, our protocols also have\n        slightly stronger security properties: in particular, they make\n        no cryptographic use of s and so impose no subtle restrictions\n        upon the use which is made of s by other protocols.","bibo:AuthorList":["Roe, Michael","Christianson, Bruce","Wheeler, David"],"dc:date":"1998-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1023853,"sim:weight":0.300358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960711,"sim:weight":0.282365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":728843,"sim:weight":0.277439,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116755,"sim:weight":0.257519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397465,"sim:weight":0.257067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116448,"sim:weight":0.250147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":728793,"sim:weight":0.235928,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894328,"sim:weight":0.228446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390229,"sim:weight":0.221047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1117279,"sim:weight":0.215699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397386,"sim:weight":0.210849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003711,"sim:weight":0.210101,"sim:AssociationMethod":"similarity_cosine"},{"identifier":823734,"sim:weight":0.200219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":973002,"sim:weight":0.19897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917431,"sim:weight":0.19643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757511,"sim:weight":0.189331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":758202,"sim:weight":0.185737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.172843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899149,"sim:weight":0.171999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729000,"sim:weight":0.17099,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72557,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The inductive approach to verifying cryptographic\n        protocols","bibo:abstract":"Informal arguments that cryptographic protocols are secure can\n        be made rigorous using inductive definitions. The approach is\n        based on ordinary predicate calculus and copes with\n        infinite-state systems. Proofs are generated using Isabelle/HOL.\n        The human effort required to analyze a protocol can be as little\n        as a week or two, yielding a proof script that takes a few\n        minutes to run.\n        \n        Protocols are inductively defined as sets of traces. A trace is\n        a list of communication events, perhaps comprising many\n        interleaved protocol runs. Protocol descriptions incorporate\n        attacks and accidental losses. The model spy knows some private\n        keys and can forge messages using components decrypted from\n        previous traffic. Three protocols are analyzed below: Otway-Rees\n        (which uses shared-key encryption), Needham-Schroeder (which\n        uses public-key encryption), and a recursive protocol (which is\n        of variable length).\n        \n        One can prove that event ev always precedes event ev′ or that\n        property P holds provided X remains secret. Properties can be\n        proved from the viewpoint of the various principals: say, if A\n        receives a final message from B then the session key it conveys\n        is good.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1998-02","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"L C Paulson. (1998). The inductive approach to verifying cryptographic protocols.","authors":[],"bibo:shortTitle":"The inductive approach to verifying cryptographic protocols.","dc:date":"1998","refDocId":72557}],"similarities":[{"identifier":691217,"sim:weight":0.380142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691087,"sim:weight":0.372793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.370364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.34075,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.335907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.332848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397476,"sim:weight":0.304795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.288601,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999810,"sim:weight":0.280869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102472,"sim:weight":0.280077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.273543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102482,"sim:weight":0.268607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.262616,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397393,"sim:weight":0.261044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.251239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.241809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.237026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.229071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47360,"sim:weight":0.227744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":690964,"sim:weight":0.226831,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72559,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A generic tableau prover and its integration with\n        Isabelle","bibo:abstract":"A generic tableau prover has been implemented and integrated\n        with Isabelle. It is based on leantap but is much more\n        complicated, with numerous modifications to allow it to reason\n        with any supplied set of tableau rules. It has a higher-order\n        syntax in order to support the binding operators of set theory;\n        unification is first-order (extended for bound variables in\n        obvious ways) instead of higher-order, for simplicity.\n        \n        When a proof is found, it is returned to Isabelle as a list of\n        tactics. Because Isabelle verifies the proof, the prover can cut\n        corners for efficiency’s sake without compromising soundness.\n        For example, it knows almost nothing about types.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1998-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8827025,"sim:weight":0.310976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277521,"sim:weight":0.246197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.244854,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.227766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.226583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.223798,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.214716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.214398,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.212962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.211296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.197747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.189811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.163995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.150713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286472,"sim:weight":0.147948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.14325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932107,"sim:weight":0.142341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65322,"sim:weight":0.141773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.137368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.126151,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72561,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Inductive analysis of the internet protocol\n        TLS","bibo:abstract":"Internet browsers use security protocols to protect confidential\n        messages. An inductive analysis of TLS (a descendant of SSL 3.0)\n        has been performed using the theorem prover Isabelle. Proofs are\n        based on higher-order logic and make no assumptions concerning\n        beliefs or finiteness. All the obvious security goals can be\n        proved; session resumption appears to be secure even if old\n        session keys have been compromised. The analysis suggests modest\n        changes to simplify the protocol.\n        \n        TLS, even at an abstract level, is much more complicated than\n        most protocols that researchers have verified. Session keys are\n        negotiated rather than distributed, and the protocol has many\n        optional parts. Nevertheless, the resources needed to verify TLS\n        are modest. The inductive approach scales up.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1997-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":778372,"sim:weight":0.386253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9425318,"sim:weight":0.334287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":707449,"sim:weight":0.31984,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918854,"sim:weight":0.298104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691087,"sim:weight":0.288061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902500,"sim:weight":0.229719,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.222148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":823734,"sim:weight":0.215431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.181827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.179211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":904407,"sim:weight":0.177429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397393,"sim:weight":0.175764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.173704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1442,"sim:weight":0.168987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":695480,"sim:weight":0.165426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.164986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116448,"sim:weight":0.164869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.161229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109103,"sim:weight":0.159341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729000,"sim:weight":0.158762,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72563,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An architecture for scalable and deterministic video\n        servers","bibo:abstract":"A video server is a storage system that can provide a repository\n        for continuous media (CM) data and sustain CM stream delivery\n        (playback or recording) through networks. The voluminous nature\n        of CM data demands a video server to be scalable in order to\n        serve a large number of concurrent client requests. In addition,\n        deterministic services can be provided by a video server for\n        playback because the characteristics of variable bit rate (VBR)\n        video can be analysed in advance and used in run-time admission\n        control (AC) and data retrieval.\n        \n        Recent research has made gigabit switches a reality, and the\n        cost/performance ratio of microprocessors and standard PCs is\n        dropping steadily. It would be more cost effective and flexible\n        to use off-the-shelf components inside a video server with a\n        scalable switched network as the primary interconnect than to\n        make a special purpose or massively parallel multiprocessor\n        based video server. This work advocates and assumes such a\n        scalable video server structure in which data is striped to\n        multiple peripherals attached directly to a switched network.\n        \n        However, most contemporary distributed file systems do not\n        support data distribution across multiple networked nodes, let\n        alone providing quality of service (QoS) to CM applications at\n        the same time. It is the observation of this dissertation that\n        the software system framework for network striped video servers\n        is as important as the scalable hardware architecture itself.\n        This leads to the development of a new system architecture,\n        which is scalable, flexible and QoS aware, for scalable and\n        deterministic video servers. The resulting srchitecture is\n        called Cadmus from sCAlable and Deterministic MUlitmedia\n        Servers.\n        \n        Cadmus also provides integrated solutions to AC and actual QoS\n        enforcement in storage nodes. This is achieved by considering\n        resources such as CPU buffer, disk, and network, simultaneously\n        but not independently and by including both real-time (RT) and\n        non-real-time (NRT) activities, In addition, the potential to\n        smooth the variability of VBR videos using read-ahead under\n        client buffer constraints is identified. A new smoothing\n        algorithm is presented, analysed, and incorporated into the\n        Cadmus architecture.\n        \n        A prototype implementation of Cadmus has been constructed based\n        on distributed object computing and hardware modules directly\n        connected to an Asynchronous Transfer Mode (ATM) network.\n        Experiments were performed to evaluate the implementation and\n        demonstrate the utility and feasibility of the architecture and\n        its AC criteria.","bibo:AuthorList":["Shi, Feng"],"dc:date":"1997-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1549838,"sim:weight":0.339737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":120725,"sim:weight":0.331846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.313937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.261754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.261393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43143,"sim:weight":0.25841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.232283,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.229774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.224128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.223579,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.222607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.221417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151982,"sim:weight":0.218345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.21546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.211896,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.209922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.20797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.20773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707868,"sim:weight":0.206183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.20062,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72566,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On two formal analyses of the Yahalom\n        protocol","bibo:abstract":"The Yahalom protocol is one of those analyzed by Burrows et al.\n        in the BAN paper. Based upon their analysis, they have proposed\n        modifications to make the protocol easier to understand and\n        analyze. Both versions of Yahalom have now been proved, using\n        Isabelle/HOL, to satisfy strong security goals. The mathematical\n        reasoning behind these machine proofs is presented informally.\n        \n        The new proofs do not rely on a belief logic; they use an\n        entirely different formal model, the inductive method. They\n        confirm the BAN analysis and the advantages of the proposed\n        modifications. The new proof methods detect more flaws than BAN\n        and analyze protocols in finer detail, while remaining broadly\n        consistent with the BAN principles. In particular, the proofs\n        confirm the explicitness principle of Abadi and Needham.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1997-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":691217,"sim:weight":0.252061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691087,"sim:weight":0.238233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":690967,"sim:weight":0.222417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.221137,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.204099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.193292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691151,"sim:weight":0.183868,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.171292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.168723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.168232,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74219,"sim:weight":0.159759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1442,"sim:weight":0.152589,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.149043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.147652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.144437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.141246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.140197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.140051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.139404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.136058,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72568,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Should your specification language be typed?","bibo:abstract":"Most specification languages have a type system. Type systems\n        are hard to get right, and getting them wrong can lead to\n        inconsistencies. Set theory can serve as the basis for a\n        specification language without types. This possibility, which\n        has been widely overlooked, offers many advantages. Untyped set\n        theory is simple and is more flexible than any simple typed\n        formalism. Polymorphism, overloading, and subtyping can make a\n        type system more powerful, but at the cost of increased\n        complexity, and such refinements can never attain the\n        flexibility of having no types at all. Typed formalisms have\n        advantages too, stemming from the power of mechanical type\n        checking. While types serve little purpose in hand proofs, they\n        do help with mechanized proofs. In the absence of verification,\n        type checking can catch errors in specifications. It may be\n        possible to have the best of both worlds by adding typing\n        annotations to an untyped specification language.\n        \n        We consider only specification languages, not programming\n        languages.","bibo:AuthorList":["Lamport, Leslie","Paulson, Lawrence C."],"dc:date":"1997-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1351913,"sim:weight":0.398499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.388782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.387409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.381562,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.340689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.327959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276405,"sim:weight":0.311418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279372,"sim:weight":0.275684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276432,"sim:weight":0.245864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.244718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276302,"sim:weight":0.241016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.237429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.232483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931666,"sim:weight":0.222382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276303,"sim:weight":0.22021,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276311,"sim:weight":0.210337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.20813,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16262,"sim:weight":0.207199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.196973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276306,"sim:weight":0.189818,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72569,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An abstract dynamic semantics for C","bibo:abstract":"This report is a presentation of a formal semantics for the C\n        programming language. The semantics has been defined\n        operationally in a structured semantics style and covers the\n        bulk of the core of the language. The semantics has been\n        developed in a theorem prover (HOL), where some expected\n        consequences of the language definition","bibo:AuthorList":["Norrish, Michael"],"dc:date":"1997-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.434499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.428344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10494,"sim:weight":0.387777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.383121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.381521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.345258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.340512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.336811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.276524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.266641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.257931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.246919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.205373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931471,"sim:weight":0.186018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.185964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933301,"sim:weight":0.173613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65319,"sim:weight":0.166361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.163538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933776,"sim:weight":0.16307,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.160732,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72571,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Video-augmented environments","bibo:abstract":"In the future, the computer will be thought of more as an\n        assistant than as a tool, and users will increasingly expect\n        machines to make decisions on their behalf. As with a human\n        assistant, a machine’s ability to make informed choices will\n        often depend on the extent of its knowledge of activities in the\n        world around it. Equipping personal computers with a large\n        number of sensors for monitoring their environment is, however,\n        expensive and inconvenient, and a preferable solution would\n        involve a small number of input devices with a broad scope of\n        application. Video cameras are ideally suited to many realworld\n        monitoring applications for this reason. In addition, recent\n        reductions in the manufacturing costs of simple cameras will\n        soon make their widespread deployment in the home and office\n        economically viable. The use of video as an input device also\n        allows the creation of new types of user-interface, more\n        suitable in some circumstances than those afforded by the\n        conventional keyboard and mouse.\n        \n        This thesis examines some examples of these ‘Video-Augmented\n        Environments’ and related work, and then describes two\n        applications in detail. The first, a ‘software cameraman’, uses\n        the analysis of one video stream to control the display of\n        another. The second, ‘BrightBoard’, allows a user to control a\n        computer by making marks on a conventional whiteboard, thus\n        ‘augmenting’ the board with many of the facilities common to\n        electronic documents, including the ability to fax, save, print\n        and email the image of the board. The techniques which were\n        found to be useful in the construction of these applications are\n        common to many systems which monitor real-world video, and so\n        they were combined in a toolkit called ‘Vicar’. This provides an\n        architecture for ‘video plumbing’, which allows standard\n        videoprocessing components to be connected together under the\n        control of a scripting language. It is a single application\n        which can be programmed to create a variety of simple\n        Video-Augmented Environments, such as those described above,\n        without the need for any recompilation, and so should simplify\n        the construction of such applications in the future. Finally,\n        opportunities for further exploration on this theme are\n        discussed.","bibo:AuthorList":["Stafford-Fraser, James Quentin"],"dc:date":"1997-04","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"Q Stafford-Fraser. (1996). Video augmented environments\u0027,","authors":[],"bibo:shortTitle":"Video augmented environments\u0027,","dc:date":"1996","refDocId":72571},{"rawReferenceText":"Q Stafford-Fraser. (1996). Video augmented environments\u0027,","authors":[],"bibo:shortTitle":"Video augmented environments\u0027,","dc:date":"1996","refDocId":72571}],"similarities":[{"identifier":8930481,"sim:weight":0.554774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.54106,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386251,"sim:weight":0.494295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.490855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14328,"sim:weight":0.459563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":776195,"sim:weight":0.454985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44852,"sim:weight":0.454943,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932867,"sim:weight":0.450825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.437274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1000108,"sim:weight":0.41564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998247,"sim:weight":0.387113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":966689,"sim:weight":0.385215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81859,"sim:weight":0.368262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932204,"sim:weight":0.367871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.356097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934265,"sim:weight":0.349489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.348964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46714,"sim:weight":0.336615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47179,"sim:weight":0.326298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151791,"sim:weight":0.315555,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72574,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanized proofs for a recursive authentication\n        protocol","bibo:abstract":"A novel protocol has been formally analyzed using the prover\n        Isabelle/HOL, following the inductive approach described in\n        earlier work. There is no limit on the length of a run, the\n        nesting of messages or the number of agents involved. A single\n        run of the protocol delivers session keys for all the agents,\n        allowing neighbours to perform mutual authentication. The basic\n        security theorem states that session keys are correctly\n        delivered to adjacent pairs of honest agents, regardless of\n        whether other agents in the chain are compromised. The\n        protocol’s complexity caused some difficulties in the\n        specification and proofs, but its symmetry reduced the number of\n        theorems to prove.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1997-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102468,"sim:weight":0.296614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691087,"sim:weight":0.291323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.283652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.27026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116448,"sim:weight":0.27018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.267068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691217,"sim:weight":0.263189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982268,"sim:weight":0.261873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.243623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397393,"sim:weight":0.242564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102472,"sim:weight":0.239766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999810,"sim:weight":0.231824,"sim:AssociationMethod":"similarity_cosine"},{"identifier":695480,"sim:weight":0.227223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.21839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.198859,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102482,"sim:weight":0.177155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.176367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899511,"sim:weight":0.174115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4184279,"sim:weight":0.171549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.165872,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72575,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanized proofs of security protocols:\n        Needham-Schroeder with public keys","bibo:abstract":"The inductive approach to verifying security protocols,\n        previously applied to shared-key encryption, is here applied to\n        the public key version of the Needham-Schroeder protocol. As\n        before, mechanized proofs are performed using Isabelle/HOL. Both\n        the original, flawed version and Lowe’s improved version are\n        studied; the properties proved highlight the distinctions\n        between the two versions. The results are compared with previous\n        analyses of the same protocol. The analysis reported below\n        required only 30 hours of the author’s time. The proof scripts\n        execute in under three minutes.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1997-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1549572,"sim:weight":0.260018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691087,"sim:weight":0.242092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691217,"sim:weight":0.240938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":690967,"sim:weight":0.235769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":877716,"sim:weight":0.232154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.231451,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.216961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.21245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041272,"sim:weight":0.206846,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1039281,"sim:weight":0.196352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.193852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.19243,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.192272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397476,"sim:weight":0.186784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.184637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":649491,"sim:weight":0.181499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":823734,"sim:weight":0.181049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":728793,"sim:weight":0.178926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.173125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.173037,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72577,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Proving properties of security protocols by\n        induction","bibo:abstract":"Security protocols are formally specified in terms of traces,\n        which may involve many interleaved protocol runs. Traces are\n        defined inductively. Protocol descriptions model accidental key\n        losses as well as attacks. The model spy can send spoof messages\n        made up of components decrypted from previous traffic.\n        \n        Correctness properties are verified using the proof tool\n        Isabelle/HOL. Several symmetric-key protocols have been studied,\n        including Needham-Schroeder, Yahalom and Otway-Rees. A new\n        attack has been discovered in a variant of Otway-Rees (already\n        broken by Mao and Boyd). Assertions concerning secrecy and\n        authenticity have been proved.\n        \n        The approach rests on a common theory of messages, with three\n        operators. The operator “parts” denotes the components of a set\n        of messages. The operator “analz” denotes those parts that can\n        be decrypted with known keys. The operator “synth” denotes those\n        messages that can be expressed in terms of given components. The\n        three operators enjoy many algebraic laws that are invaluable in\n        proofs.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1996-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":691087,"sim:weight":0.29266,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102482,"sim:weight":0.291049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.282955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102470,"sim:weight":0.248842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.242577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691217,"sim:weight":0.242034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5844677,"sim:weight":0.237881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.234393,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.232786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.21661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.216133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999810,"sim:weight":0.204915,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397393,"sim:weight":0.202521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":690967,"sim:weight":0.200197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102472,"sim:weight":0.195291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.194269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.193817,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397465,"sim:weight":0.192814,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48339,"sim:weight":0.189954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":690964,"sim:weight":0.188206,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72578,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Tool support for logics of programs","bibo:abstract":"Proof tools must be well designed if they are to be more\n        effective than pen and paper. Isabelle supports a range of\n        formalisms, two of which are described (higher-order logic and\n        set theory). Isabelle’s representation of logic is influenced by\n        logic programming: its “logical variables” can be used to\n        implement step-wise refinement. Its automatic proof procedures\n        are based on search primitives that are directly available to\n        users. While emphasizing basic concepts, the article also\n        discusses applications such as an approach to the analysis of\n        security protocols.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1996-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":386777,"sim:weight":0.357745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.353095,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277356,"sim:weight":0.352555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.344311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.328925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.31596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.314641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.309773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999812,"sim:weight":0.303824,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934019,"sim:weight":0.302984,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.296463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.288633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98078,"sim:weight":0.287656,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.285272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.284505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276303,"sim:weight":0.28308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.276193,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826893,"sim:weight":0.273879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.272471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279137,"sim:weight":0.262634,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72579,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"OASIS : An open architecture for secure interworking\n        services","bibo:abstract":"An emerging requirement is for applications and distributed\n        services to cooperate or inter-operate. Mechanisms have been\n        devised to hide the heterogeneity of the host operating systems\n        and abstract the issues of distribution and object location.\n        However, in order for systems to inter-operate securely there\n        must also be mechanisms to hide differences in security policy,\n        or at least negotiate between them.\n        \n        This would suggest that a uniform model of access control is\n        required. Such a model must be extremely flexible with respect\n        to the specification of policy, as different applications have\n        radically different needs. In a widely distributed environment\n        this situation is exacerbated by the differing requirements of\n        different organisations, and in an open environment there is a\n        need to interwork with organisations using alternative security\n        mechanisms.\n        \n        Other proposals for the interworking of security mechanisms have\n        concentrated on the enforcement of access policy, and neglected\n        the concerns of freedom of expression of this policy. For\n        example it is common to associate each request with a user\n        identity, and to use this as the only parameter when performing\n        access control. This work describes an architectural approach to\n        security. By reconsidering the role of the client and the\n        server, we may reformulate access control issues in terms of\n        client naming.\n        \n        We think of a client as obtaining a name issued by a service;\n        either based on credentials already held by the client, or by\n        delegation from another client. A grammar has been devised that\n        allows the conditions under which a client may assume a name to\n        be specified, and the conditions under which use of the name\n        will be revoked. This allows complex security policies to be\n        specified that define how clients of a service may interact with\n        each other (through election, delegation and revocation), how\n        clients interact with a service (by invoking operations or\n        receiving events) and how clients and services may\n        inter-operate. (For example, a client of a Login service may\n        become a client of a file service.)\n        \n        This approach allows great flexibility when integrating a number\n        of services, and reduces the mismatch of policies common in\n        heterogeneous systems. A flexible security definition is\n        meaningless if not backed by a robust and efficient\n        implementation. In this thesis we present a systems architecture\n        that can be implemented efficiently, but that allows individual\n        services to ‘fine tune’ the trade-offs between security,\n        efficiency and freedom of policy expression. The architecture is\n        inherently distributed and scalable, and includes mechanisms for\n        rapid and selective revocation of privileges which may cascade\n        between services and organisations.","bibo:AuthorList":["Hayton, Richard"],"dc:date":"1996-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931434,"sim:weight":0.451115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100616,"sim:weight":0.416779,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709994,"sim:weight":0.353196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.33358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.331771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934231,"sim:weight":0.322874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997492,"sim:weight":0.314519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.31189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43147,"sim:weight":0.303049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43080,"sim:weight":0.301816,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187618,"sim:weight":0.299788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.299281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.299258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933440,"sim:weight":0.295258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.289745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.288863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101269,"sim:weight":0.286757,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26045,"sim:weight":0.285998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.285015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.284272,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72580,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Design and implementation of an autostereoscopic camera\n        system","bibo:abstract":"An autostereoscopic display provides the viewer with a\n        three-dimensional image without the need for special glasses,\n        and allows the user to look around objects in the image by\n        moving the head left-right. The time-multiplexed autostereo\n        display developed at the University of Cambridge has been in\n        operation since late 1991.\n        \n        An autostereoscopic camera system has been designed and\n        implemented. It is capable of taking video input from up to\n        sixteen cameras, and multiplexing these into a video output\n        stream with a pixel rate an order of magnitude faster than the\n        individual input streams. Testing of the system with eight\n        cameras and a Cambridge Autostereo Display has produced\n        excellent live autostereoscopic video.\n        \n        This report describes the design of this camera system which has\n        been successfully implemented and demonstrated. Problems which\n        arose during this process are discussed, and a comparison with\n        similar systems made.","bibo:AuthorList":["Dodgson, N.A.","Moore, J.R."],"dc:date":"1996-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":66639,"sim:weight":0.394164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55509,"sim:weight":0.375902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934771,"sim:weight":0.34916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98708,"sim:weight":0.34534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101234,"sim:weight":0.339597,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998247,"sim:weight":0.324011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932506,"sim:weight":0.313569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932532,"sim:weight":0.309628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931625,"sim:weight":0.293132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929808,"sim:weight":0.290895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108083,"sim:weight":0.262725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653040,"sim:weight":0.261298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.259399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56544,"sim:weight":0.256268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23975,"sim:weight":0.252786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2771229,"sim:weight":0.247061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":176864,"sim:weight":0.243663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":340552,"sim:weight":0.234797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2734377,"sim:weight":0.233962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.229781,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72581,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Generic automatic proof tools","bibo:abstract":"This paper explores a synthesis between two distinct traditions\n        in automated reasoning: resolution and interaction. In\n        particular it discusses Isabelle, an interactive theorem prover\n        based upon a form of resolution. It aims to demonstrate the\n        value of proof tools that, compared with traditional resolution\n        systems, seem absurdly limited. Isabelle’s classical reasoner\n        searches for proofs using a tableau approach. The reasoner is\n        generic: it accepts rules proved in applied theories, involving\n        defined connectives. New constants are not reduced to\n        first-order logic; the reasoner","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1996-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932911,"sim:weight":0.263164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.25995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.24111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.236437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276303,"sim:weight":0.228652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.225216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.223586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73890,"sim:weight":0.221647,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.215583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.206877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.206568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":280153,"sim:weight":0.205578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.205003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.20225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.199365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.19581,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.194334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.188078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.185463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.163241,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72582,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A simple formalization and proof for the mutilated chess\n        board","bibo:abstract":"The impossibility of tiling the mutilated chess board has been\n        formalized and verified using Isabelle. The formalization is\n        concise because it is expressed using inductive definitions. The\n        proofs are straightforward except for some lemmas concerning\n        finite cardinalities. This exercise is an object lesson in\n        choosing a good formalization. is applicable in a variety of\n        domains.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1996-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":66626,"sim:weight":0.201783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12727,"sim:weight":0.192901,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.155361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.144415,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.13202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.129082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.125424,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040258,"sim:weight":0.123604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.117385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2734385,"sim:weight":0.116044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.115476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.108255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.106136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98127,"sim:weight":0.102446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.0996426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.0990903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.0985794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.092919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386661,"sim:weight":0.0875877,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.0863517,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72584,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanising set theory: cardinal arithmetic and the\n        axiom of choice","bibo:abstract":"Fairly deep results of Zermelo-Fraenkel (ZF) set theory have\n        been mechanised using the proof assistant Isabelle. The results\n        concern cardinal arithmetic and the Axiom of Choice (AC). A key\n        result about cardinal multiplication is K*K\u003dK, where K is any\n        infinite cardinal. Proving this result required developing\n        theories of orders, order-isomorphisms, order types, ordinal\n        arithmetic, cardinals, etc.; this covers most of Kunen, Set\n        Theory, Chapter I. Furthermore, we have proved the equivalence\n        of 7 formulations of the Well-ordering Theorem and 20\n        formulations of AC; this covers the first two chapters of Rubin\n        and Rubin, Equivalents of the Axiom of Choice. The definitions\n        used in the proofs are largely faithful in style to the original\n        mathematics.","bibo:AuthorList":["Paulson, Larry","Grabczewski, Krzysztof"],"dc:date":"1995-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1394216,"sim:weight":0.274685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49011,"sim:weight":0.269265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.260876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.260777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18275,"sim:weight":0.248002,"sim:AssociationMethod":"similarity_cosine"},{"identifier":280153,"sim:weight":0.242146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85002,"sim:weight":0.235136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84891,"sim:weight":0.225487,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85056,"sim:weight":0.188542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.187389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279134,"sim:weight":0.175821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2040593,"sim:weight":0.173925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040189,"sim:weight":0.168084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.166759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.16568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.163713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145648,"sim:weight":0.160275,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2768523,"sim:weight":0.158917,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.157755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2768522,"sim:weight":0.157458,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72586,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A comparison of HOL-ST and Isabelle/ZF","bibo:abstract":"The use of higher order logic (simple type theory) is often\n        limited by its restrictive type system. Set theory allows many\n        constructions on sets that are not possible on types in higher\n        order logic. This paper presents a comparison of two theorem\n        provers supporting set theory, namely HOL-ST and Isabelle/ZF,\n        based on a formalization of the inverse limit construction of\n        domain theory; this construction cannot be formalized in higher\n        order logic directly. We argue that whilst the combination of\n        higher order logic and set theory in HOL-ST has advantages over\n        the first order set theory in Isabelle/ZF, the proof\n        infrastructure of Isabelle/ZF has better support for set theory\n        proofs than HOL-ST. Proofs in Isabelle/ZF are both considerably\n        shorter and easier to write.","bibo:AuthorList":["Agerholm, Sten"],"dc:date":"1995-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98090,"sim:weight":0.416708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.315968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.253131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.203937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.19141,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2040593,"sim:weight":0.189555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.181838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.155919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.151228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.150624,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.142584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.13412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.130401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.124585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.123893,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18275,"sim:weight":0.123652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.119956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.119852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.118891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.118537,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72588,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On the calculation of explicit polymetres","bibo:abstract":"Computer scientists take an interest in objects or events which\n        can be counted, grouped, timed and synchronised. The\n        computational problems involved with the interpretation and\n        notation of musical rhythm are therefore of particular interest,\n        as the most complex time-stamped structures yet devised by\n        humankind are to be found in music notation. These problems are\n        brought into focus when considering explicit polymetric\n        notation, which is the concurrent use of different time\n        signatures in music notation. While not in common use the\n        notation can be used to specify complicated cross-rhythms,\n        simple versus compound metres, and unequal note values without\n        the need for tuplet notation. From a computational point of\n        view, explicit polymetric notation is a means of specifying\n        synchronisation relationships amongst multiple time-stamped\n        streams. Human readers of explicit polymetic notation use the\n        time signatures together with the layout of barlines and musical\n        events as clues to determine the performance. However, if the\n        aim is to lay out the notation (such as might be required by an\n        automatic music notation processor), the location of barlines\n        and musical events will be unknown, and it is necessary to\n        calculate them given only the information conveyed by the time\n        signatures. Similar problems arise when trying to perform the\n        notation (i.e. animate the specification) in real-time. Some\n        problems in the interpretation of explicit polymetric notation\n        are identified and a solution is proposed. Two different\n        interpretations are distinguished, and methods for their\n        automatic calculation are given. The solution given may be\n        applied to problems which involve the synchronisation or phase\n        adjustment of multiple independent threads of time-stamped\n        objects.","bibo:AuthorList":["Clocksin, W.F."],"dc:date":"1995-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":44235,"sim:weight":0.271319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.257406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1363,"sim:weight":0.244955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109278,"sim:weight":0.239313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58504,"sim:weight":0.234407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999700,"sim:weight":0.231788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108391,"sim:weight":0.231157,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43193,"sim:weight":0.223628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57319,"sim:weight":0.222093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84933,"sim:weight":0.218758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145594,"sim:weight":0.213637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26742,"sim:weight":0.20785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101332,"sim:weight":0.191258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58823,"sim:weight":0.188086,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1507968,"sim:weight":0.185194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.183293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86557,"sim:weight":0.179367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108303,"sim:weight":0.177152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.170805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.170801,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72590,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A case study of co-induction in Isabelle","bibo:abstract":"The consistency of the dynamic and static semantics for a small\n        functional programming language was informally proved by R.\n        Milner and M. Tofte. The notions of co-inductive definitions and\n        the associated principle of co-induction played a pivotal role\n        in the proof. With emphasis on co-induction, the work presented\n        here deals with the formalisation of this result in the generic\n        theorem prover Isabelle.","bibo:AuthorList":["Frost, Jacob"],"dc:date":"1995-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8827025,"sim:weight":0.274182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.265056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.240833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.187299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.186076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.167154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.158024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.157131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.151221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.144022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.142113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276306,"sim:weight":0.135022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":280153,"sim:weight":0.131633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.131108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85137,"sim:weight":0.128632,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.127423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.127188,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.126743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65305,"sim:weight":0.124033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.123325,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72592,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Simple, proven approaches to text retrieval","bibo:abstract":"This technical note describes straightforward techniques for\n        document indexing and retrieval that have been solidly\n        established through extensive testing and are easy to apply.\n        They are useful for many different types of text material, are\n        viable for very large files, and have the advantage that they do\n        not require special skills or training for searching, but are\n        easy for end users.","bibo:AuthorList":["Robertson, S.E.","Spärck Jones, K."],"dc:date":"1994-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1615779,"sim:weight":0.316278,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.310553,"sim:AssociationMethod":"similarity_cosine"},{"identifier":94116,"sim:weight":0.308652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.284166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.277204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98750,"sim:weight":0.268987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18898,"sim:weight":0.268009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934124,"sim:weight":0.257675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105375,"sim:weight":0.248564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998594,"sim:weight":0.215452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.213105,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998617,"sim:weight":0.212059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15620,"sim:weight":0.200524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997910,"sim:weight":0.199842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933209,"sim:weight":0.189382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4158997,"sim:weight":0.188499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":6481,"sim:weight":0.184626,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23402,"sim:weight":0.18072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.17735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51473,"sim:weight":0.176177,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72594,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Two cryptographic notes","bibo:abstract":"A large block DES-like algorithm\n        \n        DES was designed to be slow in software. We give here a DES type\n        of code which applies directly to single blocks comprising two\n        or more words of 32 bits. It is thought to be at least as secure\n        as performing DES separately on two word blocks, and has the\n        added advantage of not requiring chaining etc. It is about\n        8m/(12+2m) times as fast as DES for an m word block and has a\n        greater gain for Feistel codes where the number of rounds is\n        greater. We use the name GDES for the codes we discuss. The\n        principle can be used on any Feistel code.\n        \n        TEA, a Tiny Encryption Algorithm\n        \n        We design a short program which will run on most machines and\n        encypher safely. It uses a large number of iterations rather\n        than a complicated program. It is hoped that it can easily be\n        translated into most languages in a compatible way. The first\n        program is given below. It uses little set up time and does a\n        weak non linear iteration enough rounds to make it secure. There\n        are no preset tables or long set up times. It assumes 32 bit\n        words.","bibo:AuthorList":["Wheeler, David","Needham, Roger"],"dc:date":"1994-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":918846,"sim:weight":0.302609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.281625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.271304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764492,"sim:weight":0.260956,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.250692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.243243,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901721,"sim:weight":0.239503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.234863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":728836,"sim:weight":0.232566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.229235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003711,"sim:weight":0.228966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757450,"sim:weight":0.226902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26422,"sim:weight":0.226013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.224206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.216054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.213271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937442,"sim:weight":0.209836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997781,"sim:weight":0.20933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.208139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.205722,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72596,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Merging HOL with set theory","bibo:abstract":"Set theory is the standard foundation for mathematics, but the\n        majority of general purpose mechanized proof assistants support\n        versions of type theory (higher order logic). Examples include\n        Alf, Automath, Coq, Ehdm, HOL, IMPS, Lambda, LEGO, Nuprl, PVS\n        and Veritas. For many applications type theory works well and\n        provides for specification the benefits of type-checking that\n        are well known in programming. However, there are areas where\n        types get in the way or seem unmotivated. Furthermore, most\n        people with a scientific or engineering background already know\n        set theory, whereas type theory may appear inaccessible and so\n        be an obstacle to the uptake of proof assistants based on it.\n        This paper describes some experiments (using HOL) in combining\n        set theory and type theory; the aim is to get the best of both\n        worlds in a single system. Three approaches have been tried, all\n        based on an axiomatically specified type V of ZF-like sets: (i)\n        HOL is used without any additions besides V; (ii) an embedding\n        of the HOL logic into V is provided; (iii) HOL axiomatic\n        theories are automatically translated into set-theoretic\n        definitional theories. These approaches are illustrated with two\n        examples: the construction of lists and a simple lemma in group\n        theory.","bibo:AuthorList":["Gordon, Mike"],"dc:date":"1994-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98090,"sim:weight":0.55433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.260761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.188786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.185497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.185145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.185136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.179406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.179286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.177387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.172622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.165126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18280,"sim:weight":0.160934,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.16032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.160064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.159729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.158381,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.157367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.14977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187692,"sim:weight":0.14827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.145478,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72598,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Operating system support for quality of\n        service","bibo:abstract":"The deployment of high speed, multiservice networks within the\n        local area has meant that it has become possible to deliver\n        continuous media data to a general purpose workstation. This, in\n        conjunction with the increasing speed of modern microprocessors,\n        means that it is now possible to write application programs\n        which manipulate continuous media in real-time. Unfortunately,\n        current operating systems do not provide the resource management\n        facilities which are required to ensure the timely execution of\n        such applications.\n        \n        This dissertation presents a flexible resource management\n        paradigm, based on the notion of Quality of Service, with which\n        it is possible to provide the scheduling support required by\n        continuous media applications. The mechanisms which are required\n        within an operating system to support this paradigm are\n        described, and the design and implementation of a prototypical\n        kernel which implements them is presented.\n        \n        It is shown that, by augmenting the interface between an\n        application and the operating system, the application can be\n        informed of varying resource availabilities, and can make use of\n        this information to vary the quality of its results. In\n        particular an example decoder application is presented, which\n        makes use of such information and exploits some of the\n        fundamental properties of continuous media data to trade video\n        image quality for the amount of processor time which it\n        receives.","bibo:AuthorList":["Hyden, Eoin Andrew"],"dc:date":"1994-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43309,"sim:weight":0.49048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.422882,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43152,"sim:weight":0.378837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.364683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999730,"sim:weight":0.361887,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930990,"sim:weight":0.34732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43143,"sim:weight":0.343035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.321705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664602,"sim:weight":0.314677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43088,"sim:weight":0.303541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.296261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.289116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.284614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.283442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998042,"sim:weight":0.277212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26045,"sim:weight":0.275507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998077,"sim:weight":0.266959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43082,"sim:weight":0.266123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932494,"sim:weight":0.26408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70171,"sim:weight":0.262487,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72600,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Belief revision and dialogue management in information\n        retrieval","bibo:abstract":"This report describes research to evaluate a theory of belief\n        revision proposed by Galliers in the context of\n        information-seeking interaction as modelled by Belkin, Brooks\n        and Daniels and illustrated by user-librarian dialogues. The\n        work covered the detailed assessment and development, and\n        computational implementation and testing, of both the belief\n        revision theory and the information retrieval model. Some\n        features of the belief theory presented problems, and the\n        original ‘multiple expert’ retrieval model had to be drastically\n        modified to support rational dialogue management. But the\n        experimental results showed that the characteristics of\n        literature seeking interaction could be successfully captured by\n        the belief theory, exploiting important elements of the\n        retrieval model. Thus, though the system’s knowledge and\n        dialogue performance were very limited, it provides a useful\n        base for further research. The report presents all aspects of\n        the research in detail, with particular emphasis on the\n        implementation of belief and intention revision, and the\n        integration of revision with domain reasoning and dialogue\n        interaction.","bibo:AuthorList":["Logan, Brian","Reece, Steven","Cawsey, Alison","Galliers, Julia","Spärck Jones, Karen"],"dc:date":"1994-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":77388,"sim:weight":0.245459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397090,"sim:weight":0.211317,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930691,"sim:weight":0.207225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43146,"sim:weight":0.198483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664520,"sim:weight":0.194276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933321,"sim:weight":0.193941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1339,"sim:weight":0.192082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26271,"sim:weight":0.185146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383475,"sim:weight":0.175259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934619,"sim:weight":0.171883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47010,"sim:weight":0.169138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.167684,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183850,"sim:weight":0.166648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1666302,"sim:weight":0.166217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.160439,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48424,"sim:weight":0.16022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43090,"sim:weight":0.159828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930908,"sim:weight":0.159638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81183,"sim:weight":0.157253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383613,"sim:weight":0.156126,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72602,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Video mail retrieval using voice: report on keyword\n        definition and data collection (deliverable report on VMR task\n        No. 1)","bibo:abstract":"This report describes the rationale, design, collection and\n        basic statistics of the initial training and test database for\n        the Cambridge Video Mail Retrieval (VMR) project. This database\n        is intended to support both training for the wordspotting\n        processes and testing for the document searching methods using\n        these that are being developed for the project’s message\n        retrieval task.","bibo:AuthorList":["Jones, G.J.F.","Foote, J.T.","Spärck Jones, K.","Young, S.J."],"dc:date":"1994-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932506,"sim:weight":0.269299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934124,"sim:weight":0.258349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932532,"sim:weight":0.256792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757749,"sim:weight":0.207797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997941,"sim:weight":0.182406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998247,"sim:weight":0.173722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933209,"sim:weight":0.164516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.16228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26701,"sim:weight":0.15672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84877,"sim:weight":0.154723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55406,"sim:weight":0.153437,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.151503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931513,"sim:weight":0.14512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997502,"sim:weight":0.14463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549876,"sim:weight":0.143565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":82168,"sim:weight":0.143333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57517,"sim:weight":0.132905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43137,"sim:weight":0.129247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105051,"sim:weight":0.124703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":7533,"sim:weight":0.123952,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72604,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A concrete final coalgebra theorem for ZF set\n        theory","bibo:abstract":"A special final coalgebra theorem, in the style of Aczel (1988),\n        is proved within standard Zermelo-Fraenkel set theory. Aczel’s\n        Anti-Foundation Axiom is replaced by a variant definition of\n        function that admits non-well-founded constructions. Variant\n        ordered pairs and tuples, of possibly infinite length, are\n        special cases of variant functions. Analogues of Aczel’s\n        Solution and Substitution Lemmas are proved in the style of\n        Rutten and Turi (1993).\n        \n        The approach is less general than Aczel’s; non-well-founded\n        objects can be modelled only using the variant tuples and\n        functions. But the treatment of non-well-founded objects is\n        simple and concrete. The final coalgebra of a functor is its\n        greatest fixedpoint. The theory is intended for machine\n        implementation and a simple case of it is already implemented\n        using the theorem prover Isabelle.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1994-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98983,"sim:weight":0.304562,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933803,"sim:weight":0.303003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.290122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932125,"sim:weight":0.28801,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931642,"sim:weight":0.261497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394216,"sim:weight":0.251953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934014,"sim:weight":0.22452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385348,"sim:weight":0.222878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.208588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934006,"sim:weight":0.203271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98537,"sim:weight":0.173177,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.17254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.172178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49011,"sim:weight":0.169226,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934408,"sim:weight":0.166758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.16428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.161995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.160761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513179,"sim:weight":0.159351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2040593,"sim:weight":0.159055,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72606,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Interacting with paper on the DigitalDesk","bibo:abstract":"In the 1970’s Xerox PARC developed the “desktop metaphor,” which\n        made computers easy to use by making them look and act like\n        ordinary desks and paper. This led visionaries to predict the\n        “paperless office” would dominate within a few years, but the\n        trouble with this prediction is that people like paper too much.\n        It is portable, tactile, universally accepted, and easier to\n        read than a screen. Today, we continue to use paper, and\n        computers produce more of it than they replace.\n        \n        Instead of trying to use computers to replace paper, the\n        DigitalDesk takes the opposite approach. It keeps the paper, but\n        uses computers to make it more powerful. It provides a Computer\n        Augmented Environment for paper.\n        \n        The DigitalDesk is built around an ordinary physical desk and\n        can be used as such, but it has extra capabilities. A video\n        camera is mounted above the desk, pointing down at the work\n        surface. This camera’s output is fed through a system that can\n        detect where the user is pointing, and it can read documents\n        that are placed on the desk. A computer-driven electronic\n        projector is also mounted above the desk, allowing the system to\n        project electronic objects onto the work surface and onto real\n        paper documents — something that can’t be done with flat display\n        panels or rear-projection. The system is called DigitalDesk\n        because it allows pointing with the fingers.\n        \n        Several applications have been prototyped on the DigitalDesk.\n        The first was a calculator where a sheet of paper such as an\n        annual report can be placed on the desk allowing the user to\n        point at numbers with a finger or pen. The camera reads the\n        numbers off the paper, recognizes them, and enters them into the\n        display for further calculations. Another is a translation\n        system which allows users to point at unfamiliar French words to\n        get their English definitions projected down next to the paper.\n        A third is a paper-based paint program (PaperPaint) that allows\n        users to sketch on paper using traditional tools, but also be\n        able to select and paste these sketches with the camera and\n        projector to create merged paper and electronic documents. A\n        fourth application is the DoubleDigitalDesk, which allows remote\n        colleagues to “share” their desks, look at each other’s paper\n        documents and sketch on them remotely.\n        \n        This dissertation introduces the concept of Computer Augmented\n        Environments, describes the DigitalDesk and applications for it,\n        and discusses some of the key implementation issues that need to\n        be addressed to make this system work. It describes a toolkit\n        for building DigitalDesk applications, and it concludes with\n        some more ideas for future work.","bibo:AuthorList":["Wellner, Pierre David"],"dc:date":"1994-03","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"P Wellner. (1993). Interacting with paper on the DigitalDesk\u0027,","authors":[],"bibo:shortTitle":"Interacting with paper on the DigitalDesk\u0027,","dc:date":"1993","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","refDocId":72606},{"rawReferenceText":"P Wellner. (1993). Interacting with paper on the DigitalDesk.","authors":[],"bibo:shortTitle":"Interacting with paper on the DigitalDesk.","dc:date":"1993","refDocId":72606},{"rawReferenceText":"P Wellner. (1993). Interacting with paper on the DigitalDesk.","authors":[],"bibo:shortTitle":"Interacting with paper on the DigitalDesk.","dc:date":"1993","refDocId":72606},{"rawReferenceText":"P Wellner. (1993). Interacting with paper on the DigitalDesk\u0027,","authors":[],"bibo:shortTitle":"Interacting with paper on the DigitalDesk\u0027,","dc:date":"1993","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P -Wellner. (1993). Interacting with Paper on the DigitalDesk.","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk.","dc:date":"1993","doi":"10.1145/159544.159630","refDocId":72606},{"rawReferenceText":"P Wellner. (1993). Interacting with paper on the DigitalDesk\u0027,","authors":[],"bibo:shortTitle":"Interacting with paper on the DigitalDesk\u0027,","dc:date":"1993","refDocId":72606},{"rawReferenceText":"P Wellner. (1993). Interacting with paper on the DigitalDesk\u0027,","authors":[],"bibo:shortTitle":"Interacting with paper on the DigitalDesk\u0027,","dc:date":"1993","refDocId":72606},{"rawReferenceText":"P Wellner. (1994). Interacting with Paper on the DigitalDesk,","authors":[],"bibo:shortTitle":"Interacting with Paper on the DigitalDesk,","dc:date":"1994","refDocId":72606}],"similarities":[{"identifier":14328,"sim:weight":0.494083,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.462047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":966689,"sim:weight":0.417851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53645,"sim:weight":0.368781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.336796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70123,"sim:weight":0.335977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.332637,"sim:AssociationMethod":"similarity_cosine"},{"identifier":11127,"sim:weight":0.325374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59326,"sim:weight":0.325334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99050,"sim:weight":0.319952,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151791,"sim:weight":0.314164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70138,"sim:weight":0.31309,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.312928,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930638,"sim:weight":0.310081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99483,"sim:weight":0.307078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99366,"sim:weight":0.302452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933590,"sim:weight":0.301467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":109220,"sim:weight":0.295433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151793,"sim:weight":0.295379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10716,"sim:weight":0.294263,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72608,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The temporal properties of English conditionals and\n        modals","bibo:abstract":"This thesis deals with the patterns of temporal reference\n        exhibited by conditional and modal sentences in English, and\n        specifically with the way that past and present tenses can\n        undergo deictic shift in these contexts. This shifting behaviour\n        has consequences both for the semantics of tense and for the\n        semantics of conditionals and modality.\n        \n        Asymmetries in the behaviour of the past and present tenses\n        under deictic shift are explained by positing a primary and\n        secondary deictic centre for tenses. The two deictic centres,\n        the assertion time and the verification time, are given\n        independent motivation through an information based view of\n        tense. This holds that the tense system not only serves to\n        describe the way that the world changes over time, but also the\n        way that information about the world changes. Information change\n        takes place in two stages. First, it is asserted that some fact\n        holds. And then, either at the same time or later, it is\n        verified that is assertion is correct.\n        \n        Typically, assertion and verification occur simultaneously, and\n        most sentences convey verified information. Modals and\n        conditionals allow delayed assertion and verification. “If A,\n        then B” means roughly: suppose you were now to assert A; if and\n        when A is verified, you will be in a position to assert B, and\n        in due course this assertion will also be verified. Since A and\n        B will both be tensed clauses, the shifting of the primary and\n        secondary deictic centres leads to shifted interpretations of\n        the two clauses.\n        \n        The thesis presents a range of temporal properties of indicative\n        and subjunctive conditionals that have not previously been\n        discussed, and shows how they can be explained. A logic is\n        presented for indicative conditionals, based around an extension\n        of intuitionistic logic to allow for both verified and\n        unverified assertions. This logic naturally gives rise to three\n        forms of epistemic modality, corresponding to “must”, “may” and\n        “will”.","bibo:AuthorList":["Crouch, Richard"],"dc:date":"1994-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43741,"sim:weight":0.274191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103705,"sim:weight":0.260702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43367,"sim:weight":0.25716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108466,"sim:weight":0.254744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43361,"sim:weight":0.237073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664720,"sim:weight":0.232678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710234,"sim:weight":0.230139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387303,"sim:weight":0.229005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2794277,"sim:weight":0.228723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72886,"sim:weight":0.22553,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73260,"sim:weight":0.223184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108337,"sim:weight":0.218161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.204886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108324,"sim:weight":0.202472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.201529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.195748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43353,"sim:weight":0.194255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145931,"sim:weight":0.193733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.191563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43142,"sim:weight":0.19128,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72611,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A fixedpoint approach to implementing (co)inductive\n        definitions (updated version)","bibo:abstract":"Several theorem provers provide commands for formalizing\n        recursive datatypes or inductively defined sets. This paper\n        presents a new approach, based on fixedpoint definitions. It is\n        unusually general: it admits all monotone inductive definitions.\n        It is conceptually simple, which has allowed the easy\n        implementation of mutual recursion and other conveniences. It\n        also handles coinductive definitions: simply replace the least\n        fixedpoint by a greatest fixedpoint. This represents the first\n        automated support for coinductive definitions.\n        \n        The method has been implemented in Isabelle’s formalization of\n        ZF set theory. It should be applicable to any logic in which the\n        Knaster-Tarski Theorem can be proved. The paper briefly\n        describes a method of formalizing non-well-founded data\n        structures in standard ZF set theory.\n        \n        Examples include lists of n elements, the accessible part of a\n        relation and the set of primitive recursive functions. One\n        example of a coinductive definition is bisimulations for lazy\n        lists. Recursive datatypes are examined in detail, as well as\n        one example of a “codatatype”: lazy lists. The appendices are\n        simple user’s manuals for this Isabelle/ZF package.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1995-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":106942,"sim:weight":0.280004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.273533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.253902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.24503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279146,"sim:weight":0.238489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.227691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279137,"sim:weight":0.223452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933554,"sim:weight":0.201003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.197712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286966,"sim:weight":0.193344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.171612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.170999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.165771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.164112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276306,"sim:weight":0.145903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.142827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.141067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.139557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98127,"sim:weight":0.138436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98083,"sim:weight":0.137899,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72613,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Set theory for verification: II : Induction and\n        recursion","bibo:abstract":"A theory of recursive definitions has been mechanized in\n        Isabelle’s Zermelo-Fraenkel (ZF) set theory. The objective is to\n        support the formalization of particular recursive definitions\n        for use in verification, semantics proofs and other\n        computational reasoning.\n        \n        Inductively defined sets are expressed as least fixedpoints,\n        applying the Knaster-Tarski Theorem over a suitable set.\n        Recursive functions are defined by well-founded recursion and\n        its derivatives, such as transfinite recursion. Recursive data\n        structures are expressed by applying the Knaster-Tarski Theorem\n        to a set that is closed under Cartesian product and disjoint\n        sum.\n        \n        Worked examples include the transitive closure of a relation,\n        lists, variable-branching trees and mutually recursive trees and\n        forests. The Schröder-Bernstein Theorem and the soundness of\n        propositional logic are proved in Isabelle sessions.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1993-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":276302,"sim:weight":0.294517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933554,"sim:weight":0.284949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279146,"sim:weight":0.284868,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.277689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.252712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.214491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394216,"sim:weight":0.205294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277356,"sim:weight":0.188651,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85002,"sim:weight":0.188244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.18783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":93321,"sim:weight":0.179869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.176069,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98076,"sim:weight":0.175395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43028,"sim:weight":0.173574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276300,"sim:weight":0.170902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145648,"sim:weight":0.169731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.168371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.166875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.162367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2040593,"sim:weight":0.157487,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72615,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A case study of co-induction in Isabelle HOL","bibo:abstract":"The consistency of the dynamic and static semantics for a small\n        functional programming language was informally proved by R.\n        Milner and M. Tofte. The notions of co-inductive definitions and\n        the associated principle of co-induction played a pivotal role\n        in the proof. With emphasis on co-induction, the work presented\n        here deals with the formalisation of this result in the\n        higher-order logic of the generic theorem prover Isabelle.","bibo:AuthorList":["Frost, Jacob"],"dc:date":"1993-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8827025,"sim:weight":0.293413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.263869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.243864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.241946,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.236949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.176338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.166996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.166628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98127,"sim:weight":0.165971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.163543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276306,"sim:weight":0.157282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.153314,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.14752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.14661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279146,"sim:weight":0.146405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934413,"sim:weight":0.145386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.142334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.135596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.133493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.131248,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72617,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Co-induction and co-recursion in higher-order\n        logic","bibo:abstract":"A theory of recursive and corecursive definitions has been\n        developed in higher-order logic (HOL) and mechanised using\n        Isabelle. Least fixedpoints express inductive data types such as\n        strict lists; greatest fixedpoints express co-inductive data\n        types, such as lazy lists. Well-founded recursion expresses\n        recursive functions over inductive data types; co-recursion\n        expresses functions that yield elements of co-inductive data\n        types. The theory rests on a traditional formalization of\n        infinite trees. The theory is intended for use in specification\n        and verification. It supports reasoning about a wide range of\n        computable functions, but it does not formalize their\n        operational semantics and can express noncomputable functions\n        also. The theory is demonstrated using lists and lazy lists as\n        examples. The emphasis is on using co-recursion to define lazy\n        list functions, and on using co-induction to reason about them.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1993-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":279137,"sim:weight":0.340838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45986,"sim:weight":0.295718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707719,"sim:weight":0.272746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.256612,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.231304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98076,"sim:weight":0.221692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276302,"sim:weight":0.197567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98080,"sim:weight":0.196593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933554,"sim:weight":0.187347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.187165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.179869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.177007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.171182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.16825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279146,"sim:weight":0.166797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98075,"sim:weight":0.162639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279134,"sim:weight":0.161804,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98078,"sim:weight":0.161697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276306,"sim:weight":0.151424,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146155,"sim:weight":0.145404,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72619,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A formalization of the process algebra CCS in high order\n        logic","bibo:abstract":"This paper describes a mechanization in higher order logic of\n        the theory for a subset of Milner’s CCS. The aim is to build a\n        sound and effective tool to support verification and reasoning\n        about process algebra specifications. To achieve this goal, the\n        formal theory for pure CCS (no value passing) is defined in the\n        interactive theorem prover HOL, and a set of proof tools, based\n        on the algebraic presentation of CCS, is provided.","bibo:AuthorList":["Nesi, Monica"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98090,"sim:weight":0.242231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.206847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.18623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.181791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884619,"sim:weight":0.18028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.180045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.175341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.166818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.165433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.159558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":950185,"sim:weight":0.157768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.156728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.156229,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.155532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.150945,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.150475,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9996,"sim:weight":0.14961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.142717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.139082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.136417,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72621,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"TouringMachines: an architecture for dynamic, rational,\n        mobile agents","bibo:abstract":"It is becoming widely accepted that neither purely reactive nor\n        purely deliberative control techniques are capable of producing\n        the range of behaviours required of intelligent computational or\n        robotic agents in dynamic, unpredictable, multi-agent worlds. We\n        present a new architecture for controlling autonomous, mobile\n        agents – building on previous work addressing reactive and\n        deliberative control methods. The proposed multi-layered control\n        architecture allows a resource-bounded, goal-directed agent to\n        react promptly to unexpected changes in its environment; at the\n        same time it enables the agent to reason predictively about\n        potential conflicts by constructing and projecting causal models\n        or theories which hypothesise other agents’ goals and\n        intentions.\n        \n        The line of research adopted is very much a pragmatic one. A\n        single, common architecture has been implemented which, being\n        extensively parametrized, allows an experimenter to study\n        functionally- and behaviourally-diverse agent configurations. A\n        principal aim of this research is to understand the role\n        different functional capabilities play in constraining an\n        agent’s behaviour under varying environmental conditions. To\n        this end, we have constructed an experimental testbed comprising\n        a simulated multi-agent world in which a variety of agent\n        configurations and behaviours have been investigated. Experience\n        with the new control architecture is described.","bibo:AuthorList":["Ferguson, Innes A."],"dc:date":"1992-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8826710,"sim:weight":0.73363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998308,"sim:weight":0.648717,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15265,"sim:weight":0.62368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934431,"sim:weight":0.623233,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998027,"sim:weight":0.620058,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.61995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934917,"sim:weight":0.617614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930911,"sim:weight":0.609389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998261,"sim:weight":0.608767,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9769,"sim:weight":0.601067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930596,"sim:weight":0.599842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998314,"sim:weight":0.594223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278029,"sim:weight":0.581773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934930,"sim:weight":0.580223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934005,"sim:weight":0.576256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225513,"sim:weight":0.568524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998255,"sim:weight":0.567286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997944,"sim:weight":0.561575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998262,"sim:weight":0.555454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86565,"sim:weight":0.554905,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72623,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Interactive program derivation","bibo:abstract":"As computer programs are increasingly used in safety critical\n        applications, program correctness is becoming more important; as\n        the size and complexity of programs increases, the traditional\n        approach of testing is becoming inadequate. Proving the\n        correctness of programs written in imperative languages is\n        awkward; functional programming languages, however, offer more\n        hope. Their logical structure is cleaner, and it is practical to\n        reason about terminating functional programs in an internal\n        logic.\n        \n        This dissertation describes the development of a logical theory\n        called TPT for reasoning about the correctness of terminating\n        functional programs, its implementation using the theorem prover\n        Isabelle, and its use in proving formal correctness. The theory\n        draws both from Martin-Löf’s work in type theory and Manna and\n        Waldinger’s work in program synthesis. It is based on classical\n        first-order logic, and it contains terms that represent classes\n        of behaviourally equivalent programs, types that denote sets of\n        terminating programs and well-founded orderings. Well-founded\n        induction is used to reason about general recursion in a natural\n        way and to separate conditions for termination from those for\n        correctness.\n        \n        The theory is implemented using the generic theorem prover\n        Isabelle, which allows correctness proofs to be checked by\n        machine and partially automated using tactics. In particular,\n        tactics for type checking use the structure of programs to\n        direct proofs. Type checking allows both the verification and\n        derivation of programs, reducing specifications of correctness\n        to sets of correctness conditions. These conditions can be\n        proved in typed first-order logic, using well-known techniques\n        of reasoning by induction and rewriting, and then lifted up to\n        TPT. Examples of program termination are asserted and proved,\n        using simple types. Behavioural specifications are expressed\n        using dependent types, and the correctness of programs asserted\n        and then proved. As a non-trivial example, a unification\n        algorithm is specified and proved correct by machine.\n        \n        The work in this dissertation clearly shows how a classical\n        theory can be used to reason about program correctness, how\n        general recursion can be reasoned about, and how programs can\n        direct proofs of correctness.","bibo:AuthorList":["Coen, Martin David"],"dc:date":"1992-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8999162,"sim:weight":0.394066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73302,"sim:weight":0.358887,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73987,"sim:weight":0.358487,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43134,"sim:weight":0.356385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74466,"sim:weight":0.348379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.300504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932107,"sim:weight":0.29736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.291659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.291042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.29008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.287614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43028,"sim:weight":0.285258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98078,"sim:weight":0.27088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98088,"sim:weight":0.258831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98083,"sim:weight":0.255918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.254461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997535,"sim:weight":0.241572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277356,"sim:weight":0.237821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.236926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.234797,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72625,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Set theory as a computational logic: I. from foundations\n        to functions","bibo:abstract":"A logic for specification and verification is derived from the\n        axioms of Zermelo-Fraenkel set theory. The proofs are performed\n        using the proof assistant Isabelle. Isabelle is generic,\n        supporting several different logics. Isabelle has the\n        flexibility to adapt to variants of set theory. Its higher-order\n        syntax supports the definition of new binding operators.\n        Unknowns in subgoals can be instantiated incrementally. The\n        paper describes the derivation of rules for descriptions,\n        relations and functions, and discusses interactive proofs of\n        Cantor’s Theorem, the Composition of Homomorphisms challenge,\n        and Ramsey’s Theorem. A generic proof assistant can stand up\n        against provers dedicated to particular logics.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1992-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8827025,"sim:weight":0.350399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.305547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.27543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.257002,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.253962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.251271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.236733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826893,"sim:weight":0.235384,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.231107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.230024,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.220826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.220023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.218173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.213334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.213185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.210518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.20863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2424328,"sim:weight":0.204045,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.203264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.2003,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72627,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Designing a universal name service","bibo:abstract":"Generally speaking, naming in computing systems deals with the\n        creation of object identifiers at all levels of system\n        architecture and the mapping among them. Two of the main\n        purposes of having names in computer systems are (a) to identify\n        objects; (b) to accomplish sharing. Without naming no computer\n        system design can be done.\n        \n        The rapid development in the technology of personal workstations\n        and computer communication networks has placed a great number of\n        demands on designing large computer naming systems. In this\n        dissertation, issues of naming in large distributed computing\n        systems are addressed. Technical aspects as well as system\n        architecture are examined. A design of a Universal Name Service\n        (UNS) is proposed and its prototype implementation is described.\n        Three major issues on designing a global naming system are\n        studied. Firstly, it is observed that none of the existing name\n        services provides enough flexibility in restructuring name\n        spaces, more research has to be done. Secondly it is observed\n        that although using stale naming data (hints) at the application\n        level is acceptable in most cases as long as it is detectable\n        and recoverable, stronger naming data integrity should be\n        maintained to provide a better guarantee of finding objects,\n        especially when a high degree of availability is required.\n        Finally, configuring the name service is usually done in an ad\n        hoc manner, leading to unexpected interruptions or a great deal\n        of human intervention when the system is reconfigured. It is\n        necessary to make a systematic study of automatic configuration\n        and reconfiguration of name services.\n        \n        This research is based on a distributed computing model, in\n        which a number of computers work cooperatively to provide the\n        service. The contributions include: (a) the construction of a\n        Globally Unique Directory Identifier (GUDI) name space. Flexible\n        name space restructuring is supported by allowing directories to\n        be added to or removed from the GUDI name space. (b) The\n        definition of a two class name service infrastructure which\n        exploits the semantics of naming. It makes the UNS replication\n        control more robust, reliable as well as highly available. (c)\n        The identification of two aspects in the name service\n        configuration: one is concerned with the replication\n        configuration, and the other is concerned with the server\n        configuration. It is notable that previous work only studied\n        these two aspects individually but not in combination. A\n        distinguishing feature of the UNS is that both issues are\n        considered at the design stage and novel methods are used to\n        allow dynamic service configuration to be done automatically and\n        safely.","bibo:AuthorList":["Ma, Chaoying"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26009,"sim:weight":0.320349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99150,"sim:weight":0.308339,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998042,"sim:weight":0.298445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.297113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101269,"sim:weight":0.296951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.296517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.284818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.268156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.266131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933440,"sim:weight":0.259968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930966,"sim:weight":0.25841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.255998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.252975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.246981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.245881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.245881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.245881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.245881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.245881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.245881,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72629,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Image resampling","bibo:abstract":"Image resampling is the process of geometrically transforming\n        digital images. This report considers several aspects of the\n        process.\n        \n        We begin by decomposing the resampling process into three\n        simpler sub-processes: reconstruction of a continuous intensity\n        surface from a discrete image, transformation of that continuous\n        surface, and sampling of the transformed surface to produce a\n        new discrete image. We then consider the sampling process, and\n        the subsidiary problem of intensity quantisation. Both these are\n        well understood, and we present a summary of existing work,\n        laying a foundation for the central body of the report where the\n        sub-process of reconstruction is studied.\n        \n        The work on reconstruction divides into four parts, two general\n        and two specific:\n        \n        1. Piecewise local polynomials: the most studied group of\n        reconstructors. We examine these, and the criteria used in their\n        design. One new derivation is of two piecewise local quadratic\n        reconstructors.\n        \n        2. Infinite extent reconstructors: we consider these and their\n        local approximations, the problem of finite image size, the\n        resulting edge effects, and the solutions to these problems.\n        Amongst the reconstructors discussed are the interpolating cubic\n        B-spline and the interpolating Bezier cubic. We derive the\n        filter kernels for both of these, and prove that they are the\n        same. Given this kernel we demonstrate how the interpolating\n        cubic B-spline can be extended from a one-dimensional to a\n        two-dimensional reconstructor, providing a considerable speed\n        improvement over the existing method of extension.\n        \n        3. Fast Fourier transform reconstruction: it has long been known\n        that the fast Fourier transform (FFT) can be used to generate an\n        approximation to perfect scaling of a sample set. Donald Fraser\n        (in 1987) took this result and generated a hybrid FFT\n        reconstructor which can be used for general transformations, not\n        just scaling. We modify Fraser’s method to tackle two major\n        problems: its large time and storage requirements, and the edge\n        effects it causes in the reconstructed intensity surface.\n        \n        4. A priori knowledge reconstruction: first considering what can\n        be done if we know how the original image was sampled, and then\n        considering what can be done with one particular class of image\n        coupled with one particular type of sampling. In this latter\n        case we find that exact reconstruction of the image is possible.\n        This is a surprising result as this class of images cannot be\n        exactly reconstructed using classical sampling theory.\n        \n        The final section of the report draws all of the strands\n        together to discuss transformations and the resampling process\n        as a whole. Of particular note here is work on how the quality\n        of different reconstruction and resampling methods can be\n        assessed.","bibo:AuthorList":["Dodgson, Neil Anthony"],"dc:date":"1992-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102613,"sim:weight":0.565625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2778557,"sim:weight":0.564638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10438,"sim:weight":0.553511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932365,"sim:weight":0.525453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083623,"sim:weight":0.52533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5852550,"sim:weight":0.522785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917980,"sim:weight":0.518008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929787,"sim:weight":0.496093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43132,"sim:weight":0.493082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225601,"sim:weight":0.484554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102868,"sim:weight":0.482664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241212,"sim:weight":0.47085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15999,"sim:weight":0.465728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767461,"sim:weight":0.457471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":729374,"sim:weight":0.455648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15949,"sim:weight":0.451009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901920,"sim:weight":0.446694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930803,"sim:weight":0.443808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1123406,"sim:weight":0.442542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58737,"sim:weight":0.439351,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72631,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A formalisation of the VHDL simulation cycle","bibo:abstract":"The VHSIC Hardware Description Language (VHDL) has been gaining\n        wide acceptance as a unifying HDL. It is, however, still a\n        language in which the only way of validating a design is by\n        careful simulation. With the aim of better understanding VHDL\u0027s\n        particular simulation process and eventually reasoning about it,\n        we have developed a formalisation of VHDL\u0027s simulation cycle for\n        a subset of the language. It has also been possible to embed our\n        semantics in the Cambridge Higher-Order Logic (HOL) system and\n        derive interesting properties about specific VHDL programs.","bibo:AuthorList":["Van Tassel, John P."],"dc:date":"1992-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":540362,"sim:weight":0.427656,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103096,"sim:weight":0.384913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47026,"sim:weight":0.236269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23722,"sim:weight":0.211473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057719,"sim:weight":0.183084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.174076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43134,"sim:weight":0.163931,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998282,"sim:weight":0.159014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934952,"sim:weight":0.152969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.14628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43245,"sim:weight":0.144897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884619,"sim:weight":0.139958,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.136964,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.133116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.132727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.125103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.125069,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.124463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.12276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933041,"sim:weight":0.11813,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72633,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"System support for multi-service traffic","bibo:abstract":"Digital network technology is now capable of supporting the\n        bandwidth requirements of diverse applications such as voice,\n        video and data (so called multi-service traffic). Some media,\n        for example voice, have specific transmission requirements\n        regarding the maximum packet delay and loss which they can\n        tolerate. Problems arise when attempting to multiplex such\n        traffic over a single channel. Traditional digital networks\n        based on the Packet- (PTM) and Synchronous- (STM) Transfer Modes\n        prove unsuitable due to their media access contention and\n        inflexible bandwidth allocation properties respectively. The\n        Asynchronous Transfer Mode (STM) has been proposed as a\n        compromise between the PTM and STM techniques. The current state\n        of multimedia research suggests that a significant amount of\n        multi-service traffic will be handled by computer operating\n        systems. Unfortunately conventional operating systems are\n        largely unsuited to such a task. This dissertation is concerned\n        with the system organisation necessary in order to extend the\n        benefits of ATM networking through the endpoint operating system\n        and up to the application level. A locally developed\n        micro-kernel, with ATM network protocol support, has been used\n        as a testbed for the ideas presented. Practical results over\n        prototype ATM networks, including the 512 MHz Cambridge Backbone\n        Network, are presented.","bibo:AuthorList":["Dixon, Michael J."],"dc:date":"1992-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":919330,"sim:weight":0.412087,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101287,"sim:weight":0.399149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.367205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.315208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":894197,"sim:weight":0.306251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549812,"sim:weight":0.300361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.298688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1130626,"sim:weight":0.273555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102618,"sim:weight":0.266998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101598,"sim:weight":0.266027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116269,"sim:weight":0.256228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.255272,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.250186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4182207,"sim:weight":0.237639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":982343,"sim:weight":0.234745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003731,"sim:weight":0.229128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101224,"sim:weight":0.225552,"sim:AssociationMethod":"similarity_cosine"},{"identifier":120725,"sim:weight":0.222687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998247,"sim:weight":0.221297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103079,"sim:weight":0.221072,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72635,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An object oriented approach to virtual memory\n        management","bibo:abstract":"Advances in computer technology are being pooled together to\n        form a new computing environment which is characterised by\n        powerful workstations with vast amounts of memory connected to\n        high speed networks. This environment will provide a large\n        number of diverse services such as multimedia communications,\n        expert systems and object-oriented databases. In order to\n        develop these complex applications in an efficient manner, new\n        interfaces are required which are simple, fast and flexible and\n        allow the programmer to use an object-oriented approach\n        throughout the design and implementation of an application.\n        Virtual memory techniques are increasingly being used to build\n        these new facilities.\n        \n        In addition since CPU speeds continue to increase faster than\n        disk speeds, an I/O bottleneck may develop in which the CPU may\n        be idle for long periods waiting for paging requests to be\n        satisfied. To overcome this problem it is necessary to develop\n        new paging algorithms that better reflect how different objects\n        are used. Thus a facility to page objects on a per-object basis\n        is required and a testbed is also needed to obtain experimental\n        data on the paging activity of different objects.\n        \n        Virtual memory techniques, previously only used in mainframe and\n        minicomputer architectures, are being employed in the memory\n        management units of modern microprocessors. With very large\n        address spaces becoming a standard feature of most systems, the\n        use of memory mapping is seen as an effective way of providing\n        greater flexibility as well as improved system efficiency.\n        \n        This thesis presents an object-oriented interface for memory\n        mapped objects. Each object has a designated object type.\n        Handles are associated with different object types and the\n        interface allows users to define and manage new object types.\n        Moving data between the object and its backing store is done by\n        user-level processes called object managers. Object managers\n        interact with the kernel via a specified interface thus allowing\n        users to build their own object managers. A framework to compare\n        different algorithms was also developed and an experimental\n        testbed was designed to gather and analyse data on the paging\n        activity of various programs. Using the testbed, conventional\n        paging algorithms were applied to different types of objects and\n        the results were compared. New paging algorithms were designed\n        and implemented for objects that are accessed in a highly\n        sequential manner.","bibo:AuthorList":["Mapp, Glenford Ezra"],"dc:date":"1992-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1145551,"sim:weight":0.336139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.328186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.285729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.27892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.254713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.245489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.237668,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98519,"sim:weight":0.23091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.227926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.21758,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2729964,"sim:weight":0.21015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998042,"sim:weight":0.209782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.203028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.20286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.202597,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.202526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101269,"sim:weight":0.201411,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.198017,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.193442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105051,"sim:weight":0.186404,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72637,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Two tutorial papers: Information retrieval \u0026\n        Thesaurus","bibo:abstract":"The first paper describes the characteristics of information\n        retrieval from documents or texts, the development and status of\n        automatic indexing and retrieval, and the actual and potential\n        relations between information retrieval and artificial\n        intelligence. The second paper discusses the properties,\n        construction and actual and potential uses of thesauri, as\n        semantic classifications or terminological knowledge bases, in\n        information retrieval and natural language processing.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"1991-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934124,"sim:weight":0.353815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":707237,"sim:weight":0.326221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757749,"sim:weight":0.323999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937446,"sim:weight":0.311585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930563,"sim:weight":0.300054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104832,"sim:weight":0.298624,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930482,"sim:weight":0.28881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932317,"sim:weight":0.279933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917627,"sim:weight":0.27477,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930714,"sim:weight":0.225289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647943,"sim:weight":0.21726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":845286,"sim:weight":0.216006,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083656,"sim:weight":0.215884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.212311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709176,"sim:weight":0.203446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138502,"sim:weight":0.185598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919301,"sim:weight":0.174625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101197,"sim:weight":0.173335,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934119,"sim:weight":0.170599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003877,"sim:weight":0.166983,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72640,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Mechanising set theory","bibo:abstract":"Set theory is today the standard foundation of mathematics, but\n        most proof development sysems (PDS) are based on type theory\n        rather than set theory. This is due in part to the difficulty of\n        reducing the rich mathematical vocabulary to the economical\n        vocabulary of the set theory. It is known how to do this in\n        principle, but traditional explanations of mathematical\n        notations in set theoretic terms do not lead themselves easily\n        to mechanical treatment.\n        \n        We advocate the representation of mathematical notations in a\n        formal system consisting of the axioms of any version of\n        ordinary set theory, such as ZF, but within the framework of\n        higher-order logic with λ-conversion (H.O.L.) rather than\n        first-order logic (F.O.L.). In this system each notation can be\n        represented by a constant, which has a higher-order type when\n        the notation binds variables. The meaning of the notation is\n        given by an axiom which defines the representing constant, and\n        the correspondence between the ordinary syntax of the notation\n        and its representation in the formal language is specified by a\n        rewrite rule. The collection of rewrite rules comprises a\n        rewriting system of a kind which is computationally well\n        behaved.\n        \n        The formal system is justified by the fact than set theory\n        within H.O.L. is a conservative extension of set theory within\n        F.O.L. Besides facilitating the representation of notations, the\n        formal system is of interestbecause it permits the use of\n        mathematical methods which do not seem to be available in set\n        theory within F.O.L.\n        \n        A PDS, called Watson, has been built to demonstrate this\n        approach to the mechanization of mathematics. Watson embodies a\n        methodology for interactive proof which provides both\n        flexibility of use and a relative guarantee of correctness.\n        Results and proofs can be saved, and can be perused and modified\n        with an ordinary text editor. The user can specify his own\n        notations as rewrite rules and adapt the mix of notations to\n        suit the problem at hand; it is easy to switch from one set of\n        notations to another. As a case study, Watson has been used to\n        prove the correctness of a latch implemented as two\n        cross-coupled nor-gates, with an approximation of time as a\n        continuum.","bibo:AuthorList":["Corella, Francisco"],"dc:date":"1991-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":85430,"sim:weight":0.313283,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.312583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.306685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.292467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.276355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929386,"sim:weight":0.275838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.273269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.267414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.266177,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.262674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16269,"sim:weight":0.2607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1507968,"sim:weight":0.243004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.239051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.23306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.226644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.220039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187692,"sim:weight":0.219167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2755110,"sim:weight":0.215223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.213534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85083,"sim:weight":0.211346,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72642,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Categorical multirelations, linear logic and petri nets\n        (draft)","bibo:abstract":"This note presents a categorical treatment of multirelations,\n        which is, in a loose sense a generalisation of both our previous\n        work on the categories GC, and of Chu’s construction A_NC\n        [Barr’79]. The main motivation for writing this note was the\n        utilisation of the category GC by Brown and Gurr [BG90] to model\n        Petri nets. We wanted to extend their work to deal with\n        multirelations, as Petri nets are usually modelled using\n        multirelations pre and post. That proved easy enough and people\n        interested mainly in concurrency theory should refer to our\n        joint work [BGdP’91], this note deals with the mathematics\n        underlying [BGdP’91]. The upshot of this work is that we build a\n        model of Intuitionistic Linear Logic (without modalities) over\n        any symmetric monoidal category C with a distinguished object\n        (N, ≤, ∘, e −∘) – a closed poset. Moreover, if the category C is\n        cartesian closed with free monoids, we build a model of\n        Intuitionistic Linear Logic with a non-trivial modality ‘!’ over\n        it.","bibo:AuthorList":["de Paiva, Valeria"],"dc:date":"1991-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.462757,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.457843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.419122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934438,"sim:weight":0.411588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934446,"sim:weight":0.402698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934270,"sim:weight":0.396225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.391347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.391347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.362557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.348558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934346,"sim:weight":0.347466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000286,"sim:weight":0.344321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000287,"sim:weight":0.33061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.328096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934461,"sim:weight":0.320347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934471,"sim:weight":0.302814,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.301657,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.297175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934427,"sim:weight":0.25395,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934348,"sim:weight":0.245539,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72644,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Transforming axioms for data types into sequential\n        programs","bibo:abstract":"A process is proposed for refining specifications of abstract\n        data types into efficient sequential implementations. The\n        process needs little manual intervention. It is split into three\n        stages, not all of which need always be carried out. The three\n        stages entail interpreting equalities as behavioural\n        equivalences, converting functions into procedures and replacing\n        axioms by programs. The stages can be performed as automatic\n        transformations which are certain to produce results that meet\n        the specifications, provided that simple conditions hold. These\n        conditions describe the adequacy of the specifications, the\n        freedom from interference between the procedures, and the mode\n        of construction of the procedures. Sufficient versions of these\n        conditions can be checked automatically. Varying the conditions\n        could produce implementations for different classes of\n        specification. Though the transformations could be automated,\n        the intermediate results, in styles of specification which cover\n        both functions and procedures, have interest in their own right\n        and may be particularly appropriate to object-oriented design.","bibo:AuthorList":["Milne, Robert"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932650,"sim:weight":0.243503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.238203,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.212055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664558,"sim:weight":0.206631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.193304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.188201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.187783,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72646,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A structured approach to the verification of low level\n        microcode","bibo:abstract":"Errors in microprograms are especially serious since all higher\n        level programs on the machine depend on the microcode. Formal\n        verification presents one avenue which may be used to discover\n        such errors. Previous systems which have been used for formally\n        verifying microcode may be categorised by the form in which the\n        microcode is supplied. Some demand that it be written in a high\n        level microprogramming language. Conventional software\n        verification techniques are then applied. Other methods allow\n        the microcode to be supplied in the form of a memory image. It\n        is treated as data to an interpreter modelling the behaviour of\n        the microarchitecture. The proof is then performed by symbolic\n        execution. A third solution is for the code to be supplied in an\n        assembly language and modelled at that level. The assembler\n        instructions are converted to commands in a modelling language.\n        The resulting program is verified using traditional software\n        verification techniques.\n        \n        In this dissertation I present a new universal microprogram\n        verification system. It achieves many of the advantages of the\n        other kinds of systems by adopting a hybrid approach. The\n        microcode is supplied as a memory image, but it is transformed\n        by the system to a high level program which may be verified\n        using standard software verification techniques. The structure\n        of the high level program is obtained from user supplied\n        documentation. I show that this allows microcode to be split\n        into small, independently validatable portions even when it was\n        not written in that way. I also demonstrate that the techniques\n        allow the complexity of detail due to the underlying\n        microarchitecture to be controlled at an early stage in the\n        validation process. I suggest that the system described would\n        combine well with other validation tools and provide help\n        throughout the firmware development cycle. Two case studies are\n        given. The first describes the verification of Gordon’s\n        computer. This example being fairly simple, provides a good\n        illustration of the techniques used by the system. The second\n        case study is concerned with the High Level Hardware Orion\n        computer which is a commercially produced machine with a fairly\n        complex microarchitecture. This example shows that the\n        techniques scale well to production microarchitectures.","bibo:AuthorList":["Curzon, Paul"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8933996,"sim:weight":0.385713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.340556,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187436,"sim:weight":0.316157,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.31417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.31049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.307649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.306756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.30306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105051,"sim:weight":0.29682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.294829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.288629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.285707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.285524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.285273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108269,"sim:weight":0.281873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.277838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187477,"sim:weight":0.27655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108579,"sim:weight":0.276072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.274901,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47026,"sim:weight":0.266747,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72648,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Dialectica categories","bibo:abstract":"This work consists of two main parts. The first one, which gives\n        it its name, presents an internal categorical version of Gödel’s\n        “Dialectica interpretation” of higher-order arithmetic. The idea\n        is to analyse the Dialectica interpretation using a cetegory DC\n        where objects are relations on objects of a basic category C and\n        maps are pairs of maps of C satisfying a pullback condition. If\n        C is finitely complete, DC exists and has a very natural\n        symmetric monoidal structure. If C is locally cartesian closed\n        then DC is symmetric monoidal closed. If we assume C with stable\n        and disjoint coproducts, DC has cartesian products and\n        weak-coproducts and satisfies a weak form of distributivity.\n        Using the structure above, DC is a categorical model for\n        intuitionistic linear logic.\n        \n        Moreover if C has free monoids then DC has cofree comonoids and\n        the corresponding comonad “!” on DC, which has some special\n        properties, can be used to model the exponential “of course!” in\n        Intuitionistic Linear Logic. The category of “!”-coalgebras is\n        isomorphic to the category of comonoids in DC and, if we assume\n        commutative monoids in C, the “!”-Kleisli category, which is\n        cartesian closed, corresponds to the Diller-Nahm variant of the\n        Dialectica interpretation.\n        \n        The second part introduces the categories GC. The objects of GC\n        are the same objects of DC, but morphisms are easier to handle,\n        since they are maps in C in opposite directions. If C is\n        finitely complete, the category GC exists. If C is cartesian\n        closed, we can define a symmetric monoidal structure and if C is\n        locally cartesian closed as well, we can define inernal homs in\n        GC that make it a symmetric monoidal closed category. Supposing\n        C with stable and disjoint coproducts, we can define cartesian\n        products and coproducts in GC and, more interesting, we can\n        define a dual operation to the tensor product bifunctor, called\n        “par”. The operation “par” is a bifunctor and has a unit “⊥”,\n        which is a dualising object. Using the internal hom and ⊥ we\n        define a contravariant functor “(−)⊥” which behaves like\n        negation and thus it is used to model linear negation. We show\n        that the category GC, with all the structure above, is a\n        categorical model for Linear Logic, but not exactly the\n        classical one.\n        \n        In the last chapter a comonad and a monad are defined to model\n        the exponentials “!” and “?”. To define these endofunctors, we\n        use Beck’s distributive laws in an interesting way. Finally, we\n        show that the Kleisli category GC! is cartesian closed and that\n        the categories DC and GC are related by a Kleisli construction.","bibo:AuthorList":["de Paiva, Valeria Correa Vaz"],"dc:date":"1991-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1393453,"sim:weight":0.403351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.325759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.325534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934348,"sim:weight":0.324526,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934438,"sim:weight":0.322634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000287,"sim:weight":0.317924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934446,"sim:weight":0.309833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99029,"sim:weight":0.292172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98070,"sim:weight":0.277054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1385348,"sim:weight":0.273683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691224,"sim:weight":0.269461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.261534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.261534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16260,"sim:weight":0.257144,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.255924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.255091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.251398,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934270,"sim:weight":0.247032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.246543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.243191,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72650,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Efficient memory-based learning for robot\n        control","bibo:abstract":"This dissertation is about the application of machine learning\n        to robot control. A system which has no initial model of the\n        robot/world dynamics should be able to construct such a model\n        using data received through its sensors—an approach which is\n        formalized here as the SAB (State-Action-Behaviour) control\n        cycle. A method of learning is presented in which all the\n        experiences in the lifetime of the robot are explicitly\n        remembered. The experiences are stored in a manner which permits\n        fast recall of the closest previous experience to any new\n        situation, thus permitting very quick predictions of the effects\n        of proposed actions and, given a goal behaviour, permitting fast\n        generation of a candidate action. The learning can take place in\n        high-dimensional non-linear control spaces with real-valued\n        ranges of variables. Furthermore, the method avoids a number of\n        shortcomings of earlier learning methods in which the controller\n        can become trapped in inadequate performance which does not\n        improve. Also considered is how the system is made resistant to\n        noisy inputs and how it adapts to environmental changes. A well\n        founded mechanism for choosing actions is introduced which\n        solves the experiment/perform dilemma for this domain with\n        adequate computational efficiency, and with fast convergence to\n        the goal behaviour. The dissertation explains in detail how the\n        SAB control cycle can be integrated into both low and high\n        complexity tasks. The methods and algorithms are evaluated with\n        numerous experiments using both real and simulated robot\n        domains. The final experiment also illustrates how a compound\n        learning task can be structured into a hierarchy of simple\n        learning tasks.","bibo:AuthorList":["Moore, Andrew William"],"dc:date":"1990-11","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"A W Moore. (1991). Efficient memory based learning for robot control.","authors":[],"bibo:shortTitle":"Efficient memory based learning for robot control.","dc:date":"1991","refDocId":72650},{"rawReferenceText":"A W Moore. (1991). Efficient memory based learning for robot control.","authors":[],"bibo:shortTitle":"Efficient memory based learning for robot control.","dc:date":"1991","refDocId":72650},{"rawReferenceText":"A W Moore. (1991). Efficient memory based learning for robot control.","authors":[],"bibo:shortTitle":"Efficient memory based learning for robot control.","dc:date":"1991","refDocId":72650}],"similarities":[{"identifier":86814,"sim:weight":0.469383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12955,"sim:weight":0.36986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709247,"sim:weight":0.315361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43344,"sim:weight":0.269927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20956,"sim:weight":0.268292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1640334,"sim:weight":0.268131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87106,"sim:weight":0.260359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.257774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932481,"sim:weight":0.256793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710696,"sim:weight":0.256082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18879,"sim:weight":0.253963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4183147,"sim:weight":0.246427,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710068,"sim:weight":0.245708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.243633,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998017,"sim:weight":0.239481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43550,"sim:weight":0.237053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.23464,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.233966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86745,"sim:weight":0.23271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931264,"sim:weight":0.232026,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72653,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Logic programming, functional programming and inductive\n        definitions","bibo:abstract":"This paper reports an attempt to combine logic and functional\n        programming. It also questions the traditional view that logic\n        programming is a form of first-order logic, arguing instead that\n        the essential nature of a logic program is an inductive\n        definition. This revised view of logic programming suggests the\n        design of a combined logic/functional language. A slow but\n        working prototype is described.","bibo:AuthorList":["Paulson, Lawrence C.","Smith, Andrew W."],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":929937,"sim:weight":0.418988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.379077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.349346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.34115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.329191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.326176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997535,"sim:weight":0.316328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277356,"sim:weight":0.302191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.279807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335611,"sim:weight":0.274916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.251722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":335609,"sim:weight":0.247228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":478165,"sim:weight":0.235216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286966,"sim:weight":0.233782,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98077,"sim:weight":0.218883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.217523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98076,"sim:weight":0.215986,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.212088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43272,"sim:weight":0.210343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276435,"sim:weight":0.20102,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72655,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Subtyping in Ponder (preliminary report)","bibo:abstract":"This note starts the formal study of the type system of the\n        functional language Ponder. Some of the problems of proving\n        soundness and completeness are discussed and some preliminary\n        results, about fragments of the type system, shown.\n        \n        It consists of 6 sections. In section 1 we review briefly\n        Ponder’s syntax and describe its typing system. In section 2 we\n        consider a very restricted fragment of the language for which we\n        can prove soundness of the type inference mechanism, but not\n        completeness. Section 3 describes possible models of this\n        fragment and some related work. Section 4 describes the\n        type-inference algorithm for a larger fragment of Ponder and in\n        section 5 we come up against some problematic examples. Section\n        6 is a summary of further work.","bibo:AuthorList":["de Paiva, Valeria C.V."],"dc:date":"1990-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2707658,"sim:weight":0.195011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.184417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65307,"sim:weight":0.170982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.168902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.164025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.159185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.156557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.150922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21797,"sim:weight":0.1507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.145494,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.140555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.139519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.139117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.13691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.135281,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.133965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.133623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.131773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.12916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106936,"sim:weight":0.128341,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72657,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Formalizing abstraction mechanisms for hardware\n        verification in higher order logic","bibo:abstract":"Recent advances in microelectronics have given designers of\n        digital hardware the potential to build devices of remarkable\n        size and complexity. Along with this however, it becomes\n        increasingly difficult to ensure that such systems are free from\n        design errors, where complete simulation of even moderately\n        sized circuits is impossible. One solution to these problems is\n        that of hardware verification, where the functional behaviour of\n        the hardware is described mathematically and formal proof is\n        used to show that the design meets rigorous specifications of\n        the intended operation.\n        \n        This dissertation therefore seeks to develop this, showing how\n        reasoning about the correctness of hardware using formal proof\n        can be achieved using fundamental abstraction mechanisms to\n        relate specifications of hardware at different levels. Therefore\n        a systematic method is described for defining any instance of a\n        wide class of concrete data types in higher order logic. This\n        process has been automated in the HOL theorem prover, and\n        provides a firm logical basis for representing data in formal\n        specifications.\n        \n        Further, these abstractions have been developed into a new\n        technique for modelling the behaviour of entire classes of\n        hardware designs. This is based on a formal representation in\n        logic for the structure of circuit designs using the recursive\n        types defined by the above method. Two detailed examples are\n        presented showing how this work can be applied in practice.\n        \n        Finally, some techniques for temporal abstraction are explained,\n        and the means for asserting the correctness of a model\n        containing time-dependent behaviour is described. This work is\n        then illustrated using a case study; the formal verification on\n        HOL of a simple ring communication network.\n        \n        [Abstract by Nicholas Cutler (librarian), as none was submitted\n        with the report.]","bibo:AuthorList":["Melham, Thomas Frederick"],"dc:date":"1990-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8999162,"sim:weight":0.427404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.402492,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.390754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.374306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.366585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930922,"sim:weight":0.36077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.357908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73302,"sim:weight":0.356644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.347343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.346041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73657,"sim:weight":0.343563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932992,"sim:weight":0.336549,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.336192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2708241,"sim:weight":0.321814,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.300699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.30068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.299323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.293214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98088,"sim:weight":0.292478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145648,"sim:weight":0.285585,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72659,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Designing a theorem prover","bibo:abstract":"The methods and principles of theorem prover design are\n        presented through an extended example. Starting with a sequent\n        calculus for first-order logic, an automatic prover (called\n        Folderol) is developed. Folderol can prove quite a few\n        complicated theorems, although its search strategy is crude and\n        limited. Folderol is coded in Standard ML and consists largely\n        of pure functions. Its complete listing is included.\n        \n        The report concludes with a survey of other research in theorem\n        proving: the Boyer/Moore theorem prover, Automath, LCF, and\n        Isabelle.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1990-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998248,"sim:weight":0.348358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.320779,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.284469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.275287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1154781,"sim:weight":0.257356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.235353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.23133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.231056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":277521,"sim:weight":0.212619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.210234,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.202181,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826714,"sim:weight":0.20096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.200271,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9771,"sim:weight":0.190239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.165407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.164382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2424328,"sim:weight":0.162969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279408,"sim:weight":0.16071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":280153,"sim:weight":0.148328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.146538,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72661,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An architecture for real-time multimedia communications\n        systems","bibo:abstract":"An architecture for real-time multimedia communications systems\n        is presented. A multimedia communication systems includes both\n        the communication protocols used to transport the real-time data\n        and also the Distributed Computing system (DCS) within which any\n        applications using these protocols must execute. The\n        architecture presented attempts to integrate these protocols\n        with the DCS in a smooth fashion in order to ease the writing of\n        multimedia applications. Two issues are identified as being\n        essential to the success of this integration: namely the\n        synchronisation of related real-time data streams, and the\n        management of heterogeneous multimedia hardware. The\n        synchronisation problem is tackled by defining explicit\n        synchronisation properties at the presentation level and by\n        providing control and synchronisation operations within the DCS\n        which operate in terms of these properties. The heterogeneity\n        problems are addressed by separating the data transport\n        semantics (protocols themselves) from the control semantics\n        (protocol interfaces). The control semantics are implemented\n        using a distributed, typed interface, scheme within the DCS\n        (i.e. above the presentation layer), whilst the protocols\n        themselves are implemented within the communication subsystem.\n        The interface between the DCS and communications subsystem is\n        referred to as the orchestration interface and can be considered\n        to lie in the presentation and session layers.\n        \n        A conforming prototype implementation is currently under\n        construction.","bibo:AuthorList":["Nicolaou, Cosmos"],"dc:date":"1990-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70181,"sim:weight":0.259078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70184,"sim:weight":0.2519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.250857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.238584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998483,"sim:weight":0.203911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998380,"sim:weight":0.194696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.192202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998509,"sim:weight":0.189737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46649,"sim:weight":0.187397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43141,"sim:weight":0.185472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.180389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.175998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.170875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.170273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57232,"sim:weight":0.166268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.165908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.165538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.16067,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.159291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664558,"sim:weight":0.156919,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72663,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Isabelle tutorial and user’s manual","bibo:abstract":"This (obsolete!) manual describes how to use the theorem prover\n        Isabelle. For beginners, it explains how to perform simple\n        single-step proofs in the built-in logics. These include\n        first-order logic, a classical sequent calculus, ZF set theory,\n        Constructie Type Theory, and higher-order logic. Each of these\n        logics is described. The manual then explains how to develop\n        advanced tactics and tacticals and how to derive rules. Finally,\n        it describes how to define new logics within Isabelle.","bibo:AuthorList":["Paulson, Lawrence C.","Nipkow, Tobias"],"dc:date":"1990-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9785,"sim:weight":0.299721,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040247,"sim:weight":0.293154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.291981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.288054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.280621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.273379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826893,"sim:weight":0.272344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.25951,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73657,"sim:weight":0.258906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.257148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.252138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.239541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74466,"sim:weight":0.237041,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.235995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.229095,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73987,"sim:weight":0.225697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.22341,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86479,"sim:weight":0.21909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934447,"sim:weight":0.218237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.216251,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72665,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Totally verified systems: linking verified software to\n        verified hardware","bibo:abstract":"We describe exploratory efforts to design and verify a compiler\n        for a formally verified microprocessor as one aspect of the\n        eventual goal of building totally verified systems. Together\n        with a formal proof of correctness for the microprocessor this\n        yields a precise and rigorously established link between the\n        semantics of the source language and the execution of compiled\n        code by the fabricated microchip. We describe in particular: (1)\n        how the limitations of real hardware influenced this proof; and\n        (2) how the general framework provided by higher order logic was\n        used to formalize the compiler correctness problem for a\n        hierarchically structured language.","bibo:AuthorList":["Joyce, Jeffrey J."],"dc:date":"1989-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8933996,"sim:weight":0.210407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934773,"sim:weight":0.197593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931277,"sim:weight":0.196913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.187736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":586550,"sim:weight":0.182631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.171231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.15856,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.157907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.157798,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.154325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.149184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.146467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.140982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.139889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710661,"sim:weight":0.139218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18910,"sim:weight":0.134578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12727,"sim:weight":0.133704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.133258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.131624,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1928531,"sim:weight":0.125554,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72667,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A formulation of the simple theory of types (for\n        Isabelle)","bibo:abstract":"Simple type theory is formulated for use with the generic\n        theorem prover Isabelle. This requires explicit type inference\n        rules. There are function, product, and subset types, which may\n        be empty. Descriptions (the eta-operator) introduce the Axiom of\n        Choice. Higher-order logic is obtained through reflection\n        between formulae and terms of type bool. Recursive types and\n        functions can be formally constructed.\n        \n        Isabelle proof procedures are described. The logic appears\n        suitable for general mathematics as well as computational\n        problems.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1989-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98816,"sim:weight":0.351665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.347466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.285712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72990,"sim:weight":0.263462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.251839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73657,"sim:weight":0.248269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276302,"sim:weight":0.246542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86476,"sim:weight":0.245755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276306,"sim:weight":0.242176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":276303,"sim:weight":0.230815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.222671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.217189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.216433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.208667,"sim:AssociationMethod":"similarity_cosine"},{"identifier":93321,"sim:weight":0.207989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74148,"sim:weight":0.200004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.197831,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.197165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.195788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.193764,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72669,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Some types with inclusion properties in ∀, →,\n        μ","bibo:abstract":"This paper concerns the ∀, →, μ type system used in the\n        non-strict functional programming language Ponder. While the\n        type system is akin to the types of Second Order\n        Lambda-calculus, the absence of type application makes it\n        possible to construct types with useful inclusion relationships\n        between them.\n        \n        To illustrate this, the paper contains definitions of a natural\n        numbers type with many definable subtypes, and of a record type\n        with inheritance.","bibo:AuthorList":["Fairbairn, Jon"],"dc:date":"1989-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":73987,"sim:weight":0.280039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.268988,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72990,"sim:weight":0.268132,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.266601,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.256561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.254912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.248279,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.230222,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.230186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.22596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.223315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.222088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.217996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86476,"sim:weight":0.213948,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73350,"sim:weight":0.201064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.193476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":11975,"sim:weight":0.183835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.162255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.152428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.1513,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72671,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A matrix key distribution system","bibo:abstract":"A new key distribution scheme is presented. It is based on the\n        distinctive idea that lets each node have a set of keys of which\n        it shares a distinct subset with every other node. This has the\n        advantage that the numbers of keys that must be distributed and\n        maintained are reduced by a square root factor; moreover, two\n        nodes can start conversation with virtually no delay. Two\n        versions of the scheme are given. Their performance and security\n        analysis shows it is a practical solution to some key\n        distribution problems.","bibo:AuthorList":["Gong, Li","Wheeler, David J."],"dc:date":"1988-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":707381,"sim:weight":0.485026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":873071,"sim:weight":0.456679,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1041462,"sim:weight":0.449643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026341,"sim:weight":0.434139,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082668,"sim:weight":0.430456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1027100,"sim:weight":0.429669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948845,"sim:weight":0.405844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":842991,"sim:weight":0.395937,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937359,"sim:weight":0.391114,"sim:AssociationMethod":"similarity_cosine"},{"identifier":938777,"sim:weight":0.385015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960711,"sim:weight":0.370584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990893,"sim:weight":0.367912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1027106,"sim:weight":0.36623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138782,"sim:weight":0.354147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820049,"sim:weight":0.349827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916787,"sim:weight":0.34739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":955811,"sim:weight":0.340841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":859992,"sim:weight":0.339444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991000,"sim:weight":0.339237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":749080,"sim:weight":0.331208,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72673,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Inference in a natural language front end for\n        databases","bibo:abstract":"This report describes the implementation and initial testing of\n        knowledge representation and inference capabilities within a\n        modular database front end designed for transportability.","bibo:AuthorList":["Copestake, Ann","Spärck Jones, Karen"],"dc:date":"1989-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1145734,"sim:weight":0.565259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.560254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.559783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667618,"sim:weight":0.553406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664919,"sim:weight":0.552252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661926,"sim:weight":0.531677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.508453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72959,"sim:weight":0.49726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.495537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73150,"sim:weight":0.485401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.48084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54709,"sim:weight":0.476607,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.472483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.462519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43428,"sim:weight":0.408154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.381244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":113814,"sim:weight":0.36245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146039,"sim:weight":0.321906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43158,"sim:weight":0.29586,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2804348,"sim:weight":0.261586,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72675,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Tailoring output to the user: What does user modelling\n        in generation mean?","bibo:abstract":"This paper examines the implications for linguistic output\n        generation tailored to the interactive system user, of earlier\n        analyses of the components of user modelling and of the\n        constraints realism imposes on modelling. Using a range of\n        detailed examples it argues that tailoring based only on the\n        actual dialogue and on the decision model required for the\n        system task is quite adequate, and that more ambitious modelling\n        is both dangerous and unnecessary.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"1988-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":77388,"sim:weight":0.333767,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55999,"sim:weight":0.266485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46901,"sim:weight":0.247628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187477,"sim:weight":0.238082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.233738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99250,"sim:weight":0.218457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.208957,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997502,"sim:weight":0.201078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41275,"sim:weight":0.200426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.195186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":221107,"sim:weight":0.189432,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146064,"sim:weight":0.183072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.175173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48414,"sim:weight":0.174688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.167894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70514,"sim:weight":0.167063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18196,"sim:weight":0.163542,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108269,"sim:weight":0.163125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44432,"sim:weight":0.161465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43146,"sim:weight":0.161308,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72677,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Computational morphology of English","bibo:abstract":"This paper describes an implemented computer program which uses\n        various kinds of linguistic knowledge to analyse existing or\n        novel word forms in terms of their components. Three main types\n        of knowledge are required (for English): knowledge about\n        spelling or phonological changes consequent upon affixation\n        (notice we are only dealing with isolated word forms); knowledge\n        about the syntactic or semantic properties of affixation (i.e.\n        inflexional and derivational morphology), and knowledge about\n        the properties of the stored base forms of words (which in our\n        case are always themselves words, rather than more abstract\n        entities). These three types of information are stored as data\n        files, represented in exactly the form a linguist might employ.\n        These data files are then compiled by the system to produce a\n        run-time program which will analyse arbitrary word forms\n        presented to it in a way consistent with the original linguistic\n        description.","bibo:AuthorList":["Pulman, S.G.","Russell, G.J.","Ritchie, G.D.","Black, A.W."],"dc:date":"1989-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98933,"sim:weight":0.34245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187976,"sim:weight":0.271587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2794230,"sim:weight":0.259827,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70270,"sim:weight":0.256993,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70990,"sim:weight":0.247253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187930,"sim:weight":0.239708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187931,"sim:weight":0.239708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187932,"sim:weight":0.239708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85535,"sim:weight":0.231364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101293,"sim:weight":0.228673,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75510,"sim:weight":0.220965,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710234,"sim:weight":0.218417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43860,"sim:weight":0.215433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70387,"sim:weight":0.210718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102658,"sim:weight":0.204192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101322,"sim:weight":0.203679,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.203259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108929,"sim:weight":0.201912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187933,"sim:weight":0.200694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187934,"sim:weight":0.200694,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72678,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Efficient data sharing","bibo:abstract":"As distributed computing systems become widespread, the sharing\n        of data between people using a large number of computers becomes\n        more important. One of the most popular ways to facilitate this\n        sharing is to provide a common file system, accessible by all\n        the machines on the network. This approach is simple and\n        reasonably effective, but the performance of the system can\n        degrade significantly if the number of machines is increased. By\n        using a hierarchical network, and arranging that machines\n        typically access files stored in the same section of the network\n        it is possible to build very large systems. However, there is\n        still a limit on the number of machines that can share a single\n        file server and a single network effectively.\n        \n        A good way to decrease network and server load is to cache file\n        data on client machines, so that data need not be fetched from\n        the centralized server each time it is accessed. This technique\n        can improve the performance of a distributed file system and is\n        used in a number of working systems. However, caching brings\n        with it the overhead of maintaining consistency, or cache\n        coherence. That is, each machine in the network must see the\n        same data in its cache, even though one machine may be modifying\n        the data as others are reading it. The problem is to maintain\n        consistency without dramatically increasing the number of\n        messages that must be passed between machines on the network.\n        \n        Some existing file systems take a probabilistic approach to\n        consistency, some explicitly prevent the activities that can\n        cause inconsistency, while others provide consistency only at\n        the some cost in functionality or performance. In this\n        dissertation, I examine how distributed file systems are\n        typically used, and the degree to which caching might be\n        expected to improve performance. I then describe a new file\n        system that attempts to cache significantly more data than other\n        systems, provides strong consistency guarantees, yet requires\n        few additional messages for cache management.\n        \n        This new file-system provides fine-grain sharing of a file\n        concurrently open on multiple machines on the network, at the\n        granularity of a single byte. It uses a simple system of\n        multiple-reader, single writer locks held in a centralized\n        server to ensure cache consistency. The problem of maintaining\n        client state in a centralized server are solved by using\n        efficient data structures and crash recovery techniques.","bibo:AuthorList":["Burrows, Michael"],"dc:date":"1988-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931434,"sim:weight":0.361161,"sim:AssociationMethod":"similarity_cosine"},{"identifier":268168,"sim:weight":0.355239,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.346467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102656,"sim:weight":0.305962,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999088,"sim:weight":0.298285,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.298215,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.287295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.283801,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.275199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.262949,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.261304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116788,"sim:weight":0.260575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998016,"sim:weight":0.259677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102734,"sim:weight":0.248739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.24799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.244305,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.232873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.232639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.23245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.224981,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72681,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Simulation as an aid to verification using the HOL\n        theorem prover","bibo:abstract":"The HOL theorem proving system, developed by Mike Gordon at the\n        University of Cambridge, is a mechanism of higher order logic,\n        primarily intended for conducting formal proofs of digital\n        system designs. In this paper we show that hardware\n        specifications written in HOL logic can be executed to enable\n        simulation as a means of supporting formal proof. Specifications\n        of a small microprocessor are described, showing how HOL logic\n        sentences can be transformed into executable code with minimum\n        risk of introducing inconsistencies. A clean and effective\n        optimisation strategy is recommended to make the executable\n        specifications practical.","bibo:AuthorList":["Camilleri, Albert John"],"dc:date":"1988-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98090,"sim:weight":0.580084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.251515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.246178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.202768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.197185,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.196098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.194575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.186783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.183409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.182247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.180823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.17735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.165889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.165068,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934042,"sim:weight":0.158532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12727,"sim:weight":0.15054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.149569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98135,"sim:weight":0.14775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512117,"sim:weight":0.144672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997912,"sim:weight":0.139128,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72683,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Extending coloured petri nets","bibo:abstract":"Jensen’s Coloured Petri Nets (CP-nets) are taken as the starting\n        point for the development of a specification technique for\n        complex concurrent systems. To increase its expressive power\n        CP-nets are extended by including capacity and inhibitor\n        functions. A class of extended CP-nets, known as P-nets, is\n        defined that includes the capacity function and the threshold\n        inhibitor extension. The inhibitor extension is defined in a\n        totally symmetrical way to that of the usual pre place map (or\n        incidence function). Thus the inhibitor and pre place maps may\n        be equated by allowing a marking to be purged by a single\n        transition occurrence, useful when specifying the abortion of\n        various procedures. A chapter is devoted to developing the\n        theory and notation for the purging of a place’s marking or part\n        of its marking.\n        \n        Two transformations from P-nets to CP-nets are presented and it\n        is proved that they preserve interleaving behaviour. These are\n        based on the notion of complementary places defined for PT-nets\n        and involve the definition and proof of a new extended\n        complementary place invariant for CP-nets\n        \n        The graphical form of P-nets, known as a P-Graph, is presented\n        formally and draws upon the theories developed for algebraic\n        specification. Arc inscriptions are multiples of tuples of terms\n        generated by a many-sorted signature. Transition conditions are\n        Boolean expressions derived from the same signature. An\n        interpretation of the P-Graph is given in terms of a\n        corresponding P-net. The work is similar to that of Vautherin\n        but includes the inhibitor and capacity extension and a number\n        of significant differences. in the P-Graph concrete sets are\n        associated with places, rather than sorts and likewise there are\n        concrete initial marking and capacity functions. Vautherin\n        associates equations with transitions rather than the more\n        general Boolean expressions. P-Graphs are useful for\n        specification at a concrete level. Classes of the P-Graph, known\n        as Many-sorted Algebraic Nets and Many-sorted\n        Predicate/Transition nets, are defined and illustrated by a\n        number of examples. An extended place capacity notation is\n        developed to allow for the convenient representation of resource\n        bounds in the graphical form.\n        \n        Some communications-oriented examples are presented including\n        queues and the Demon Game of international standards fame.\n        \n        The report concludes with a discussion of future work. In\n        particular, an abstract P-Graph is defined that is very similar\n        to Vautherin’s Petri net-like schema, but including the capacity\n        and inhibitor extensions and associating boolean expressions\n        with transitions. This will be useful for more abstract\n        specifications (eg classes of communications protocols) and for\n        their analysis.\n        \n        It is believed that this is the first coherent and formal\n        presentation of these extensions in the literature.","bibo:AuthorList":["Billington, Jonathan"],"dc:date":"1988-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.545575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.535905,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082283,"sim:weight":0.524834,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.48701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765399,"sim:weight":0.475221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.466678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.449632,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.437293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.437293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.431881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.308026,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710548,"sim:weight":0.253818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664657,"sim:weight":0.212507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.207999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84974,"sim:weight":0.207092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.205636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.205421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.174135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.168942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.165441,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72685,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Experience with Isabelle : A generic theorem\n        prover","bibo:abstract":"The theorem prover Isabelle is described briefly and informally.\n        Its historical development is traced from Edinburgh LCF to the\n        present day. The main issues are unification, quantifiers, and\n        the representation of inference rules. The Edinburgh Logical\n        Framework is also described, for a comparison with Isabelle. An\n        appendix presents several Isabelle logics, including set theory\n        and Constructive Type Theory, with examples of theorems.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1988-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2111921,"sim:weight":0.332563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.322864,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.31838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.311307,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.309944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.305765,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.305115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.290745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.223176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.198682,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.189116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.178133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.151496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.145222,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.141636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.136533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040092,"sim:weight":0.133061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72990,"sim:weight":0.115174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826893,"sim:weight":0.114786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9996,"sim:weight":0.114726,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72687,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Reliable management of voice in a distributed\n        system","bibo:abstract":"The ubiquitous personal computer has found its way into most\n        office environments. As a result, widespread use of the Local\n        Area Network (LAN) for the purposes of sharing distributed\n        computing resources has become common. Another technology, the\n        Private Automatic Branch Exchange (PABX), has benefited from\n        large research and development by the telephone companies. As a\n        consequence, it is cost effective and has widely infiltrated the\n        office world. Its primary purpose is to switch digitised voice\n        but, with the growing need for communication between computers\n        it is also being adapted to switch data. However, PABXs are\n        generally designed around a centralised switch in which\n        bandwidth is permanently divided between its subscribers.\n        Computing requirements need much larger bandwidths and the\n        ability to connect to several services at once, thus making the\n        conventional PABX unsuitable for this application.\n        \n        Some LAN technologies are suitable for switching voice and data.\n        The additional requirement for voice is that point to point\n        delay for network packets should have a low upper-bound. The 10\n        Mb/s Cambridge Ring is an example of this type of network, but\n        is relatively low bandwidth gives it limited application in this\n        area. Networks with larger bandwidths (up to 100 Mb/s) are now\n        becoming available comercially and could support a realistic\n        population of clients requiring voice and data communication.\n        \n        Transporting voice and data in the same network has two main\n        advantages. Firstly, from a practical point of view, wiring is\n        minimised. Secondly, applications which integrate both media are\n        made possible, and hence digitised voice may be controlled by\n        client programs in new and interesting ways.\n        \n        In addition to the new applications, the original telephony\n        facilities must also be available. They should, at least by\n        default, appear to work in an identical way to our tried and\n        trusted impression of a telephone. However, the control and\n        management of a network telephone is now in the domain of\n        distributed computing. The voice connections between telephones\n        are virtual circuits. Control and data information can be freely\n        mixed with voice at a network interface. The new problems that\n        result are the management issues related to the distributed\n        control of real-time media.\n        \n        This thesis describes the issues as a distributed computing\n        problem and proposes solutions, many of which have been\n        demonstrated in a real implementation. Particular attention has\n        been paid to the quality of service provided by the solutions.\n        This amounts to the design of helpful operator interfaces,\n        flexible schemes for the control of voice from personal\n        workstations and, in particular, a high reliability factor for\n        the backbone telephony service. This work demonstrates the\n        advantages and the practicality of integrating voice and data\n        services within the Local Area Network.","bibo:AuthorList":["Want, Roy"],"dc:date":"1988-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.36173,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.291576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.290216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.275383,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.264836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43998,"sim:weight":0.264062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.262923,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72689,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Executing behavioural definitions in higher-order\n        logic","bibo:abstract":"Over the past few years, computer scientists have been using\n        formal verification techniques to show the correctness of\n        digital systems. The verification process, however, is\n        complicated and expensive. Even proofs of simple circuits can\n        involve thousands of logical steps. Often it can be extremely\n        difficult to find correct device specifications and it is\n        desirable that one sets off to prove a correct specification\n        from the start, rather than repeatedly backtrack from the\n        verification process to modify the original definitions after\n        discovering they were incorrect or inadequate.\n        \n        The main idea presented in the thesis is to amalgamate the\n        techniques of simulation and verification, rather than have the\n        latter replace the former. The result is that behavioural\n        definitions can be simulated until one is reasonably sure that\n        the specification is correct. Furthermore, proving the\n        correctness with respect to these simulated specifications\n        avoids the inadequacies of simulation where it may not be\n        computationally feasible to demonstrate correctness by\n        exhaustive testing. Simulation here has a different purpose: to\n        get specifications correct as early as possible in the\n        verification process. Its purpose is not to demonstrate the\n        correctness of the implementation – this is done in the\n        verification stage when the very same specifications that were\n        simulated are proved correct.\n        \n        The thesis discusses the implementation of an executable subset\n        of the HOL logic, the version of Higher Order Logic embedded in\n        the HOL theorem prover. It is shown that hardware can be\n        effectively described using both relations and functions;\n        relations being suitable for abstract specification and\n        functions being suitable for execution. The difference between\n        relational and functional specifications are discussed and\n        illustrated by the verification of an n-bit adder. Techniques\n        for executing functional specifications are presented and\n        various optimisation strategies are shown which make the\n        execution of the logic efficient. It is further shown that the\n        process of generating optimised functional definitions from\n        relational definitions can be automated. Example simulations of\n        three hardware devices (a factorial machine, a small computer\n        and a communications chip) are presented.","bibo:AuthorList":["Camilleri, Albert John"],"dc:date":"1988-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8933996,"sim:weight":0.367969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.337801,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.310346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.274061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108795,"sim:weight":0.263479,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.246711,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.239461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.236353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.235449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146008,"sim:weight":0.232546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.232048,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.231014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.23057,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.228263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.216856,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.216751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.215023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.213994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.213967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43288,"sim:weight":0.212856,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72691,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Petri net theory: a survey","bibo:abstract":"The intense interest in concurrent (or “parallel”) computation\n        over the past decade has given rise to a large number of\n        languages for concurrent programming, representing many\n        conflicting views of concurrency.\n        \n        The discovery that concurrent programming is significantly more\n        difficult than sequential programming has prompted considerable\n        research into determining a tractable and flexible theory of\n        concurrency, with the aim of making concurrent processing more\n        accessible, and indeed the wide variety of concurrent languages\n        merely reflects the many different models of concurrency which\n        have also been developed.\n        \n        This report, therefore introduces Petri nets, discussing their\n        behaviour, interpretation and relationship to other models of\n        concurrency. It defines and discusses several restrictions and\n        extensions of the Petri net model, showing how they relate to\n        basic Petri nets, while explaining why they have been of\n        historical importance. Finally it presents a survey of the\n        analysis methods applied to Petri nets in general and for some\n        of the net models introduced here.","bibo:AuthorList":["Manson, Paul R."],"dc:date":"1988-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.513251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.504456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.365293,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.306297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84974,"sim:weight":0.285283,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710548,"sim:weight":0.202805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.15519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.134592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.134447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.13295,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102604,"sim:weight":0.11997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.117987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.117407,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72693,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Formal specification and verification of asynchronous\n        processes in higher-order logic","bibo:abstract":"We model the interaction of a synchronous process with an\n        asynchronous memory process using a four-phase “handshaking”\n        protocol. This example demonstrates the use of higher-order\n        logic to reason about the behaviour of synchronous systems such\n        as microprocessors which communicate requests to asynchronous\n        devices and then wait for unpredictably long periods until these\n        requests are answered. We also describe how our model could be\n        revised to include some of the detailed timing requirements\n        found in real systems such as the M68000 microprocessor. One\n        enhancement uses non-determinism to model minimum setup times\n        for asynchronous inputs. Experience with this example suggests\n        that higher-order logic may also be a suitable formalism for\n        reasoning about more abstract forms of concurrency.","bibo:AuthorList":["Joyce, Jeffrey J."],"dc:date":"1988-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1008747,"sim:weight":0.449349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934952,"sim:weight":0.422331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":884619,"sim:weight":0.263935,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26661,"sim:weight":0.259023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.215003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.214152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.198512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.195732,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.190591,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43272,"sim:weight":0.178387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.178046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":42539,"sim:weight":0.175313,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932953,"sim:weight":0.174361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.171149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":926064,"sim:weight":0.168663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.164527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44505,"sim:weight":0.160327,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.157564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.153368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.153277,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72695,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A preliminary users manual for Isabelle","bibo:abstract":"This is an early report on the theorem prover Isabelle and\n        several of its object-logics. It describes Isabelle’s\n        operations, commands, data structures, and organization. This\n        information is fairly low-level, but could benefit Isabelle\n        users and implementors of other systems.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1988-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8999162,"sim:weight":0.313092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.294088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.291822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.290112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.266072,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.264156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.257867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.256868,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.253577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.247557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.245829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.205355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.172113,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.168032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000311,"sim:weight":0.155329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.1529,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933590,"sim:weight":0.149564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43710,"sim:weight":0.138186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":863811,"sim:weight":0.122227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.113808,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72697,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The foundation of a generic theorem prover","bibo:abstract":"Isabelle is an interactive theorem prover that supports a\n        variety of logics. It represents rules as propositions (not as\n        functions) and builds proofs by combining rules. These\n        operations constitute a meta-logic (or ‘logical framework’) in\n        which the object-logics are formalized. Isabelle is now based on\n        higher-order logic – a precise and well-understood foundation.\n        \n        Examples illustrate use of this meta-logic to formalize logics\n        and proofs. Axioms for first-order logic are shown sound and\n        complete. Backwards proof is formalized by meta-reasoning about\n        object-level entailment.\n        \n        Higher-order logic has several practical advantages over other\n        meta-logics. Many proof techniques are known, such as Huet’s\n        higher-order unification procedure.","bibo:AuthorList":["Paulson, Lawrence C"],"dc:date":"1988-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":73260,"sim:weight":0.435301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1040247,"sim:weight":0.391627,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.371675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.360503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826893,"sim:weight":0.35258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.327973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.301039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.299164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.299136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.296264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.286861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.284088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.271308,"sim:AssociationMethod":"similarity_cosine"},{"identifier":72959,"sim:weight":0.263408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9996,"sim:weight":0.25189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.246936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.243062,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.240425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.236611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.221984,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72699,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A methodology for automated design of computer\n        instruction sets","bibo:abstract":"With semiconductor technology providing scope for increasingly\n        complex computer architectures, there is a need more than ever\n        to rationalise the methodology behind computer design. In the\n        1970’s, byte stream architectures offered a rationalisation of\n        computer design well suited to microcoded hardware. In the\n        1980’s, RISC technology has emerged to simplify computer design\n        and permit full advantage to be taken of very large scale\n        integration. However, such approaches achieve their aims by\n        simplifying the problem to a level where it is within the\n        comprehension of a simple human being. Such an effort is not\n        sufficient. There is a need to provide a methodology that takes\n        the burden of design detail away from the human designer,\n        leaving him free to cope with the underlying principles\n        involved.\n        \n        In this dissertation I present a methodology for the design of\n        computer instruction sets that is capable of automation in large\n        part, removing the drudgery of individual instruction selection.\n        The methodology does not remove the need for the designer’s\n        skill, but rather allows precise refinement of his ideas to\n        obtain an optimal instruction set.\n        \n        In developing this methodology a number of pieces of software\n        have been designed and implemented. Compilers have been written\n        to generate trial instruction sets. An instruction set generator\n        program has been written and the instruction set it proposes\n        evaluated. Finally a prototype language for instruction set\n        design has been devised and implemented.","bibo:AuthorList":["Bennett, Jeremy Peter"],"dc:date":"1988-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":44432,"sim:weight":0.261777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146140,"sim:weight":0.255729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54103,"sim:weight":0.236373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.234186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.224186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.2177,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81716,"sim:weight":0.213787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.211511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707677,"sim:weight":0.199635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.195733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101522,"sim:weight":0.19502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.192013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.186699,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43077,"sim:weight":0.181981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.181073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.181073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.181073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387371,"sim:weight":0.175482,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43302,"sim:weight":0.175405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.174612,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72702,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Block encryption","bibo:abstract":"A fast and simple way of encrypting computer data is needed. The\n        UNIX crypt is a good way of doing this although the method is\n        not cryptographically sound for text. The method suggested here\n        is applied to larger blocks than the DES method which uses 64\n        bit blocks, so that the speed of encyphering is reasonable. The\n        algorithm is designed for software rather than hardware. This\n        forgoes two advantages of the crypt algorithm, namely that each\n        character can be encoded and decoded independently of other\n        characters and that the identical process is used both for\n        encryption and decryption. However this method is better for\n        coding blocks directly.","bibo:AuthorList":["Wheeler, D."],"dc:date":"1987-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1106446,"sim:weight":0.374554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":728995,"sim:weight":0.358643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":540363,"sim:weight":0.355503,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764492,"sim:weight":0.353978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647362,"sim:weight":0.348008,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003817,"sim:weight":0.344714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":929723,"sim:weight":0.341467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937442,"sim:weight":0.334662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026827,"sim:weight":0.333176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":691123,"sim:weight":0.332461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008735,"sim:weight":0.322175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901721,"sim:weight":0.312989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":917083,"sim:weight":0.311129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":902596,"sim:weight":0.307405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757260,"sim:weight":0.303861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991501,"sim:weight":0.295015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918846,"sim:weight":0.293277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":820294,"sim:weight":0.290662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919006,"sim:weight":0.289664,"sim:AssociationMethod":"similarity_cosine"},{"identifier":897505,"sim:weight":0.281578,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72703,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An architecture for integrated services on the local\n        area network","bibo:abstract":"This dissertation concerns the provision of integrated services\n        in a local area context, e.g. on business premises. The term\n        integrated services can be understood at several levels. At the\n        lowest, one network may be used to carry traffic of several\n        media—voice, data, images etc. Above that, the telephone\n        exchange may be replaced by a more versatile switching system,\n        incorporating facilities such as stored voice messages. Its\n        facilities may be accessible to the user through the interface\n        of the workstation rather than a telephone. At a higher level\n        still, new services such as multi-media document manipulation\n        may be added to the capabilities of a workstation.\n        \n        Most of the work to date has been at the lowest of these levels,\n        under the auspices of the Integrated Services Digital Network\n        (ISDN), which mainly concerns wide area communications systems.\n        The thesis presented here is that all of the above levels are\n        important in a local area context. In an office environment,\n        sophisticated data processing facilities in a workstation can\n        usefully be combined with highly available telecommunications\n        facilities such as the telephone, to offer the user new services\n        which make the working day more pleasant and productive. That\n        these facilities should be provided across one integrated\n        network, rather than by several parallel single medium networks\n        is an important organisational convenience to the system\n        builder.\n        \n        The work described in this dissertation is relevant principally\n        in a local area context—in the wide area economics and traffic\n        balance dictate that the emphasis will be on only the network\n        level of integration for some time now. The work can be split\n        into three parts:\n        \n        i) the use of a packet network to carry mixed media. This has\n        entailed design of packet voice protocols which produce delays\n        low enough for the network to interwork with national telephone\n        networks. The system has also been designed for minimal cost per\n        telephone—packet-switched telephone systems have traditionally\n        been more expensive than circuit-switched types. The network\n        used as a foundation for this work has been the Cambridge Fast\n        Ring.\n        \n        ii) use of techniques well established in distributed computing\n        systems to build an ‘integrated services PABX (Private Automatic\n        Branch Exchange)’. Current PABX designs have a very short life\n        expectancy and an alarmingly high proportion of their costs is\n        due to software. The ideas presented here can help with both of\n        these problems, produce an extensible system and provide a basis\n        for new multi-media services.\n        \n        iii) development of new user level Integrated Services. Work has\n        been done in three areas. The first is multi-media documents. A\n        voice editing interface is described along with the system\n        structure required to support it. Secondly a workstation display\n        has been built to support a variety of services based upon image\n        manipulation and transmission. Finally techniques have been\n        demonstrated by which a better interface to telephony functions\n        can be provided to the user, using methods of control typical of\n        workstation interfaces.","bibo:AuthorList":["Ades, Stephen"],"dc:date":"1987-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.379716,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.324023,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.318125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709894,"sim:weight":0.317339,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.302886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":90426,"sim:weight":0.289867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.281282,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101379,"sim:weight":0.278065,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.27659,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72706,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Realism about user modelling","bibo:abstract":"This paper reformulates the framework for user modelling\n        presented in an earlier technical report, ‘User Models and\n        Expert Systems’, and considers the implications of the real\n        limitations on the knowledge likely to be available to a system\n        for the value and application of user models.","bibo:AuthorList":["Spärck Jones, K."],"dc:date":"1987-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":952729,"sim:weight":0.360231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930480,"sim:weight":0.309593,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930691,"sim:weight":0.278367,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757655,"sim:weight":0.273515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000292,"sim:weight":0.269476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71741,"sim:weight":0.264889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":490603,"sim:weight":0.255692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106875,"sim:weight":0.248698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934976,"sim:weight":0.23763,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58342,"sim:weight":0.230179,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187436,"sim:weight":0.228618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46901,"sim:weight":0.222305,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108424,"sim:weight":0.218766,"sim:AssociationMethod":"similarity_cosine"},{"identifier":64235,"sim:weight":0.217031,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187477,"sim:weight":0.216442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997502,"sim:weight":0.215916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934254,"sim:weight":0.215713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.211843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664634,"sim:weight":0.209616,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933437,"sim:weight":0.200185,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72708,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Workstation design for distributed computing","bibo:abstract":"This thesis discusses some aspects of the design of computer\n        systems for local area networks (LANs), with particular emphasis\n        on the way such systems present themselves to their users. Too\n        little attention to this issue frequently results in computing\n        environments that cannot be extended gracefully to accommodate\n        new hardware or software and do not present consistent, uniform\n        interfaces to either their human users or their programmatic\n        clients. Before computer systems can become truly ubiquitous\n        tools, these problems of extensibility and accessibility must be\n        solved. This dissertation therefore seeks to examine one\n        possible approach, emphasising support for program development\n        on LAN based systems.","bibo:AuthorList":["Wilkes, Andrew John"],"dc:date":"1987-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70121,"sim:weight":0.339269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70404,"sim:weight":0.266333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91426,"sim:weight":0.2464,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70382,"sim:weight":0.239412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187654,"sim:weight":0.238217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.234359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934804,"sim:weight":0.228683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.228256,"sim:AssociationMethod":"similarity_cosine"},{"identifier":950197,"sim:weight":0.225418,"sim:AssociationMethod":"similarity_cosine"},{"identifier":11127,"sim:weight":0.222794,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59326,"sim:weight":0.22261,"sim:AssociationMethod":"similarity_cosine"},{"identifier":61040,"sim:weight":0.22148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933590,"sim:weight":0.211636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151792,"sim:weight":0.208955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70181,"sim:weight":0.205792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.205042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.204555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98966,"sim:weight":0.204538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.20348,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.195693,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72710,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A proof of correctness of the Viper microprocessor: the\n        first level","bibo:abstract":"The Viper microprocessor designed at the Royal Signals and Radar\n        Establishment (RSRE) is one of the first commercially produced\n        computers to have been developed using modern formal methods.\n        Viper is specified in a sequence of decreasingly abstract\n        levels. In this paper a mechanical proof of the equivalence of\n        the first two of these levels is described. The proof was\n        generated using a version of Robin Milner’s LCF system.","bibo:AuthorList":["Cohn, Avra"],"dc:date":"1987-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98128,"sim:weight":0.292869,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98135,"sim:weight":0.242626,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.21299,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.130567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":950185,"sim:weight":0.124259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512117,"sim:weight":0.122749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826943,"sim:weight":0.12167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.114425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.107435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108629,"sim:weight":0.103405,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933906,"sim:weight":0.100847,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.0952273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997708,"sim:weight":0.0951599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1337310,"sim:weight":0.0886216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931951,"sim:weight":0.0871818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933331,"sim:weight":0.0849704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933522,"sim:weight":0.0846076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826876,"sim:weight":0.0841555,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057719,"sim:weight":0.0826901,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.0811522,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72712,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Power-domains, modalities and the Vietoris\n        monad","bibo:abstract":"It is possible to divide the syntax-directed approaches to\n        programming language semantics into two classes, “denotational”,\n        and “proof-theoretic”. This paper argues for a different\n        approach which also has the effect of linking the two methods.\n        Drawing on recent work on locales as formal spaces we show that\n        this provides a way in which we can hope to use a\n        proof-theoretical semantics to give us a denotational one. This\n        paper reviews aspects of the general theory, before developing a\n        modal construction on locales and discussing the view of\n        power-domains as free non-deterministic algebras. Finally, the\n        relationship between the present work and that of Winskel is\n        examined.","bibo:AuthorList":["Robinson, E."],"dc:date":"1986-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934773,"sim:weight":0.270631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997484,"sim:weight":0.261517,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99157,"sim:weight":0.257287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.238537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000277,"sim:weight":0.228232,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1578933,"sim:weight":0.220042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2788708,"sim:weight":0.215126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.211838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.207404,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707654,"sim:weight":0.207191,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.199385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932628,"sim:weight":0.196822,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.195663,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.1942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387303,"sim:weight":0.193629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.189417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9658,"sim:weight":0.189369,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664720,"sim:weight":0.187972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.187688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19260,"sim:weight":0.187433,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72714,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Event structures : Lecture notes for the Advanced Course\n        on Petri Nets","bibo:abstract":"Event structures are a model of computational processes. They\n        represent a process as a set of event occurrences with relations\n        to express how events causally depend on others. This paper\n        introduces event structures, shows their relationship to Scott\n        domains and Petri nets, and surveys their role in denotational\n        semantics, both for modelling laguages like CCS and CSP and\n        languages with higher types.","bibo:AuthorList":["Winskel, Glynn"],"dc:date":"1986-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.477661,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.471221,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765399,"sim:weight":0.386001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1082283,"sim:weight":0.385815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.361429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.351805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397385,"sim:weight":0.319022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.312786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934346,"sim:weight":0.312509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.30269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.30269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.298858,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.29218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934432,"sim:weight":0.28809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934461,"sim:weight":0.284796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.266566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27378,"sim:weight":0.264093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932181,"sim:weight":0.224636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.204569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84974,"sim:weight":0.198483,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72716,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Hardware verification using higher-order\n        logic","bibo:abstract":"The Hardware Verification Group at the University of Cambridge\n        is investigating how various kinds of digital systems can be\n        verified by mechanised formal proof. This paper explains our\n        approach to representing behaviour and structure using higher\n        order logic. Several examples are described including a ripple\n        carry adder and a sequential device for computing the factorial\n        function. The dangers of inaccurate models are illustrated with\n        a CMOS exclusive-or gate.","bibo:AuthorList":["Camilleri, Albert","Gordon, Mike","Melham, Tom"],"dc:date":"1986-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":973902,"sim:weight":0.320434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058014,"sim:weight":0.302605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017977,"sim:weight":0.298447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":659177,"sim:weight":0.297897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":916728,"sim:weight":0.2941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026364,"sim:weight":0.276198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764597,"sim:weight":0.271597,"sim:AssociationMethod":"similarity_cosine"},{"identifier":941644,"sim:weight":0.260543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":961076,"sim:weight":0.252613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":874004,"sim:weight":0.23955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":766795,"sim:weight":0.222855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":930591,"sim:weight":0.21641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1051873,"sim:weight":0.21524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":659221,"sim:weight":0.21444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116261,"sim:weight":0.214361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":896247,"sim:weight":0.210453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1137700,"sim:weight":0.205467,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.203169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":659301,"sim:weight":0.199558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997912,"sim:weight":0.195926,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72718,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Making form follow function : An exercise in functional\n        programming style","bibo:abstract":"The combined use of user-defined infix operators and higher\n        order functions allows the programmer to invent new control\n        structures tailored to a particular problem area.\n        \n        This paper is to suggest that such a combination has beneficial\n        effects on the ease of both writing and reading programmes, and\n        hence can increase programmer productivity. As an example, a\n        parser for a simple language is presented in this style.\n        \n        It is hoped that the presentation will be palatable to people\n        unfamiliar with the concepts of functional programming.","bibo:AuthorList":["Fairbairn, Jon"],"dc:date":"1986-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":767728,"sim:weight":0.30532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.29382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.249787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998269,"sim:weight":0.248007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98072,"sim:weight":0.23142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88291,"sim:weight":0.22687,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23657,"sim:weight":0.219294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98084,"sim:weight":0.216795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.196978,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.195636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387371,"sim:weight":0.190745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47229,"sim:weight":0.180056,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.177532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.174862,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44655,"sim:weight":0.170746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.167906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.165014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664559,"sim:weight":0.163501,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99250,"sim:weight":0.162547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.162523,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72720,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Natural deduction proof as higher-order\n        resolution","bibo:abstract":"An interactive theorem prover, Isabelle, is under development.\n        In LCF, each inference rule is represented by one function for\n        forwards proof and another (a tactic) for backwards proof. In\n        Isabelle, each inference rule is represented by a Horn clause.\n        Resolution gives both forwards and backwards proof, supporting a\n        large class of logics. Isabelle has been used to prove theorems\n        in Martin-Löf’s Constructive Type Theory.\n        \n        Quantifiers pose several difficulties: substitution, bound\n        variables, Skolemization. Isabelle’s representation of logical\n        syntax is the typed lambda-calculus, requiring higher-order\n        unification. It may have potential for logic programming.\n        Depth-first search using inference rules constitutes a\n        higher-order Prolog.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1985-12","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"L Paulson. (1986). Natural deduction proof as higher-order resolution.","authors":[],"bibo:shortTitle":"Natural deduction proof as higher-order resolution.","dc:date":"1986","refDocId":72720}],"similarities":[{"identifier":8827025,"sim:weight":0.350795,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98128,"sim:weight":0.347994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.347274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.337735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.334409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.330873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.325178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.31989,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.315932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.298103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.279206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.276992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.256505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934092,"sim:weight":0.232635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998248,"sim:weight":0.229569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9785,"sim:weight":0.226722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.190097,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.184269,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.1828,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.182488,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72722,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The implementation of functional languages using custom\n        hardware","bibo:abstract":"In recent years functional programmers have produced a great\n        many good ideas but few results. While the use of functional\n        languages has been enthusiastically advocated, few real\n        application areas have been tackled and so the functional\n        programmer\u0027s views and ideas are met with suspicion.\n        \n        The prime cause of this state of affairs is the lack of widely\n        available, solid implementations of functional languages. This\n        in turn stems from two major causes: (1) Our understanding of\n        implementation techniques was very poor only a few years ago,\n        and so any implementation that is “mature” is also likely to be\n        unuseably slow. (2) While functional languages are excellent for\n        expressing algorithms, there is still considerable debate in the\n        functional programming community over the way in which input and\n        output operations should be represented to the programmer.\n        Without clear guiding principles implementors have tended to\n        produce ad-hoc, inadequate solutions.\n        \n        My research is concerned with strengthening the case for\n        functional programming. To this end I constructed a specialised\n        processor, called SKIM, which could evaluate functional programs\n        quickly. This allowed experimentation with various\n        implementation methods, and provided a high performance\n        implementation with which to experiment with writing large\n        functional programs.\n        \n        This thesis describes the resulting work and includes the\n        following new results: (1) Details of a practical turner-style\n        combinator reduction implementation featuring greatly improved\n        storage use compared with previous methods. (2) An\n        implementation of Kennaway’s director string idea that further\n        enhances performance and increases understanding of a variety of\n        reduction strategies. (3) Comprehensive suggestions concerning\n        the representation of input, output, and nondeterministic tasks\n        using functional languages, and the writing of operating\n        systems. Details of the implementation of these suggestions\n        developed on SKIM. (4) A number of observations concerning\n        fuctional programming in general based on considerable practical\n        experience.","bibo:AuthorList":["Stoye, William Robert"],"dc:date":"1985-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1447855,"sim:weight":0.244625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.230154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.227802,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.227577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45725,"sim:weight":0.212631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99087,"sim:weight":0.188493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.188382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.186359,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72725,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Petri nets, algebras and morphisms","bibo:abstract":"It is shown how a category of Petri nets can be viewed as a\n        subcategory of two sorted algebras over multisets. This casts\n        Petri nets in a familiar framework and provides a useful idea of\n        morphism on nets different from the conventional definition –\n        the morphisms here respect the behaviour of nets. The\n        categorical constructions with result provide a useful way to\n        synthesise nets and reason about nets in terms of their\n        components; for example various forms of parallel composition of\n        Petri nets arise naturally from the product in the category.\n        This abstract setting makes plain a useful functor from the\n        category of Petri nets to a category of spaces of invariants and\n        provides insight into the generalisations of the basic\n        definition of Petri nets – for instance the coloured and higher\n        level nets of Kurt Jensen arise through a simple modificationof\n        the sorts of the algebras underlying nets. Further it provides a\n        smooth formal relation with other models of concurrency such as\n        Milner’s Calculus of Communicating Systems (CCS) and Hoare’s\n        Communicating Sequential Processes (CSP).","bibo:AuthorList":["Winskel, Glynn"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.703764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.694372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.553436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934432,"sim:weight":0.55268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.53481,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.518096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.513799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.513799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.496241,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934270,"sim:weight":0.469967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934438,"sim:weight":0.45324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.446569,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934446,"sim:weight":0.446155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934346,"sim:weight":0.428265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934369,"sim:weight":0.42705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000286,"sim:weight":0.402294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.338638,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000287,"sim:weight":0.317443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934348,"sim:weight":0.207409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.189079,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72727,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Design and implementation of a simple typed language\n        based on the lambda-calculus","bibo:abstract":"Despite the work of Landin and others as long ago as 1966,\n        almost all recent programming languages are large and difficult\n        to understand. This thesis is a re-examination of the\n        possibility of designing and implementing a small but practical\n        language based on very few primitive constructs.\n        \n        The text records the syntax and informal semantics of a new\n        language called Ponder. The most notable features of the work\n        are a powerful type-system and an efficient implementation of\n        normal order reduction.\n        \n        In contrast to Landin’s ISWIM, Ponder is statically typed, an\n        expedient that increases the simplicity of the language by\n        removing the requirement that operations must be defined for\n        incorrect arguments. The type system is a powerful extension of\n        Milner’s polymorphic type system for ML in that it allows local\n        quantification of types. This extension has the advantage that\n        types that would otherwise need to be primitive may be defined.\n        \n        The criteria for the well-typedness of Ponder programmes are\n        presented in the form of a natural deduction system in terms of\n        a relation of generality between types. A new type checking\n        algorithm derived from these rules is proposed.\n        \n        Ponder is built on the λ-calculus without the need for\n        additional computation rules. In spite of this abstract\n        foundation an efficient implementation based on Hughes’\n        super-combinator approach is described. Some evidence of the\n        speed of Ponder programmes is included.\n        \n        The same strictures have been applied to the design of the\n        syntax of Ponder, which, rather than having many pre-defined\n        clauses, allows the addition of new constructs by the use of a\n        simple extension mechanism.","bibo:AuthorList":["Fairbairn, Jon"],"dc:date":"1985-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.43811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.425977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.4061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661926,"sim:weight":0.38788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.385027,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98072,"sim:weight":0.372044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.362444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710661,"sim:weight":0.348085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98084,"sim:weight":0.342911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98092,"sim:weight":0.315373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98077,"sim:weight":0.299605,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98074,"sim:weight":0.283889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.279363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.268036,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.258764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.244802,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.239578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.237166,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931666,"sim:weight":0.23644,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98075,"sim:weight":0.233177,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72729,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Proving termination of normalization functions for\n        conditional expressions","bibo:abstract":"Boyer and Moore have discussed a recursive function that puts\n        conditional expressions into normal form. It is difficult to\n        prove that this function terminates on all inputs. Three\n        termination proofs are compared: (1) using a measure function,\n        (2) in domain theory using LCF, (3) showing that its “recursion\n        relation”, defined by the pattern of recursive calls, is\n        well-founded. The last two proofs are essentially the same\n        though conducted in markedly different logical frameworks. An\n        obviously total variant of the normalize function is presented\n        as the ‘computational meaning’ of those two proofs.\n        \n        A related function makes nested recursive calls. The three\n        termination proofs become more complex: termination and\n        correctness must be proved simultaneously. The recursion\n        relation approach seems flexible enough to handle subtle\n        termination proofs where previously domain theory seemed\n        essential.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1985-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":77020,"sim:weight":0.277022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45986,"sim:weight":0.269182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.252928,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386661,"sim:weight":0.249685,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933554,"sim:weight":0.232466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.207886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.202449,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.176756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.172425,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.166737,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.159386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45184,"sim:weight":0.158987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.151826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.139524,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146042,"sim:weight":0.133929,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99347,"sim:weight":0.131416,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1351913,"sim:weight":0.127582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43337,"sim:weight":0.126235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.121378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932676,"sim:weight":0.120602,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72730,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Constructing recursion operators in intuitionistic type\n        theory","bibo:abstract":"Martin-Löf’s Intuitionistic Theory of Types is becoming popular\n        for formal reasoning about computer programs. To handle\n        recursion schemes other than primitive recursion, a theory of\n        well-founded relations is presented. Using primitive recursion\n        over higher types, induction and recursion are formally derived\n        for a large class of well-founded relations. Included are \u003c\n        on natural numbers, and relations formed by inverse images,\n        addition, multiplication, and exponentiation of other relations.\n        The constructions are given in full detail to allow their use in\n        theorem provers for Type Theory, such as Nuprl. The theory is\n        compared with work in the field of ordinal recursion over higher\n        types.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1984-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45986,"sim:weight":0.363213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43337,"sim:weight":0.223435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73260,"sim:weight":0.220466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.20803,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2183574,"sim:weight":0.207247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.199608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.192853,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.192771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.182512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98086,"sim:weight":0.179016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.171874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.170713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5611,"sim:weight":0.163163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98846,"sim:weight":0.156011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98075,"sim:weight":0.139781,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.13892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.138919,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929386,"sim:weight":0.135959,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.135294,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49011,"sim:weight":0.133154,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72732,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The design of a ring communication network","bibo:abstract":"This dissertation describes the design of a high speed local\n        area network. Local networks have been in use now for over a\n        decade and there is a proliferation of different systems,\n        experimental ones which are not widely used and commercial ones\n        installed in hundreds of locations. For a new network design to\n        be of interest from the research point of view it must have a\n        feature or features which set it apart from existing networks\n        and make it an improvement over existing systems. In the case of\n        the network described, the research was started to produce a\n        network which was considerably faster than current designs, but\n        which retained a high degree of generality.\n        \n        As the research progressed, other features were considered, such\n        as ways to reduce the cost of the network and the ability to\n        carry data traffic of many different types. The emphasis on high\n        speed is still present but other aspects were considered and are\n        discussed in the dissertation. The network has been named the\n        Cambridge Fast Ring and and the network hardware is currently\n        being implemented as an integrated circuit at the University of\n        Cambridge Computer Laboratory.\n        \n        The aim of the dissertation is to describe the background to the\n        design and the decisions which were made during the design\n        process, as well as the design itself. The dissertation starts\n        with a survey of the uses of local area networks and examines\n        some established networks in detail. It then proceeds by\n        examining the characteristics of a current network installation\n        to assess what is required of the network in that and similar\n        applications. The major design considerations for a high speed\n        network controller are then discussed and a design is presented.\n        Finally, the design of computer interfaces and protocols for the\n        network is discussed.","bibo:AuthorList":["Temple, Steven"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4182207,"sim:weight":0.375898,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.357098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.350625,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.328825,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.317677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.287713,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.270996,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72735,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Verifying the unification algorithm in LCF","bibo:abstract":"Manna and Waldinger’s theory of substitutions and unification\n        has been verified using the Cambridge LCF theorem prover. A\n        proof of the monotonicity of substitution is presented in\n        detail, as an example of interaction with LCF. Translating the\n        theory into LCF’s domain-theoretic logic is largely\n        straightforward. Well-founded induction on a complex ordering is\n        translated into nested structural inductions. Correctness of\n        unification is expressed using predicates for such properties as\n        idempotence and most-generality. The verification is presented\n        as a series of lemmas. The LCF proofs are compared with the\n        original ones, and with other approaches. It appears difficult\n        to find a logic that is both simple and flexible, especially for\n        proving termination.","bibo:AuthorList":["Paulson, Lawrence"],"dc:date":"1984-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":386661,"sim:weight":0.238386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.237874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9949,"sim:weight":0.225599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.217985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18282,"sim:weight":0.216292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.214489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.214105,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43999,"sim:weight":0.213361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.212945,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661926,"sim:weight":0.205536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826989,"sim:weight":0.200764,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.182495,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.174984,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.171082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.158443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.156333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1505748,"sim:weight":0.154987,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.15389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.1484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.142943,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72737,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A mechanism for the accumulation and application of\n        context in text processing","bibo:abstract":"The paper describes a mechanism for the representation and\n        application of context information for automatic natural\n        language processing systems. Context information is gathered\n        gradually during the reading of the text, and the mechanism\n        gives a way of combining the effect of several different types\n        of context factors. Context factors can be managed\n        independently, while still allowing efficient access to entities\n        in focus. The mechanism is claimed to be more general than the\n        global focus mechanism used by Grosz for discourse\n        understanding. Context affects the interpretation process by\n        choosing the results, and restricting the processing, of a\n        number of important language interpretation operations,\n        including lexical disambiguation and reference resolution. The\n        types of context factors that have been implemented in an\n        experimental system are described, and examples of the\n        application of context are given.","bibo:AuthorList":["Alshawi, Hiyan"],"dc:date":"1983-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70404,"sim:weight":0.375358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901802,"sim:weight":0.288894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003877,"sim:weight":0.280874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85535,"sim:weight":0.246456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101538,"sim:weight":0.234376,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1339,"sim:weight":0.234339,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647943,"sim:weight":0.226534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43347,"sim:weight":0.218768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108366,"sim:weight":0.218695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43881,"sim:weight":0.218679,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937453,"sim:weight":0.215518,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86557,"sim:weight":0.213298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43098,"sim:weight":0.210759,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664720,"sim:weight":0.209726,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.208156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.20611,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70542,"sim:weight":0.199968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.196414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.196328,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21224,"sim:weight":0.194603,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72738,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automatic summarising of English texts","bibo:abstract":"This thesis describes a computer program called Scrabble which\n        can summarise short English texts. It uses large bodies of\n        predictions about the likely contents of texts about particular\n        topics to identify the commonplace material in an input text.\n        Pre-specified summary templates, each associated with a\n        different topic are used to condense the commonplace material in\n        the input. Filled-in summary templates are then used to form a\n        framework into which unexpected material in the input may be\n        fitted, allowing unexpected material to appear in output summary\n        texts in an essentially unreduced form. The system’s summaries\n        are in English.\n        \n        The program is based on technology not dissimilar to a script\n        applier. However, Scrabble represents a significant advance over\n        previous script-based summarising systems. It is much less\n        likely to produce misleading summaries of an input text than\n        some previous systems and can operate with less information\n        about the subject domain of the input than others.\n        \n        These improvements are achieved by the use of three main novel\n        ideas. First, the system incorporates a new method for\n        identifying the idea or topics of an input text. Second, it\n        allows a section of text to have more than one topic at a time,\n        or at least a composite topic which may be dealt with by the\n        computer program simultaneously applying the text predictions\n        associated with more than one simple topic. Third, Scrabble\n        incorporates new mechanisms for the incorporation of unexpected\n        material in the input into its output summary texts. The\n        incorporation of such material in the output summary is\n        motivated by the view that it is precisely unexpected material\n        which is likely to form the most salient matter in the input\n        text.\n        \n        The performance of the system is illustrated by means of a\n        number of example input texts and their Scrabble summaries.","bibo:AuthorList":["Tait, John Irving"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":43881,"sim:weight":0.257744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.254969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108385,"sim:weight":0.235315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382076,"sim:weight":0.233608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77408,"sim:weight":0.226792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.219574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102656,"sim:weight":0.218305,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.2154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43975,"sim:weight":0.214971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101538,"sim:weight":0.211539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76964,"sim:weight":0.207543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.201485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43997,"sim:weight":0.199264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664520,"sim:weight":0.187196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108649,"sim:weight":0.184692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.182349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45707,"sim:weight":0.181472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74038,"sim:weight":0.178867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48421,"sim:weight":0.176192,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.17298,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72740,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Compound noun interpretation problems","bibo:abstract":"This paper discusses the problems of compound noun\n        interpretation in the context of automatic language processing.\n        Given that compound processing implies identifying the senses of\n        the words involved, determining their bracketing, and\n        establishing their underlying semantic relations, the paper\n        illustrates the need, even in comparatively favourable cases,\n        for inference using pragmatic information. This has consequences\n        for language processor architectures and, even more, for speech\n        processors.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"1983-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":116781,"sim:weight":0.317046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101104,"sim:weight":0.282259,"sim:AssociationMethod":"similarity_cosine"},{"identifier":647943,"sim:weight":0.234913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.234032,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85523,"sim:weight":0.232417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108366,"sim:weight":0.21085,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003877,"sim:weight":0.21058,"sim:AssociationMethod":"similarity_cosine"},{"identifier":901802,"sim:weight":0.207246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70542,"sim:weight":0.199885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930751,"sim:weight":0.173689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999645,"sim:weight":0.158108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43860,"sim:weight":0.156888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661515,"sim:weight":0.156619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85535,"sim:weight":0.155469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76515,"sim:weight":0.147428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86120,"sim:weight":0.14617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98750,"sim:weight":0.145265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756194,"sim:weight":0.144373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146154,"sim:weight":0.144235,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710234,"sim:weight":0.144227,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72742,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The revised logic PPLAMBDA : A reference\n        manual","bibo:abstract":"PPLAMBDA is the logic used in the Cambridge LCF proof assistant.\n        It allows Natural Deduction proofs about computation, in Scott’s\n        theory of partial orderings. The logic’s syntax, axioms,\n        primitive inference rules, derived inference rules and standard\n        lemmas are described as are the LCF functions for building and\n        taking apart PPLAMBDA formulas.\n        \n        PPLAMBDA’s rule of fixed-point induction admits a wide class of\n        inductions, particularly where flat or finite types are\n        involved. The user can express and prove these type properties\n        in PPLAMBDA. The induction rule accepts a list of theorems,\n        stating type properties to consider when deciding to admit an\n        induction.","bibo:AuthorList":["Paulson, Lawrence"],"dc:date":"1983-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":73260,"sim:weight":0.254532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2424328,"sim:weight":0.248574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934447,"sim:weight":0.240767,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9785,"sim:weight":0.240571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9996,"sim:weight":0.236035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931286,"sim:weight":0.230548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1956778,"sim:weight":0.220013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1151845,"sim:weight":0.215359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.198046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.196243,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.193891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.192532,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.192257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":49011,"sim:weight":0.178985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19252,"sim:weight":0.174046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.172924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.170409,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931666,"sim:weight":0.17011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.169094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145648,"sim:weight":0.167213,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72744,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An island parsing interpreter for Augmented Transition\n        Networks","bibo:abstract":"This paper describes the implementation of an ‘island parsing’\n        interpreter for an Augmented Transition Network (ATN). The\n        interpreter provides more complete coverage of Woods’ original\n        ATM formalism than his later island parsing implementation; it\n        is written in LISP and has been modestly tested.","bibo:AuthorList":["Carroll, John A."],"dc:date":"1982-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":972872,"sim:weight":0.289608,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003893,"sim:weight":0.284624,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73836,"sim:weight":0.196565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":991470,"sim:weight":0.195258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617462,"sim:weight":0.176628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85014,"sim:weight":0.173976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1496752,"sim:weight":0.156995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":919330,"sim:weight":0.147507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43158,"sim:weight":0.147387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826875,"sim:weight":0.139876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920967,"sim:weight":0.136064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47090,"sim:weight":0.133361,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826699,"sim:weight":0.132457,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765620,"sim:weight":0.129667,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85331,"sim:weight":0.126403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101287,"sim:weight":0.124371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9593,"sim:weight":0.11842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667207,"sim:weight":0.103267,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.0806821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":987596,"sim:weight":0.0755703,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72746,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Ponder and its type system","bibo:abstract":"This note describes the programming language “Ponder”, which is\n        designed according to the principles of referencial transparency\n        and “orthogonality” as in [vWijngaarden 75]. Ponder is designed\n        to be simple, being functional with normal order semantics. It\n        is intended for writing large programmes, and to be easily\n        tailored to a particular application. It has a simple but\n        powerful polymorphic type system.\n        \n        The main objective of this note is to describe the type system\n        of Ponder. As with the whole of the language design, the\n        smallest possible number of primitives is built in to the type\n        system. Hence for example, unions and pairs are not built in,\n        but can be constructed from other primitives.","bibo:AuthorList":["Fairbairn, J."],"dc:date":"1982-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":84956,"sim:weight":0.224052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.194599,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.193421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.193077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.190323,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.185718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98086,"sim:weight":0.183751,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931666,"sim:weight":0.183108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77408,"sim:weight":0.179583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.177298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757623,"sim:weight":0.170997,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.169709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86557,"sim:weight":0.169535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998380,"sim:weight":0.169158,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997459,"sim:weight":0.167489,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.167111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.165359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998269,"sim:weight":0.164327,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.158876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.154813,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72748,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Introduction to Poly","bibo:abstract":"This report is a tutorial introduction to the programming\n        language Poly. It describes how to write and run programs in\n        Poly using the VAX/UNIX implementation. Examples given include\n        polymorphic list functions, a double precision integer package\n        and a subrange type constructor.","bibo:AuthorList":["Matthews, D.C.J."],"dc:date":"1982-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998269,"sim:weight":0.165257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.147365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767728,"sim:weight":0.141941,"sim:AssociationMethod":"similarity_cosine"},{"identifier":31523,"sim:weight":0.138996,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88291,"sim:weight":0.135115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757810,"sim:weight":0.133901,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958157,"sim:weight":0.130621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617565,"sim:weight":0.130209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767356,"sim:weight":0.130136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.128842,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958533,"sim:weight":0.125201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386777,"sim:weight":0.119296,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9002236,"sim:weight":0.118394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":385793,"sim:weight":0.116731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57665,"sim:weight":0.116694,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.115247,"sim:AssociationMethod":"similarity_cosine"},{"identifier":517222,"sim:weight":0.114195,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106942,"sim:weight":0.108671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934501,"sim:weight":0.108639,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102077,"sim:weight":0.108397,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72750,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Poly report","bibo:abstract":"Poly was designed to provide a programming system with the same\n        flexibility as a dynamically typed language but without the\n        run-time oveheads. The type system, based on that of Russel\n        allows polymorpphic operations to be used to manipulate abstract\n        objects, but with all the type checking being done at\n        compile-time. Types may be passed explicitly or by inference as\n        parameters to procedures, and may be returned from procedures.\n        Overloading of names and generic types can be simulated by using\n        the general procedure mechanism. Despite the generality of the\n        language, or perhaps because of it, the type system is very\n        simple, consisting of only three classes of object. There is an\n        exception mechanism, similar to that of CLU, and the exceptions\n        raised in a procedure are considered as part of its ‘type’. The\n        construction of abstract objects and hiding of internal details\n        of the representation come naturally out of the type system.","bibo:AuthorList":["Matthews, D.C.J."],"dc:date":"1982-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934501,"sim:weight":0.274326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387371,"sim:weight":0.265838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.265392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.259344,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.25109,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.250104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.245448,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767356,"sim:weight":0.244365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617565,"sim:weight":0.244321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":953444,"sim:weight":0.243454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.237992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447855,"sim:weight":0.235793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87106,"sim:weight":0.234245,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57232,"sim:weight":0.234013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47026,"sim:weight":0.233675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.231567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56740,"sim:weight":0.230472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.227882,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.225463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1631521,"sim:weight":0.224503,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72752,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Two papers about the scrabble summarising\n        system","bibo:abstract":"This report contains two papers which describe parts of the\n        Scrabble English summarizing system. The first, “Topic\n        identification techniques for predictive language analyzers” has\n        been accepted as a short communication for the 9th International\n        COnference on Computational Linguistics, in Prague. The second,\n        “General summaries using a predictive language analyser” is an\n        extended version of a discussion paper which will be presented\n        at the European Conference on Artificial Intelligence in Paris.\n        Both conferences will take place during July 1982.\n        \n        The [second] paper describes a computer system capable of\n        producing coherent summaries of English texts even when they\n        contain sections which the system has not understood completely.\n        The system employs an analysis phase which is not dissimilar to\n        a script applier together with a rather more sophisticated\n        summariser than previous systems. Some deficiencies of earlier\n        systems are pointed out, and ways in which the current\n        implementation overcomes them are discussed.","bibo:AuthorList":["Tait, J.I."],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":108366,"sim:weight":0.223124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43997,"sim:weight":0.220643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.217835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382076,"sim:weight":0.217219,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43936,"sim:weight":0.216884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101538,"sim:weight":0.215154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43860,"sim:weight":0.213848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.199102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99145,"sim:weight":0.194835,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145734,"sim:weight":0.194707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.192821,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1136597,"sim:weight":0.188363,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664559,"sim:weight":0.187454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.185273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77408,"sim:weight":0.181165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45707,"sim:weight":0.181015,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.180796,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664720,"sim:weight":0.180577,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108683,"sim:weight":0.180396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108417,"sim:weight":0.18036,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72754,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Constraints in CODD","bibo:abstract":"The paper describes the implementation of the data structuring\n        concepts of domains, intra-tuple constraints and referential\n        constraints in the relational DBMS CODD. All of these\n        constraints capture some of the semantics of the database’s\n        application.\n        \n        Each class of constraint is described briefly and it is shown\n        how each of them is specified. The constraints are stored in the\n        database giving a centralised data model, which contains\n        descriptions of procedures as well as of statistic structures.\n        Some extensions to the notion of referential constraint are\n        proposed and it is shown how generalisation hierarchies can be\n        expressed as sets of referential constraints. It is shown how\n        the stored data model is used in enforcement of the constraints.","bibo:AuthorList":["Robson, M."],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102604,"sim:weight":0.26923,"sim:AssociationMethod":"similarity_cosine"},{"identifier":621796,"sim:weight":0.266082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43154,"sim:weight":0.25397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1507832,"sim:weight":0.197614,"sim:AssociationMethod":"similarity_cosine"},{"identifier":619056,"sim:weight":0.196515,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.196218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":844788,"sim:weight":0.195613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":958419,"sim:weight":0.195439,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59923,"sim:weight":0.192506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":717291,"sim:weight":0.189059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.184582,"sim:AssociationMethod":"similarity_cosine"},{"identifier":777028,"sim:weight":0.183278,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.168944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819975,"sim:weight":0.166146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.165292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1091630,"sim:weight":0.165089,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70193,"sim:weight":0.161202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1045373,"sim:weight":0.154602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.150426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1928429,"sim:weight":0.147865,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72756,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The correctness of a precedence parsing algorithm in\n        LCF","bibo:abstract":"This paper describes the proof in the LCF system of a\n        correctness property of a precedence parsing algorithm. The work\n        is an extension of a simpler parser and proof by Cohn and Milner\n        (Cohn \u0026 Milner 1982). Relevant aspects of the LCF system are\n        presented as needed. In this paper, we emphasize (i) that\n        although the current proof is much more complex than the earlier\n        one, mqany of the same metalanguage strategies and aids\n        developed for the first proof are used in this proof, and (ii)\n        that (in both cases) a general strategy for doing some limited\n        forward search is incorporated neatly into the overall\n        goal-oriented proof framework.","bibo:AuthorList":["Cohn, A."],"dc:date":"1982-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98128,"sim:weight":0.450714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.250624,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008571,"sim:weight":0.18018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85014,"sim:weight":0.171907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98072,"sim:weight":0.167578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.163851,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.149394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43158,"sim:weight":0.139497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44655,"sim:weight":0.130725,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21797,"sim:weight":0.126629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.121773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15730,"sim:weight":0.121463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84618,"sim:weight":0.120623,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.11493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.113396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.112563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43155,"sim:weight":0.112338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.107081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43142,"sim:weight":0.106841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43347,"sim:weight":0.104315,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72758,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On using Edinburgh LCF to prove the correctness of a\n        parsing algorithm","bibo:abstract":"The methodology of Edinburgh LCF, a mechanized interactive proof\n        system is illustrated through a problem suggested by Gloess –\n        the proof of a simple parsing algorithm. The paper is\n        self-contained, giving only the relevant details of the LCF\n        proof system. It is shown how tactics may be composed in LCF to\n        yield a strategy which is appropriate for the parser problem but\n        which is also of a generally useful form. Also illustrated is a\n        general mechanized method of deriving structural induction rules\n        within the system.","bibo:AuthorList":["Cohn, Avra","Milner, Robin"],"dc:date":"1982-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":98128,"sim:weight":0.27574,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98135,"sim:weight":0.247704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2744734,"sim:weight":0.201662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.198066,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98090,"sim:weight":0.190505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972872,"sim:weight":0.188461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9996,"sim:weight":0.18373,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9935,"sim:weight":0.181516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008571,"sim:weight":0.17643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98072,"sim:weight":0.17399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19821,"sim:weight":0.166316,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85014,"sim:weight":0.16486,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386661,"sim:weight":0.152148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43158,"sim:weight":0.14926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98084,"sim:weight":0.142111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44655,"sim:weight":0.136444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56211,"sim:weight":0.136163,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.133538,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.131792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8827025,"sim:weight":0.125944,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72760,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The implementation of BCPL on a Z80 based\n        microcomputer","bibo:abstract":"The main aim of this project was to achieve as full an\n        implementation as possible of BCPL on a floppy disc based\n        microcomputer, running CP/M or CDOS (the two being esentially\n        compatible). On the face of it there seemed so many limiting\n        factors, that, when the project was started, it was not at all\n        clear which one (if any) would become a final stumbling block.\n        As it happened, the major problems that cropped up could be\n        programmed round, or altered in such a way as to make them\n        soluble.\n        \n        The main body of the work splits comfortably into three\n        sections, and the writer hopes that, in covering each section\n        separately, to be able to show how the whole project fits\n        together into the finished implementation.","bibo:AuthorList":["Wilson, I.D."],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":99204,"sim:weight":0.279169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387418,"sim:weight":0.238755,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108408,"sim:weight":0.232345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4154506,"sim:weight":0.230522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99088,"sim:weight":0.229318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15258,"sim:weight":0.228995,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101441,"sim:weight":0.222217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43077,"sim:weight":0.221927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99087,"sim:weight":0.217841,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.21777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2778976,"sim:weight":0.213784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108269,"sim:weight":0.210675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":3172,"sim:weight":0.209063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108885,"sim:weight":0.20512,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46605,"sim:weight":0.197544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1382015,"sim:weight":0.19651,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.193727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27100,"sim:weight":0.193657,"sim:AssociationMethod":"similarity_cosine"},{"identifier":58972,"sim:weight":0.190904,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1632082,"sim:weight":0.189569,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72762,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Store to store swapping for TSO under OS/MVT","bibo:abstract":"A system of store-to-store swapping incorporated into TSO on the\n        Cambridge IBM 370/165 is described. Unoccupied store in the\n        dynamic area is used as the first stage of a two-stage backing\n        store for swapping time-sharing sessions; a fixed-head disc\n        provides the second stage. The performance and costs of the\n        system are evaluated.","bibo:AuthorList":["Powers, J.S."],"dc:date":"1980-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2710187,"sim:weight":0.173394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108139,"sim:weight":0.137352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381374,"sim:weight":0.135465,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1152057,"sim:weight":0.120884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.110001,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.0888703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26473,"sim:weight":0.0884108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98761,"sim:weight":0.0883129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767715,"sim:weight":0.0869747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99087,"sim:weight":0.085124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108453,"sim:weight":0.0834357,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98792,"sim:weight":0.0812686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":94409,"sim:weight":0.078973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":725649,"sim:weight":0.0785277,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664673,"sim:weight":0.0776288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386931,"sim:weight":0.0773258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.0772115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.0769411,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.0769411,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.0769411,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72764,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Resource allocation and job scheduling","bibo:abstract":"The mechanisms for sharing the resources of the Cambridge IBM\n        370/165 computer system among many individual users are\n        described. File store is treated separately from other resources\n        such as central processor and channel time. In both cases,\n        flexible systems that provide incentives to thrifty behaviour\n        are used. The method of allocating resources directly to users\n        rather than in a hierarchical manner via faculties and\n        departments is described, and its social acceptability is\n        discussed.","bibo:AuthorList":["Hazel, Philip"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":765772,"sim:weight":0.301204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1136646,"sim:weight":0.282884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145901,"sim:weight":0.267815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765331,"sim:weight":0.264394,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43091,"sim:weight":0.253148,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43088,"sim:weight":0.23749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":762337,"sim:weight":0.23736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43066,"sim:weight":0.211738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.208804,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116768,"sim:weight":0.205345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.191576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43309,"sim:weight":0.185823,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.183127,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.181883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26473,"sim:weight":0.17927,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187483,"sim:weight":0.170576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.164966,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43137,"sim:weight":0.164885,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.160774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44610,"sim:weight":0.15582,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72766,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Automatic resolution of linguistic\n        ambiguities","bibo:abstract":"The thesis describes the design, implementation and testing of a\n        natural language analysis system capable of performing the task\n        of generating paraphrases in a highly ambiguous environment. The\n        emphasis is on incorporating strong semantic judgement in an\n        augmented transition network grammar: the system provides a\n        framework for examining the relationship between syntax and\n        semantics in the process of text analysis, especially while\n        treating the related phenomena of lexical and structural\n        ambiguity. Word-sense selection is based on global analysis of\n        context within a semantically well-formed unit, with primary\n        emphasis on the verb choice. In building structures representing\n        text meaning, the analyser relies not on screening through many\n        alternative structures – intermediate, syntactic or partial\n        semantic – but on dynamically constructing only the valid ones.\n        The two tasks of sense selection and structure building are\n        procedurally linked by the application of semantic routines\n        derived from Y. Wilks’ preference semantics, which are invoked\n        at certain well chosen points of the syntactic constituent\n        analysis – this delimits the scope of their action and provides\n        context for a particular disambiguation technique. The\n        hierarchical process of sentence analysis is reflected in the\n        hierarchical organisation of application of these semantic\n        routines – this allows the efficient coordination of various\n        disambiguation techniques, and the reduction of syntactic\n        backtracking, non-determinism in the grammar, and semantic\n        parallelism. The final result of the analysis process is a\n        dependency structure providing a meaning representation of the\n        input text with labelled components centred on the main verb\n        element, each characterised in terms of semantic primitives and\n        expressing both the meaning of a constituent and its function in\n        the overall textual unit. The representation serves as an input\n        to the generator, organised around the same underlying principle\n        as the analyser – the verb is central to the clause. Currently\n        the generator works in paraphrase mode, but is specifically\n        designed so that with minimum effort and virtually no change in\n        the program control structure and code it could be switched over\n        to perform translation.\n        \n        The thesis discusses the rationale for the approach adopted,\n        comparing it with others, describes the system and its machine\n        implementation, and presents experimental results.","bibo:AuthorList":["Boguraev, Branimir Konstatinov"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1661515,"sim:weight":0.362651,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81499,"sim:weight":0.336292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81502,"sim:weight":0.319442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930751,"sim:weight":0.309396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43715,"sim:weight":0.308768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108341,"sim:weight":0.302356,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710234,"sim:weight":0.298511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70542,"sim:weight":0.284925,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187933,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187934,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187935,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187936,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187937,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187938,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187939,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187940,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187941,"sim:weight":0.281543,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21224,"sim:weight":0.280446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4188619,"sim:weight":0.279634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108337,"sim:weight":0.273733,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72769,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Parrot – A replacement for TCAM","bibo:abstract":"The terminal driving software and hardware for the Cambridge TSO\n        (Phoenix) system is described. TCAM and the IBM communications\n        controller were replaced by a locally written software system\n        and a PDP-11 complex. This provided greater flexibility,\n        reliability, efficiency and a better “end-user” interface than\n        was possible under a standard IBM system.","bibo:AuthorList":["Hazel, P.","Stoneley, A.J.M."],"dc:date":"1976-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4151608,"sim:weight":0.248202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4161427,"sim:weight":0.248202,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707696,"sim:weight":0.240216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57232,"sim:weight":0.222176,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69879,"sim:weight":0.207791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185260,"sim:weight":0.179091,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707868,"sim:weight":0.178924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187477,"sim:weight":0.175435,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.146675,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.143035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.136249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54732,"sim:weight":0.132433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108164,"sim:weight":0.12853,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71066,"sim:weight":0.127943,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2018524,"sim:weight":0.127284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26739,"sim:weight":0.125444,"sim:AssociationMethod":"similarity_cosine"},{"identifier":765108,"sim:weight":0.125279,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.124743,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23836,"sim:weight":0.122671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934095,"sim:weight":0.120942,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72771,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The dynamic creation of I/O paths under\n        OS/360-MVT","bibo:abstract":"In a large computer it is often desirable and convenient for an\n        ordinary program to be able to establish for itself a logical\n        connection to a peripheral device. This ability is normally\n        provided through a routine within the operating system which may\n        be called by any user program at any time. OS/360 lacks such a\n        routine. For the batch job, peripheral connections can only be\n        made through the job control language and this cannot be done\n        dynamically at run-time. In the restricted context of TSO (IBM’s\n        terminal system) a routine for establishing peripheral\n        connections does exist, but it is extremely inefficient and\n        difficult to use.\n        \n        This paper describes how a suitable routine was written and\n        grafted into the operating system of the Cambridge 370/165.","bibo:AuthorList":["Stoneley, A.J.M."],"dc:date":"1975-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":898406,"sim:weight":0.288983,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930653,"sim:weight":0.211897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.209028,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387371,"sim:weight":0.207431,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.205953,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46775,"sim:weight":0.194976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.193753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108269,"sim:weight":0.193012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.189011,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.186568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107089,"sim:weight":0.185138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.176126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.173895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930481,"sim:weight":0.173337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53645,"sim:weight":0.172839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70404,"sim:weight":0.172805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":955777,"sim:weight":0.171381,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43861,"sim:weight":0.171362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.169133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187553,"sim:weight":0.168944,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72773,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A replacement for the OS/360 disc space management\n        routines","bibo:abstract":"In the interest of efficiency, the IBM disc space management\n        routines (Dadsm) have been completely replaced in the Cambridge\n        370/165.\n        \n        A large reduction in the disc traffic has been achieved by\n        keeping the lists of free tracks in a more compact form and by\n        keeping lists of free VTOC blocks. The real time taken in a\n        typical transaction has been reduced by a factor of twenty.\n        \n        By writing the code in a more appropriate form than the\n        original, the size has been decreased by a factor of five, thus\n        making it more reasonable to keep it permanently resident. The\n        cpu requirement has decreased from 5% to 0.5% of the total time\n        during normal service.\n        \n        The new system is very much safer than the old in the fact of\n        total system crashes. The old system gave little attention to\n        the consequences of being stopped in mid-flight, and it was\n        common to discover an area of disc allocated to two files. This\n        no longer happens.","bibo:AuthorList":["Stoneley, A.J.M."],"dc:date":"1975-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1664656,"sim:weight":0.211318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":60875,"sim:weight":0.201762,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98604,"sim:weight":0.20111,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664210,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.195784,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.180736,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.177626,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.175413,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72775,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Scheduling for a share of the machine","bibo:abstract":"This paper describes the mechanism used to schedule jobs and\n        control machine use on the IBM 370/165 at Cambridge University,\n        England. The same algorithm is currently being used in part at\n        the University of Bradford and implementations are in progress\n        or under study for a number of other British Universities.\n        \n        The system provides computer management with a simple tool for\n        controlling machine use. The managerial decision allocates a\n        share of the total machine resources to each user of the system,\n        either directly, or via a hierarchial allocation scheme. The\n        system then undertakes to vary the turnaround of user jobs to\n        ensure that those decisions are effective, no matter what sort\n        of work the user is doing.\n        \n        At the user end of the system we have great flexibility in the\n        way in which he uses the resources he has received, allowing him\n        to get a rapid turnaround for those (large or small) jobs which\n        require it, and a slower turnaround for other jobs. Provided he\n        does not work at a rate exceeding that appropriate to his share\n        of the machine, he can request, for every job he submits, the\n        ‘deadline’ by which he wants it running, and the system will\n        usually succeed in running his job at about the requested time –\n        rarely later, and only occasionally sooner.\n        \n        Every job in the machine has its own ‘deadline’, and the machine\n        is not underloaded. Within limits, each user can request his\n        jobs back when he wants them, and the system keeps his use to\n        within the share of the machine he has been given. The approach\n        is believed to be an original one and to have a number of\n        advantages over more conventional scheduling and controlling\n        algorithms.","bibo:AuthorList":["Larmouth, J."],"dc:date":"1974-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":24780,"sim:weight":0.400976,"sim:AssociationMethod":"similarity_cosine"},{"identifier":47027,"sim:weight":0.355225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.354629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":79585,"sim:weight":0.321972,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43088,"sim:weight":0.300521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105101,"sim:weight":0.298218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25849,"sim:weight":0.269222,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108269,"sim:weight":0.242102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.240845,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101470,"sim:weight":0.239698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145901,"sim:weight":0.231749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383645,"sim:weight":0.229954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383317,"sim:weight":0.227033,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.225891,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.220714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187738,"sim:weight":0.219876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4158458,"sim:weight":0.218879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105051,"sim:weight":0.216321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.214094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4162456,"sim:weight":0.213946,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":72777,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The JACKDAW database package","bibo:abstract":"This report describes a general database package which has been\n        implemented in BCPL on an IBM 370/165 at the University of\n        Cambridge. One current application is the provision of an\n        administrative database for the Computing Service.\n        \n        Entries within a database may include (in addition to primitive\n        fields such as ‘salary’ and ‘address’) links to other entries:\n        each link represents a relationship between two entries and is\n        always two-way.\n        \n        Generality is achieved by including within each database class\n        definitions which define the structure of the entries within it;\n        these definitions may be interrogated by program.\n        \n        The major part of the package presents a procedural interface\n        between an application program and an existing database,\n        enabling entries and their fields to be created, interrogated,\n        updated and deleted. The creation of a new database (or\n        modification of an existing one) by specifying the class\n        definitions is handled by a separate program.\n        \n        The first part of the report describes the database structure\n        and this is followed by an illustration of the procedural\n        interface. Finally, some of the implementation techniques used\n        to insure integrity of the database are described.","bibo:AuthorList":["Challis, M.F."],"dc:date":"1974-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":108164,"sim:weight":0.258689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105051,"sim:weight":0.210936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.196658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46712,"sim:weight":0.18673,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99150,"sim:weight":0.186511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998016,"sim:weight":0.184324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.166044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.164527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932721,"sim:weight":0.160907,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.157581,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98785,"sim:weight":0.157302,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549812,"sim:weight":0.154815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.149128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57517,"sim:weight":0.14615,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934640,"sim:weight":0.14262,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932725,"sim:weight":0.142099,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934654,"sim:weight":0.139493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.138584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43137,"sim:weight":0.136588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101269,"sim:weight":0.134047,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":73993,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Distributed computing with RPC: the Cambridge\n        approach","bibo:abstract":"The Cambridge Distributed Computing System (CDCS) is described\n        and its evolution outlined. The Mayflower project allowed CDCS\n        infrastructure, services and applications to be programmed in a\n        high level, object oriented, language, Concurrent CLU. The\n        Concurrent CLU RPC facility is described in detail. It is a\n        non-transparent, type checked, type safe system which employs\n        dynamic binding and passes objects of arbitrary graph structure.\n        Recent extensions accomodate a number of languages and transport\n        protocols. A comparison with other RPC schemes is given.","bibo:AuthorList":["Bacon, J.M.","Hamilton, K.G."],"dc:date":"1987-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":69318,"sim:weight":0.19829,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91449,"sim:weight":0.187378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.169078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930696,"sim:weight":0.153491,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.147815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.14298,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1141387,"sim:weight":0.141209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.131164,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1018917,"sim:weight":0.121853,"sim:AssociationMethod":"similarity_cosine"},{"identifier":386709,"sim:weight":0.121231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99411,"sim:weight":0.120981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389830,"sim:weight":0.10926,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549553,"sim:weight":0.107456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.107396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.107322,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.105414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997927,"sim:weight":0.104108,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.10375,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41028,"sim:weight":0.103558,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70193,"sim:weight":0.10106,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387861,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Category theory and models for parallel\n        computation","bibo:abstract":"This report will illustrate two uses of category theory: Firstly\n        the use of category theory to define semantics in a particular\n        model. How semantic constructions can often be seen as\n        categorical ones, and, in particular, how parallel compositions\n        are derived from a categorical product and a nun-deterministic\n        sum. These categorical notions can provide a basis for reasoning\n        about computations and will be illustrated for the model of\n        Petri nets.\n        \n        Secondly, the use of category theory to relate different\n        semantics will be examined; specifically, how the relations\n        between various concrete models like Petri nets, event\n        structures, trees and state machines are expressed as\n        adjunctions. This will be illustrated by showing the\n        coreflection between safe Petri nets and trees.","bibo:AuthorList":["Winskel, Glynn"],"dc:date":"1986-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934382,"sim:weight":0.495351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934424,"sim:weight":0.488227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934371,"sim:weight":0.407119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934387,"sim:weight":0.400211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.395122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.395122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934438,"sim:weight":0.379747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934446,"sim:weight":0.372142,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934392,"sim:weight":0.366046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934270,"sim:weight":0.361815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934432,"sim:weight":0.360112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.34505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934419,"sim:weight":0.335622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000286,"sim:weight":0.318419,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.282347,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000287,"sim:weight":0.280742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934327,"sim:weight":0.278974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84974,"sim:weight":0.261204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101552,"sim:weight":0.245107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932287,"sim:weight":0.240093,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387862,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Planning multisentential English text using\n        communicative acts","bibo:abstract":"The goal of this research is to develop explanation presentation\n        mechanisms for knowledge based systems which enable them to\n        define domain terminology and concepts, narrate events,\n        elucidate plans, processes, or propositions and argue to support\n        a claim or advocate action. This requires the development of\n        devices which select, structure, order and then linguistically\n        realize explanation content as coherent and cohesive English\n        text.\n        \n        With the goal of identifying generic explanation presentation\n        strategies, a wide range of naturally occurring texts were\n        analyzed with respect to their communicative structure,\n        function, content and intended effects on the reader. This\n        motivated an integrated theory of communicative acts which\n        characterizes text at the level of rhetorical acts (e.g.\n        describe, define, narrate), illocutionary acts (e.g. inform,\n        request), and locutionary acts (ask, command). Taken as a whole,\n        the identified communicative acts characterize the structure,\n        content and intended effects of four types of text: description,\n        narration, exposition, argument. These text types have distinct\n        effects such as getting the reader to know about entities, to\n        know about events, to understand plans, processes, or\n        propositions, or to believe propositions or want to perform\n        actions. In addition to identifying the communicative function\n        and effect of text at multiple levels of abstraction, this\n        dissertation details a tripartite theory of focus of attention\n        (discourse focus, temporal focus and spatial focus) which\n        constrains the planning and linguistic realization of text.\n        \n        To test the integrated theory of communicative acts and\n        tripartite theory of focus of attention, a text generation\n        system TEXPLAN (Textual EXplanation PLANner) was implemented\n        that plans and linguistically realizes multisentential and\n        multiparagraph explanations from knowledge based systems. The\n        communicative acts identified during text analysis were\n        formalized over sixty compositional and (in some cases)\n        recursive plan operators in the library of a hierarchical\n        planner. Discourse, temporal and spatial models were implemented\n        to track and use attentional information to guide the\n        organization and realization of text. Because the plan operators\n        distinguish between the communicative function (e.g. argue for a\n        proposition) and the expected effect (e.g. the reader believes\n        the proposition) of communicative acts, the system is able to\n        construct a discourse model of the structure and function of its\n        textual responses as well as a user model of the expected\n        effects of its responses on the reader’s knowledge, beliefs, and\n        desires. The system uses both the discourse model and user model\n        to guide subsequent utterances. To test its generality, the\n        system was interfaced to a variety of domain applications\n        including a neuropsychological diagnosis system, a mission\n        planning system, and a knowledge based mission simulator. The\n        system produces descriptions, narratives, expositions and\n        arguments from these applications, thus exhibiting a broader\n        ranger of rhetorical coverage then previous text generation\n        systems.","bibo:AuthorList":["Maybury, Mark Thomas"],"dc:date":"1991-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9949,"sim:weight":0.607818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43098,"sim:weight":0.548969,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98829,"sim:weight":0.524789,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86517,"sim:weight":0.493738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99115,"sim:weight":0.486131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81602,"sim:weight":0.464632,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.458315,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43142,"sim:weight":0.456206,"sim:AssociationMethod":"similarity_cosine"},{"identifier":41275,"sim:weight":0.453961,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278034,"sim:weight":0.44859,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46645,"sim:weight":0.442544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":81603,"sim:weight":0.441493,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87335,"sim:weight":0.440881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":74217,"sim:weight":0.437888,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1888,"sim:weight":0.428248,"sim:AssociationMethod":"similarity_cosine"},{"identifier":319,"sim:weight":0.418899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1187,"sim:weight":0.415539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43715,"sim:weight":0.411655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998282,"sim:weight":0.409174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":278029,"sim:weight":0.407575,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387863,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Managing complex models for computer graphics","bibo:abstract":"Three-dimensional computer graphics is becoming more common as\n        increasing computational power becomes more readily available.\n        Although the images that can be produced are becoming more\n        complex, users’ expectations continue to grow. This dissertation\n        examines the changes in computer graphics software that will be\n        needed to support continuing growth in complexity, and proposes\n        techniques for tackling the problems that emerge.\n        \n        Increasingly complex models will involve longer rendering times,\n        higher memory requirements, longer data transfer periods and\n        larger storage capacities. Furthermore, even greater demands\n        will be placed on the constructors of such models. This\n        dissertation aims to describe how to construct scalable systems\n        which can be used to visualise models of any size without\n        requiring dedicated hardware. This is achieved by controlling\n        the quality of the results, and hence the costs incurred. In\n        addition, the use of quality controls can become a tool to help\n        users handle the large volume of information arising from\n        complex models.\n        \n        The underlying approach is to separate the model from the\n        graphics application which uses it, so that the model exists\n        independently. By doing this, an application is free to access\n        only the data which is required at any given time. For the\n        application to function in this manner, the data must be in an\n        appropriate form. To achieve this, approximation hierarchies are\n        defined as a suitable new model structure. These utilise\n        multiple representations of both objects and groups of objects\n        at all levels in the model.\n        \n        In order to support such a structure, a novel method is proposed\n        for rapidly constructing simplified representations of groups of\n        complex objects. By calculating a few geometrical attributes, it\n        is possible to generate replacement objects that preserve\n        important aspects of the originals. Such objects, once placed\n        into an approximation hierarchy, allow rapid loading and\n        rendering of large portions of a model. Extensions to rendering\n        algorithms are described that take advantage of this structure.\n        \n        The use of multiple representations encompasses not only\n        different quality levels, but also different storage formats and\n        types of objects. It provides a framework within which such\n        aspects are hidden from the user, facilitating the sharing and\n        re-use of objects. A model manager is proposed as a means of\n        encapsulating these mechanisms. This software gives, as far as\n        possible, the illusion of direct access to the whole complex\n        model, while at the same time making the best use of the limited\n        resources available.","bibo:AuthorList":["Sewell, Jonathan Mark"],"dc:date":"1997-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":4186344,"sim:weight":0.386089,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.3507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1386227,"sim:weight":0.330005,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387404,"sim:weight":0.315228,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.31055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.308446,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15620,"sim:weight":0.308196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.30484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98518,"sim:weight":0.304107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795070,"sim:weight":0.300285,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664656,"sim:weight":0.299401,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.296547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.296289,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98504,"sim:weight":0.289046,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.288414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.288414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.288414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.288414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.288414,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661729,"sim:weight":0.288414,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387864,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Software visualization in Prolog","bibo:abstract":"Software visualization (SV) uses computer graphics to\n        communicate the structure and behaviour of complex software and\n        algorithms. One of the important issues in this field is how to\n        specify SV, because existing systems are very cumbersome to\n        specify and implement, which limits their effectiveness and\n        hinders SV from being integrated into professional software\n        development tools.\n        \n        In this dissertation the visualization process is decomposed\n        into a series of formal mappings, which provides a formal\n        foundation, and allows separate aspects of visualization to be\n        specified independently. The first mapping specifies the\n        information content of each view. The second mapping specifies a\n        graphical representation of the information, and a third mapping\n        specifies the graphical components that make up the graphical\n        representation. By combining different mappings, completely\n        different views can be generated.\n        \n        The approach has been implemented in Prolog to provide a very\n        high level specification language for information visualization,\n        and a knowledge engineering environment that allows data queries\n        to tailor the information in a view. The output is generated by\n        a graphical constraint solver that assembles the graphical\n        components into a scene.\n        \n        This system provides a framework for SV called Vmax. Source code\n        and run-time data are analyzed by Prolog to provide access to\n        information about the program structure and run-time data for a\n        wide range of highly interconnected browsable views. Different\n        views and means of visualization can be selected from menus. An\n        automatic legend describes each view, and can be interactively\n        modified to customize how data is presented. A text window for\n        editing source code is synchronized with the graphical view.\n        Vmax is a complete Java development environment and end user SV\n        system.\n        \n        Vmax compares favourably to existing SV systems in many\n        taxonometric criteria, including automation, scope, information\n        content, graphical output form, specification, tailorability,\n        navigation, granularity and elision control. The performance and\n        scalability of the new approach is very reasonable.\n        \n        We conclude that Prolog provides a formal and high level\n        specification language that is suitable for specifying all\n        aspects of a SV system.","bibo:AuthorList":["Grant, Calum"],"dc:date":"1999-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1145576,"sim:weight":0.450438,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2707870,"sim:weight":0.420913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108432,"sim:weight":0.403064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43093,"sim:weight":0.401156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":268168,"sim:weight":0.395104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998215,"sim:weight":0.394865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":51023,"sim:weight":0.393701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934818,"sim:weight":0.377832,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1086042,"sim:weight":0.360355,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.359214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":113,"sim:weight":0.358406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43159,"sim:weight":0.357889,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.355546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55486,"sim:weight":0.355251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106354,"sim:weight":0.353325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9015106,"sim:weight":0.353053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.352936,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43185,"sim:weight":0.351433,"sim:AssociationMethod":"similarity_cosine"},{"identifier":757535,"sim:weight":0.348587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997520,"sim:weight":0.347304,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387865,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Decimalisation table attacks for PIN cracking","bibo:abstract":"We present an attack on hardware security modules used by retail\n        banks for the secure storage and verification of customer PINs\n        in ATM (cash machine) infrastructures. By using adaptive\n        decimalisation tables and guesses, the maximum amount of\n        information is learnt about the true PIN upon each guess. It\n        takes an average of 15 guesses to determine a four digit PIN\n        using this technique, instead of the 5000 guesses intended. In a\n        single 30 minute lunch-break, an attacker can thus discover\n        approximately 7000 PINs rather than 24 with the brute force\n        method. With a £300 withdrawal limit per card, the potential\n        bounty is raised from £7200 to £2.1 million and a single\n        motivated attacker could withdraw £30–50 thousand of this each\n        day. This attack thus presents a serious threat to bank\n        security.","bibo:AuthorList":["Bond, Mike","Zieliński, Piotr"],"dc:date":"2003-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":99301,"sim:weight":0.270141,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.2496,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.232843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.219742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":877856,"sim:weight":0.212908,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116722,"sim:weight":0.206744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1138774,"sim:weight":0.183266,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186346,"sim:weight":0.182035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":672668,"sim:weight":0.180268,"sim:AssociationMethod":"similarity_cosine"},{"identifier":25904,"sim:weight":0.170506,"sim:AssociationMethod":"similarity_cosine"},{"identifier":95492,"sim:weight":0.157894,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826875,"sim:weight":0.1541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1146107,"sim:weight":0.143372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":773016,"sim:weight":0.140055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8223,"sim:weight":0.1399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664687,"sim:weight":0.136977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46815,"sim:weight":0.135928,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1021190,"sim:weight":0.134947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931524,"sim:weight":0.134396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12059,"sim:weight":0.134109,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387866,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Bayesian inference for latent variable models","bibo:abstract":"Bayes’ theorem is the cornerstone of statistical inference. It\n        provides the tools for dealing with knowledge in an uncertain\n        world, allowing us to explain observed phenomena through the\n        refinement of belief in model parameters. At the heart of this\n        elegant framework lie intractable integrals, whether in\n        computing an average over some posterior distribution, or in\n        determining the normalizing constant of a distribution. This\n        thesis examines both deterministic and stochastic methods in\n        which these integrals can be treated. Of particular interest\n        shall be parametric models where the parameter space can be\n        extended with additional latent variables to get distributions\n        that are easier to handle algorithmically.\n        \n        Deterministic methods approximate the posterior distribution\n        with a simpler distribution over which the required integrals\n        become tractable. We derive and examine a new generic\n        α-divergence message passing scheme for a multivariate mixture\n        of Gaussians, a particular modeling problem requiring latent\n        variables. This algorithm minimizes local α-divergences over a\n        chosen posterior factorization, and includes variational Bayes\n        and expectation propagation as special cases.\n        \n        Stochastic (or Monte Carlo) methods rely on a sample from the\n        posterior to simplify the integration tasks, giving exact\n        estimates in the limit of an infinite sample. Parallel tempering\n        and thermodynamic integration are introduced as ‘gold standard’\n        methods to sample from multimodal posterior distributions and\n        determine normalizing constants. A parallel tempered approach to\n        sampling from a mixture of Gaussians posterior through Gibbs\n        sampling is derived, and novel methods are introduced to improve\n        the numerical stability of thermodynamic integration.\n        \n        A full comparison with parallel tempering and thermodynamic\n        integration shows variational Bayes, expectation propagation,\n        and message passing with the Hellinger distance α \u003d 1/2 to be\n        perfectly suitable for model selection, and for approximating\n        the predictive distribution with high accuracy.\n        \n        Variational and stochastic methods are combined in a novel way\n        to design Markov chain Monte Carlo (MCMC) transition densities,\n        giving a variational transition kernel, which lower bounds an\n        exact transition kernel. We highlight the general need to mix\n        variational methods with other MCMC moves, by proving that the\n        variational kernel does not necessarily give a geometrically\n        ergodic chain.","bibo:AuthorList":["Paquet, Ulrich"],"dc:date":"2008-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":18442,"sim:weight":0.567407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999574,"sim:weight":0.519671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9620318,"sim:weight":0.471104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20554,"sim:weight":0.457189,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20440,"sim:weight":0.454992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826748,"sim:weight":0.45064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18434,"sim:weight":0.442212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46884,"sim:weight":0.439791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826747,"sim:weight":0.435406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22426,"sim:weight":0.432231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241154,"sim:weight":0.429985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20680,"sim:weight":0.429258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71003,"sim:weight":0.422906,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20258,"sim:weight":0.413785,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931198,"sim:weight":0.41338,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19547,"sim:weight":0.411371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826798,"sim:weight":0.406511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":240453,"sim:weight":0.406244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241273,"sim:weight":0.404564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21171,"sim:weight":0.399431,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387867,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The snooping dragon: social-malware surveillance of the\n        Tibetan movement","bibo:abstract":"In this note we document a case of malware-based electronic\n        surveillance of a political organisation by the agents of a\n        nation state. While malware attacks are not new, two aspects of\n        this case make it worth serious study. First, it was a targeted\n        surveillance attack designed to collect actionable intelligence\n        for use by the police and security services of a repressive\n        state, with potentially fatal consequences for those exposed.\n        Second, the modus operandi combined social phishing with\n        high-grade malware. This combination of well-written malware\n        with well-designed email lures, which we call social malware, is\n        devastatingly effective. Few organisations outside the defence\n        and intelligence sector could withstand such an attack, and\n        although this particular case involved the agents of a major\n        power, the attack could in fact have been mounted by a capable\n        motivated individual. This report is therefore of importance not\n        just to companies who may attract the attention of government\n        agencies, but to all organisations. As social-malware attacks\n        spread, they are bound to target people such as accounts-payable\n        and payroll staff who use computers to make payments. Prevention\n        will be hard. The traditional defence against social malware in\n        government agencies involves expensive and intrusive measures\n        that range from mandatory access controls to tiresome\n        operational security procedures. These will not be sustainable\n        in the economy as a whole. Evolving practical low-cost defences\n        against social-malware attacks will be a real challenge.","bibo:AuthorList":["Nagaraja, Shishir","Anderson, Ross"],"dc:date":"2009-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":684257,"sim:weight":0.39771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1383592,"sim:weight":0.383212,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.369047,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.363809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48344,"sim:weight":0.360598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.349244,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1931405,"sim:weight":0.317588,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512571,"sim:weight":0.229836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8223,"sim:weight":0.215748,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98865,"sim:weight":0.184541,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1633027,"sim:weight":0.180064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.171571,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45371,"sim:weight":0.16554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4182556,"sim:weight":0.16522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186346,"sim:weight":0.160879,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4158519,"sim:weight":0.156902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43523,"sim:weight":0.156102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187618,"sim:weight":0.151683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85792,"sim:weight":0.148773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54165,"sim:weight":0.148666,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387868,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Coarse-grained transactions (extended\n        version)","bibo:abstract":"Traditional transactional memory systems suffer from overly\n        conservative conflict detection, yielding so-called false\n        conflicts, because they are based on fine-grained, low-level\n        read/write conflicts. In response, the recent trend has been\n        toward integrating various abstract data-type libraries using\n        ad-hoc methods of high-level conflict detection. These proposals\n        have led to improved performance but a lack of a unified theory\n        has led to confusion in the literature.\n        \n        We clarify these recent proposals by defining a generalization\n        of transactional memory in which a transaction consists of\n        course-grained (abstract data-type) operations rather than\n        simply memory read/write operations. We provide semantics for\n        both pessimistic (e.g. transactional boosting) and optimistic\n        (e.g. traditional TMs and recent alternatives) execution. We\n        show that both are included in the standard atomic semantics,\n        yet find that the choice imposes different requirements on the\n        coarse-grained operations: pessimistic requires operations be\n        left-movers, optimistic requires right-movers. Finally, we\n        discuss how the semantics applies to numerous TM implementation\n        details discussed widely in the literature.","bibo:AuthorList":["Koskinen, Eric","Parkinson, Matthew","Herlihy, Maurice"],"dc:date":"2011-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":757640,"sim:weight":0.300533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.271566,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.251421,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.220547,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.171131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.168478,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145551,"sim:weight":0.165669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103057,"sim:weight":0.161278,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108738,"sim:weight":0.151792,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69995,"sim:weight":0.14981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43180,"sim:weight":0.146613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145822,"sim:weight":0.140677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.130476,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.130146,"sim:AssociationMethod":"similarity_cosine"},{"identifier":796964,"sim:weight":0.126154,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.115357,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187731,"sim:weight":0.115131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.112992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.11266,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.111434,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387869,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Branching-time reasoning for programs (extended\n        version)","bibo:abstract":"We describe a reduction from temporal property verification to a\n        program analysis problem. Our reduction is an encoding which,\n        with the use of procedures and nondeterminism, enables existing\n        interprocedural program analysis tools to naturally perform the\n        reasoning necessary for proving temporal properties (eg.\n        backtracking, eventuality checking, tree counterexamples for\n        branching-time properties, abstraction refinement, etc.). Our\n        reduction is state-based in nature but also forms the basis of\n        an efficient algorithm for verifying trace-based properties,\n        when combined with an iterative symbolic determinization\n        technique, due to Cook and Koskinen.\n        \n        In this extended version, we formalize our encoding as a guarded\n        transition system G, parameterized by a finite set of ranking\n        functions and the temporal logic property. We establish\n        soundness between a safety property of G and the validity of a\n        branching time temporal logic property ∀CTL. ∀CTL is a\n        sufficient logic for proving properties written in the\n        trace-based Linear Temporal Logic via the iterative algorithm.\n        \n        Finally using examples drawn from the PostgreSQL database\n        server, Apache web server, and Windows OS kernel, we demonstrate\n        the practical viability of our work.","bibo:AuthorList":["Cook, Byron","Koskinen, Eric","Vardi, Moshe"],"dc:date":"2011-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":106942,"sim:weight":0.328622,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.256648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9633989,"sim:weight":0.248727,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387124,"sim:weight":0.238935,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.232985,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.218992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.218131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77020,"sim:weight":0.215777,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000313,"sim:weight":0.214511,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.208392,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.205178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931612,"sim:weight":0.205061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930157,"sim:weight":0.190768,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999086,"sim:weight":0.187573,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.185502,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932911,"sim:weight":0.184059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393490,"sim:weight":0.181452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933996,"sim:weight":0.178009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934001,"sim:weight":0.176464,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931585,"sim:weight":0.174984,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387870,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Grammatical error prediction","bibo:abstract":"In this thesis, we investigate methods for automatic detection,\n        and to some extent correction, of grammatical errors. The\n        evaluation is based on manual error annotation in the Cambridge\n        Learner Corpus (CLC), and automatic or semi-automatic annotation\n        of error corpora is one possible application, but the methods\n        are also applicable in other settings, for instance to give\n        learners feedback on their writing or in a proofreading tool\n        used to prepare texts for publication.\n        \n        Apart from the CLC, we use the British National Corpus (BNC) to\n        get a better model of correct usage, WordNet for semantic\n        relations, other machine-readable dictionaries for\n        orthography/morphology, and the Robust Accurate Statistical\n        Parsing (RASP) system to parse both the CLC and the BNC and\n        thereby identify syntactic relations within the sentence. An\n        ancillary outcome of this is a syntactically annotated version\n        of the BNC, which we have made publicly available.\n        \n        We present a tool called GenERRate, which can be used to\n        introduce errors into a corpus of correct text, and evaluate to\n        what extent the resulting synthetic error corpus can complement\n        or replace a real error corpus.\n        \n        Different methods for detection and correction are investigated,\n        including: sentence-level binary classification based on machine\n        learning over n-grams of words, n-grams of part-of-speech tags\n        and grammatical relations; automatic identification of features\n        which are highly indicative of individual errors; and\n        development of classifiers aimed more specifically at given\n        error types, for instance concord errors based on syntactic\n        structure and collocation errors based on co-occurrence\n        statistics from the BNC, using clustering to deal with data\n        sparseness. We show that such techniques can detect, and\n        sometimes even correct, at least certain error types as well as\n        or better than human annotators.\n        \n        We finally present an annotation experiment in which a human\n        annotator corrects and supplements the automatic annotation,\n        which confirms the high detection/correction accuracy of our\n        system and furthermore shows that such a hybrid set-up gives\n        higher-quality annotation with considerably less time and effort\n        expended compared to fully manual annotation.","bibo:AuthorList":["Andersen, Øistein E."],"dc:date":"2011-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":46816,"sim:weight":0.618149,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43860,"sim:weight":0.574497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5616,"sim:weight":0.549649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21876,"sim:weight":0.531121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5222825,"sim:weight":0.523722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91456,"sim:weight":0.52201,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71391,"sim:weight":0.508701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":6612,"sim:weight":0.499429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76438,"sim:weight":0.496343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.493963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":77378,"sim:weight":0.48799,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104744,"sim:weight":0.459942,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43715,"sim:weight":0.454635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5225570,"sim:weight":0.447374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70571,"sim:weight":0.442324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":6293,"sim:weight":0.438497,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104720,"sim:weight":0.436947,"sim:AssociationMethod":"similarity_cosine"},{"identifier":73259,"sim:weight":0.43604,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85011,"sim:weight":0.43434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997738,"sim:weight":0.431628,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387871,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Improving cache utilisation","bibo:abstract":"Microprocessors have long employed caches to help hide the\n        increasing latency of accessing main memory. The vast majority\n        of previous research has focussed on increasing cache hit rates\n        to improve cache performance, while lately decreasing power\n        consumption has become an equally important issue. This thesis\n        examines the lifetime of cache lines in the memory hierarchy,\n        considering whether they are live (will be referenced again\n        before eviction) or dead (will not be referenced again before\n        eviction). Using these two states, the cache utilisation\n        (proportion of the cache which will be referenced again) can be\n        calculated.\n        \n        This thesis demonstrates that cache utilisation is relatively\n        poor over a wide range of benchmarks and cache configurations.\n        By focussing on techniques to improve cache utilisation, cache\n        hit rates are increased while overall power consumption may also\n        be decreased.\n        \n        Key to improving cache utilisation is an accurate predictor of\n        the state of a cache line. This thesis presents a variety of\n        such predictors, mostly based upon the mature field of branch\n        prediction, and compares them against previously proposed\n        predictors. The most appropriate predictors are then\n        demonstrated in two applications: Improving victim cache\n        performance through filtering, and reducing cache pollution\n        during aggressive prefetching\n        \n        These applications are primarily concerned with improving cache\n        performance and are analysed using a detailed microprocessor\n        simulator. Related applications, including decreasing power\n        consumption, are also discussed, as are the applicability of\n        these techniques to multiprogrammed and multiprocessor systems.","bibo:AuthorList":["Srinivasan, James R."],"dc:date":"2011-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8934598,"sim:weight":0.768071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":873059,"sim:weight":0.664128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083563,"sim:weight":0.569525,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286481,"sim:weight":0.478397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948576,"sim:weight":0.40527,"sim:AssociationMethod":"similarity_cosine"},{"identifier":823640,"sim:weight":0.374059,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017976,"sim:weight":0.361197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057195,"sim:weight":0.346172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279561,"sim:weight":0.319334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.285843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1433748,"sim:weight":0.18838,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21339,"sim:weight":0.181695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.175525,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282604,"sim:weight":0.168096,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.164731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":286959,"sim:weight":0.14911,"sim:AssociationMethod":"similarity_cosine"},{"identifier":925909,"sim:weight":0.148436,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21340,"sim:weight":0.147857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.133556,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.130543,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387872,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Software lock elision for x86 machine code","bibo:abstract":"More than a decade after becoming a topic of intense research\n        there is no transactional memory hardware nor any examples of\n        software transactional memory use outside the research\n        community. Using software transactional memory in large pieces\n        of software needs copious source code annotations and often\n        means that standard compilers and debuggers can no longer be\n        used. At the same time, overheads associated with software\n        transactional memory fail to motivate programmers to expend the\n        needed effort to use software transactional memory. The only way\n        around the overheads in the case of general unmanaged code is\n        the anticipated availability of hardware support. On the other\n        hand, architects are unwilling to devote power and area budgets\n        in mainstream microprocessors to hardware transactional memory,\n        pointing to transactional memory being a “niche” programming\n        construct. A deadlock has thus ensued that is blocking\n        transactional memory use and experimentation in the mainstream.\n        \n        This dissertation covers the design and construction of a\n        software transactional memory runtime system called SLE_x86 that\n        can potentially break this deadlock by decoupling transactional\n        memory from programs using it. Unlike most other STM designs,\n        the core design principle is transparency rather than\n        performance. SLE_x86 operates at the level of x86 machine code,\n        thereby becoming immediately applicable to binaries for the\n        popular x86 architecture. The only requirement is that the\n        binary synchronise using known locking constructs or calls such\n        as those in Pthreads or OpenMP libraries. SLE_x86 provides\n        speculative lock elision (SLE) entirely in software, executing\n        critical sections in the binary using transactional memory.\n        Optionally, the critical sections can also be executed without\n        using transactions by acquiring the protecting lock.\n        \n        The dissertation makes a careful analysis of the impact on\n        performance due to the demands of the x86 memory consistency\n        model and the need to transparently instrument x86 machine code.\n        It shows that both of these problems can be overcome to reach a\n        reasonable level of performance, where transparent software\n        transactional memory can perform better than a lock. SLE_x86 can\n        ensure that programs are ready for transactional memory in any\n        form, without being explicitly written for it.","bibo:AuthorList":["Roy, Amitabha"],"dc:date":"2011-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":757640,"sim:weight":0.42258,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931664,"sim:weight":0.388706,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931617,"sim:weight":0.383669,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70207,"sim:weight":0.381603,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.365042,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.354249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.353563,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930412,"sim:weight":0.339918,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932351,"sim:weight":0.336318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145576,"sim:weight":0.335348,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931563,"sim:weight":0.335105,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.332417,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1653036,"sim:weight":0.332205,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.323709,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931661,"sim:weight":0.321389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826908,"sim:weight":0.31187,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2709901,"sim:weight":0.295013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934219,"sim:weight":0.290396,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43115,"sim:weight":0.285034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931612,"sim:weight":0.284444,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387873,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Latent semantic sentence clustering for multi-document\n        summarization","bibo:abstract":"This thesis investigates the applicability of Latent Semantic\n        Analysis (LSA) to sentence clustering for Multi-Document\n        Summarization (MDS). In contrast to more shallow approaches like\n        measuring similarity of sentences by word overlap in a\n        traditional vector space model, LSA takes word usage patterns\n        into account. So far LSA has been successfully applied to\n        different Information Retrieval (IR) tasks like information\n        filtering and document classification (Dumais, 2004). In the\n        course of this research, different parameters essential to\n        sentence clustering using a hierarchical agglomerative\n        clustering algorithm (HAC) in general and in combination with\n        LSA in particular are investigated. These parameters include,\n        inter alia, information about the type of vocabulary, the size\n        of the semantic space and the optimal numbers of dimensions to\n        be used in LSA. These parameters have not previously been\n        studied and evaluated in combination with sentence clustering\n        (chapter 4).\n        \n        This thesis also presents the first gold standard for sentence\n        clustering in MDS. To be able to evaluate sentence clusterings\n        directly and classify the influence of the different parameters\n        on the quality of sentence clustering, an evaluation strategy is\n        developed that includes gold standard comparison using different\n        evaluation measures (chapter 5). Therefore the first compound\n        gold standard for sentence clustering was created. Several human\n        annotators were asked to group similar sentences into clusters\n        following guidelines created for this purpose (section 5.4). The\n        evaluation of the human generated clusterings revealed that the\n        human annotators agreed on clustering sentences above chance.\n        Analysis of the strategies adopted by the human annotators\n        revealed two groups – hunters and gatherers – who differ clearly\n        in the structure and size of the clusters they created (chapter\n        6).\n        \n        On the basis of the evaluation strategy the parameters for\n        sentence clustering and LSA are optimized (chapter 7). A final\n        experiment in which the performance of LSA in sentence\n        clustering for MDS is compared to the simple word matching\n        approach of the traditional Vector Space Model (VSM) revealed\n        that LSA produces better quality sentence clusters for MDS than\n        VSM.","bibo:AuthorList":["Geiß, Johanna"],"dc:date":"2011-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":21126,"sim:weight":0.504683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19933,"sim:weight":0.48092,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1020545,"sim:weight":0.463216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22068,"sim:weight":0.46276,"sim:AssociationMethod":"similarity_cosine"},{"identifier":937440,"sim:weight":0.459346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16094,"sim:weight":0.451207,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19992,"sim:weight":0.434136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19655,"sim:weight":0.410061,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19948,"sim:weight":0.404955,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18521,"sim:weight":0.388443,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5834894,"sim:weight":0.373848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18505,"sim:weight":0.366523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22515,"sim:weight":0.364613,"sim:AssociationMethod":"similarity_cosine"},{"identifier":922951,"sim:weight":0.353459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15988,"sim:weight":0.343903,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.336704,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46042,"sim:weight":0.326745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56310,"sim:weight":0.321155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14901,"sim:weight":0.319364,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.318832,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387874,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Computational approaches to figurative\n        language","bibo:abstract":"The use of figurative language is ubiquitous in natural language\n        text and it is a serious bottleneck in automatic text\n        understanding. A system capable of interpreting figurative\n        language would be extremely beneficial to a wide range of\n        practical NLP applications. The main focus of this thesis is on\n        the phenomenon of metaphor. I adopt a statistical data-driven\n        approach to its modelling, and create the first open-domain\n        system for metaphor identification and interpretation in\n        unrestricted text. In order to verify that similar methods can\n        be applied to modelling other types of figurative language, I\n        then extend this work to the task of interpretation of logical\n        metonymy.\n        \n        The metaphor interpretation system is capable of discovering\n        literal meanings of metaphorical expressions in text. For the\n        metaphors in the examples “All of this stirred an unfathomable\n        excitement in her” or “a carelessly leaked report” the system\n        produces interpretations “All of this provoked an unfathomable\n        excitement in her” and “a carelessly disclosed report”\n        respectively. It runs on unrestricted text and to my knowledge\n        is the only existing robust metaphor paraphrasing system. It\n        does not employ any hand-coded knowledge, but instead derives\n        metaphorical interpretations from a large text corpus using\n        statistical pattern-processing. The system was evaluated with\n        the aid of human judges and it operates with the accuracy of\n        81%.\n        \n        The metaphor identification system automatically traces the\n        analogies involved in the production of a particular\n        metaphorical expression in a minimally supervised way. The\n        system generalises over the analogies by means of verb and noun\n        clustering, i.e. identification of groups of similar concepts.\n        This generalisation makes it capable of recognising previously\n        unseen metaphorical expressions in text, e.g. having once seen a\n        metaphor ‘stir excitement’ the system concludes that ‘swallow\n        anger’ is also used metaphorically. The system identifies\n        metaphorical expressions with a high precision of 79%.\n        \n        The logical metonymy processing system produces a list of\n        metonymic interpretations disambiguated with respect to their\n        word sense. It then automatically organises them into a novel\n        class-based model of logical metonymy inspired by both empirical\n        evidence and linguistic theory. This model provides more\n        accurate and generalised information about possible\n        interpretations of metonymic phrases than previous approaches.","bibo:AuthorList":["Shutova, Ekaterina V."],"dc:date":"2011-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":91455,"sim:weight":0.551769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68082,"sim:weight":0.476471,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85578,"sim:weight":0.473916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15733,"sim:weight":0.45652,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4393,"sim:weight":0.445155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76515,"sim:weight":0.43034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":104720,"sim:weight":0.428735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19655,"sim:weight":0.424775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22376,"sim:weight":0.423871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":17956,"sim:weight":0.41406,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56724,"sim:weight":0.407133,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21225,"sim:weight":0.405187,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70542,"sim:weight":0.401475,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98933,"sim:weight":0.40018,"sim:AssociationMethod":"similarity_cosine"},{"identifier":75327,"sim:weight":0.397683,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68083,"sim:weight":0.396591,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997738,"sim:weight":0.395746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86637,"sim:weight":0.391786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70572,"sim:weight":0.390074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56756,"sim:weight":0.379202,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387875,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The HasGP user manual","bibo:abstract":"HasGP is an experimental library implementing methods for\n        supervised learning using Gaussian process (GP) inference, in\n        both the regression and classification settings. It has been\n        developed in the functional language Haskell as an investigation\n        into whether the well-known advantages of the functional\n        paradigm can be exploited in the field of machine learning,\n        which traditionally has been dominated by the\n        procedural/object-oriented approach, particularly involving\n        C/C++ and Matlab. HasGP is open-source software released under\n        the GPL3 license. This manual provides a short introduction on\n        how install the library, and how to apply it to supervised\n        learning problems. It also provides some more in-depth\n        information on the implementation of the library, which is aimed\n        at developers. In the latter, we also show how some of the\n        specific functional features of Haskell, in particular the\n        ability to treat functions as first-class objects, and the use\n        of typeclasses and monads, have informed the design of the\n        library. This manual applies to HasGP version 0.1, which is the\n        initial release of the library.","bibo:AuthorList":["Holden, Sean B."],"dc:date":"2011-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":45738,"sim:weight":0.321982,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.307533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826809,"sim:weight":0.301696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":268168,"sim:weight":0.278944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1154678,"sim:weight":0.259263,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4185817,"sim:weight":0.255312,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106936,"sim:weight":0.245358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1640334,"sim:weight":0.242155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187697,"sim:weight":0.231175,"sim:AssociationMethod":"similarity_cosine"},{"identifier":99250,"sim:weight":0.231131,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4186344,"sim:weight":0.23064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":15647,"sim:weight":0.227703,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.222318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44432,"sim:weight":0.216208,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18107,"sim:weight":0.212561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664544,"sim:weight":0.212194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617465,"sim:weight":0.206742,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12338,"sim:weight":0.205815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":61040,"sim:weight":0.205753,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.203607,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387876,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A model personal energy meter","bibo:abstract":"Every day each of us consumes a significant amount of energy,\n        both directly through transport, heating and use of appliances,\n        and indirectly from our needs for the production of food,\n        manufacture of goods and provision of services.\n        \n        This dissertation investigates a personal energy meter which can\n        record and apportion an individual\u0027s energy usage in order to\n        supply baseline information and incentives for reducing our\n        environmental impact.\n        \n        If the energy costs of large shared resources are split evenly\n        without regard for individual consumption each person minimises\n        his own losses by taking advantage of others. Context awareness\n        offers the potential to change this balance and apportion energy\n        costs to those who cause them to be incurred. This dissertation\n        explores how sensor systems installed in many buildings today\n        can be used to apportion energy consumption between users,\n        including an evaluation of a range of strategies in a case study\n        and elaboration of the overriding principles that are generally\n        applicable. It also shows how second-order estimators combined\n        with location data can provide a proxy for fine-grained sensing.\n        \n        A key ingredient for apportionment mechanisms is data on energy\n        usage. This may come from metering devices or buildings\n        directly, or from profiling devices and using secondary\n        indicators to infer their power state. A mechanism for profiling\n        devices to determine the energy costs of specific activities,\n        particularly applicable to shared programmable devices is\n        presented which can make this process simpler and more accurate.\n        By combining crowd-sourced building-inventory information and a\n        simple building energy model it is possible to estimate an\n        individual\u0027s energy use disaggregated by device class with very\n        little direct sensing.\n        \n        Contextual information provides crucial cues for apportioning\n        the use and energy costs of resources, and one of the most\n        valuable sources from which to infer context is location. A key\n        ingredient for a personal energy meter is a low cost, low\n        infrastructure location system that can be deployed on a truly\n        global scale. This dissertation presents a description and\n        evaluation of the new concept of inquiry-free Bluetooth tracking\n        that has the potential to offer indoor location information with\n        significantly less infrastructure and calibration than other\n        systems.\n        \n        Finally, a suitable architecture for a personal energy meter on\n        a global scale is demonstrated using a mobile phone application\n        to aggregate energy feeds based on the case studies and\n        technologies developed.","bibo:AuthorList":["Hay, Simon"],"dc:date":"2011-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8930653,"sim:weight":0.594038,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98604,"sim:weight":0.586014,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931565,"sim:weight":0.552382,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53325,"sim:weight":0.537734,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.527053,"sim:AssociationMethod":"similarity_cosine"},{"identifier":69729,"sim:weight":0.522944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85672,"sim:weight":0.50246,"sim:AssociationMethod":"similarity_cosine"},{"identifier":100397,"sim:weight":0.499273,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4880707,"sim:weight":0.496636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70116,"sim:weight":0.491635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933142,"sim:weight":0.490165,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54941,"sim:weight":0.489468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":800134,"sim:weight":0.488371,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997465,"sim:weight":0.488197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":659185,"sim:weight":0.485973,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933226,"sim:weight":0.478509,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.47754,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932429,"sim:weight":0.47557,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931655,"sim:weight":0.474616,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933215,"sim:weight":0.47438,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387877,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On joint diagonalisation for dynamic network\n        analysis","bibo:abstract":"Joint diagonalisation (JD) is a technique used to estimate an\n        average eigenspace of a set of matrices. Whilst it has been used\n        successfully in many areas to track the evolution of systems via\n        their eigenvectors; its application in network analysis is\n        novel. The key focus in this paper is the use of JD on matrices\n        of spanning trees of a network. This is especially useful in the\n        case of real-world contact networks in which a single underlying\n        static graph does not exist. The average eigenspace may be used\n        to construct a graph which represents the `average spanning\n        tree\u0027 of the network or a representation of the most common\n        propagation paths. We then examine the distribution of\n        deviations from the average and find that this distribution in\n        real-world contact networks is multi-modal; thus indicating\n        several modes in the underlying network. These modes are\n        identified and are found to correspond to particular times. Thus\n        JD may be used to decompose the behaviour, in time, of contact\n        networks and produce average static graphs for each time. This\n        may be viewed as a mixture between a dynamic and static graph\n        approach to contact network analysis.","bibo:AuthorList":["Fay, Damien","Kunegis, Jérôme","Yoneki, Eiko"],"dc:date":"2011-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":68122,"sim:weight":0.373071,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.342074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.299818,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53815,"sim:weight":0.287307,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2779656,"sim:weight":0.2592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1568724,"sim:weight":0.258728,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1634050,"sim:weight":0.257063,"sim:AssociationMethod":"similarity_cosine"},{"identifier":55148,"sim:weight":0.252665,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43308,"sim:weight":0.25254,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2796563,"sim:weight":0.215388,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931813,"sim:weight":0.214345,"sim:AssociationMethod":"similarity_cosine"},{"identifier":981110,"sim:weight":0.211654,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710696,"sim:weight":0.211567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187570,"sim:weight":0.208826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43132,"sim:weight":0.20413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.201326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998017,"sim:weight":0.198378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":271219,"sim:weight":0.196655,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103181,"sim:weight":0.195843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.19295,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387878,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Second-order algebraic theories","bibo:abstract":"Second-order universal algebra and second-order equational logic\n        respectively provide a model theory and a formal deductive\n        system for languages with variable binding and parameterised\n        metavariables. This dissertation completes the algebraic\n        foundations of second-order languages from the viewpoint of\n        categorical algebra.\n        \n        In particular, the dissertation introduces the notion of\n        second-order algebraic theory. A main role in the definition is\n        played by the second-order theory of equality M, representing\n        the most elementary operators and equations present in every\n        second-order language. We show that M can be described\n        abstractly via the universal property of being the free\n        cartesian category on an exponentiable object. Thereby, in the\n        tradition of categorical algebra, a second-order algebraic\n        theory consists of a cartesian category TH and a strict\n        cartesian identity-on-objects functor from M to TH that\n        preserves the universal exponentiable object of M.\n        \n        At the syntactic level, we establish the correctness of our\n        definition by showing a categorical equivalence between\n        second-order equational presentations and second-order algebraic\n        theories. This equivalence, referred to as the Second-Order\n        Syntactic Categorical Type Theory Correspondence, involves\n        distilling a notion of syntactic translation between\n        second-order equational presentations that corresponds to the\n        canonical notion of morphism between second-order algebraic\n        theories. Syntactic translations provide a mathematical\n        formalisation of notions such as encodings and transforms for\n        second-order languages.\n        \n        On top of the aforementioned syntactic correspondence, we\n        furthermore establish the Second-Order Semantic Categorical Type\n        Theory Correspondence. This involves generalising Lawvere\u0027s\n        notion of functorial model of algebraic theories to the\n        second-order setting. By this semantic correspondence,\n        second-order functorial semantics is shown to correspond to the\n        model theory of second-order universal algebra.\n        \n        We finally show that the core of the theory surrounding Lawvere\n        theories generalises to the second order as well. Instances of\n        this development are the existence of algebraic functors and\n        monad morphisms in the second-order universe. Moreover, we\n        define a notion of translation homomorphism that allows us to\n        establish a 2-categorical type theory correspondence.","bibo:AuthorList":["Mahmoud, Ola"],"dc:date":"2011-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":19252,"sim:weight":0.451561,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934469,"sim:weight":0.291544,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934255,"sim:weight":0.282761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9034895,"sim:weight":0.278077,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98983,"sim:weight":0.260288,"sim:AssociationMethod":"similarity_cosine"},{"identifier":16260,"sim:weight":0.257546,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934427,"sim:weight":0.252564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9955,"sim:weight":0.252331,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934014,"sim:weight":0.251329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":50877,"sim:weight":0.250648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98070,"sim:weight":0.245055,"sim:AssociationMethod":"similarity_cosine"},{"identifier":96517,"sim:weight":0.241744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1578933,"sim:weight":0.241723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.238365,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934019,"sim:weight":0.237025,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000277,"sim:weight":0.235585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933370,"sim:weight":0.233635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934405,"sim:weight":0.233635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934457,"sim:weight":0.229688,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934468,"sim:weight":0.22657,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387879,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Resource-sensitive synchronisation inference by\n        abduction","bibo:abstract":"We present an analysis which takes as its input a sequential\n        program, augmented with annotations indicating potential\n        parallelization opportunities, and a sequential proof, written\n        in separation logic, and produces a correctly-synchronized\n        parallelized program and proof of that program. Unlike previous\n        work, ours is not an independence analysis; we insert\n        synchronization constructs to preserve relevant dependencies\n        found in the sequential program that may otherwise be violated\n        by a naïve translation. Separation logic allows us to\n        parallelize fine-grained patterns of resource-usage, moving\n        beyond straightforward points-to analysis.\n        \n        Our analysis works by using the sequential proof to discover\n        dependencies between different parts of the program. It\n        leverages these discovered dependencies to guide the insertion\n        of synchronization primitives into the parallelized program, and\n        ensure that the resulting parallelized program satisfies the\n        same specification as the original sequential program. Our\n        analysis is built using frame inference and abduction, two\n        techniques supported by an increasing number of separation logic\n        tools.","bibo:AuthorList":["Botinčan, Matko","Dodds, Mike","Jagannathan, Suresh"],"dc:date":"2012-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8826866,"sim:weight":0.422695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98816,"sim:weight":0.405413,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.256745,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.251899,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934003,"sim:weight":0.243454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":12215,"sim:weight":0.175107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.169516,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43409,"sim:weight":0.166507,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932650,"sim:weight":0.163534,"sim:AssociationMethod":"similarity_cosine"},{"identifier":338364,"sim:weight":0.15407,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1573418,"sim:weight":0.149672,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43272,"sim:weight":0.138609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.1358,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2710661,"sim:weight":0.135209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2009999,"sim:weight":0.133172,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2111921,"sim:weight":0.13007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70207,"sim:weight":0.129152,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549561,"sim:weight":0.126884,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998220,"sim:weight":0.11867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.116581,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387880,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Distributed virtual environment scalability and\n        security","bibo:abstract":"Distributed virtual environments (DVEs) have been an active area\n        of research and engineering for more than 20 years. The most\n        widely deployed DVEs are network games such as Quake, Halo, and\n        World of Warcraft (WoW), with millions of users and billions of\n        dollars in annual revenue. Deployed DVEs remain expensive\n        centralized implementations despite significant research\n        outlining ways to distribute DVE workloads.\n        \n        This dissertation shows previous DVE research evaluations are\n        inconsistent with deployed DVE needs. Assumptions about avatar\n        movement and proximity – fundamental scale factors – do not\n        match WoW\u0027s workload, and likely the workload of other deployed\n        DVEs. Alternate workload models are explored and preliminary\n        conclusions presented. Using realistic workloads it is shown\n        that a fully decentralized DVE cannot be deployed to today\u0027s\n        consumers, regardless of its overhead.\n        \n        Residential broadband speeds are improving, and this limitation\n        will eventually disappear. When it does, appropriate security\n        mechanisms will be a fundamental requirement for technology\n        adoption.\n        \n        A trusted auditing system (“Carbon”) is presented which has good\n        security, scalability, and resource characteristics for\n        decentralized DVEs. When performing exhaustive auditing, Carbon\n        adds 27% network overhead to a decentralized DVE with a WoW-like\n        workload. This resource consumption can be reduced\n        significantly, depending upon the DVE\u0027s risk tolerance. Finally,\n        the Pairwise Random Protocol (PRP) is described. PRP enables\n        adversaries to fairly resolve probabilistic activities, an\n        ability missing from most decentralized DVE security proposals.\n        \n        Thus, this dissertation\u0027s contribution is to address two of the\n        obstacles for deploying research on decentralized DVE\n        architectures. First, lack of evidence that research results\n        apply to existing DVEs. Second, the lack of security systems\n        combining appropriate security guarantees with acceptable\n        overhead.","bibo:AuthorList":["Miller, John L."],"dc:date":"2011-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":76157,"sim:weight":0.366337,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.33134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48307,"sim:weight":0.278116,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4187618,"sim:weight":0.209284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68122,"sim:weight":0.165701,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2795322,"sim:weight":0.163844,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1640334,"sim:weight":0.162591,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.161536,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664212,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664228,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80623,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1667614,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80628,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80618,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80633,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661720,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661721,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661723,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661724,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1661725,"sim:weight":0.142914,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387881,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Proximity Coherence for chip-multiprocessors","bibo:abstract":"Many-core architectures provide an efficient way of harnessing\n        the growing numbers of transistors available in modern\n        fabrication processes; however, the parallel programs run on\n        these platforms are increasingly limited by the energy and\n        latency costs of communication. Existing designs provide a\n        functional communication layer but do not necessarily implement\n        the most efficient solution for chip-multiprocessors, placing\n        limits on the performance of these complex systems. In an era of\n        increasingly power limited silicon design, efficiency is now a\n        primary concern that motivates designers to look again at the\n        challenge of cache coherence.\n        \n        The first step in the design process is to analyse the\n        communication behaviour of parallel benchmark suites such as\n        Parsec and SPLASH-2. This thesis presents work detailing the\n        sharing patterns observed when running the full benchmarks on a\n        simulated 32-core x86 machine. The results reveal considerable\n        locality of shared data accesses between threads with\n        consecutive operating system assigned thread IDs. This pattern,\n        although of little consequence in a multi-node system,\n        corresponds to strong physical locality of shared data between\n        adjacent cores on a chip-multiprocessor platform.\n        \n        Traditional cache coherence protocols, although often used in\n        chip-multiprocessor designs, have been developed in the context\n        of older multi-node systems. By redesigning coherence protocols\n        to exploit new patterns such as the physical locality of shared\n        data, improving the efficiency of communication, specifically in\n        chip-multiprocessors, is possible. This thesis explores such a\n        design – Proximity Coherence – a novel scheme in which L1 load\n        misses are optimistically forwarded to nearby caches via new\n        dedicated links rather than always being indirected via a\n        directory structure.","bibo:AuthorList":["Barrow-Williams, Nick"],"dc:date":"2011-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1008746,"sim:weight":0.54412,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934598,"sim:weight":0.472204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1017976,"sim:weight":0.446648,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1058018,"sim:weight":0.43897,"sim:AssociationMethod":"similarity_cosine"},{"identifier":793220,"sim:weight":0.408691,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998433,"sim:weight":0.387134,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934283,"sim:weight":0.364735,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057195,"sim:weight":0.361702,"sim:AssociationMethod":"similarity_cosine"},{"identifier":105390,"sim:weight":0.359251,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393976,"sim:weight":0.331102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":617567,"sim:weight":0.328562,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45917,"sim:weight":0.327757,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43140,"sim:weight":0.324786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":279561,"sim:weight":0.320441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":282177,"sim:weight":0.319022,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43152,"sim:weight":0.318461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80584,"sim:weight":0.314836,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008810,"sim:weight":0.306992,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80570,"sim:weight":0.306772,"sim:AssociationMethod":"similarity_cosine"},{"identifier":68799,"sim:weight":0.3067,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387882,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Active electromagnetic attacks on secure\n        hardware","bibo:abstract":"The field of side-channel attacks on cryptographic hardware has\n        been extensively studied. In many cases it is easier to derive\n        the secret key from these attacks than to break the cryptography\n        itself. One such sidechannel attack is the electromagnetic\n        side-channel attack, giving rise to electromagnetic analysis\n        (EMA).\n        \n        EMA, when otherwise known as ‘TEMPEST’ or ‘compromising\n        emanations’, has a long history in the military context over\n        almost the whole of the twentieth century. The US military also\n        mention three related attacks, believed to be: HIJACK\n        (modulation of secret data onto conducted signals), NONSTOP\n        (modulation of secret data onto radiated signals) and TEAPOT\n        (intentional malicious emissions).\n        \n        In this thesis I perform a fusion of TEAPOT and HIJACK/NONSTOP\n        techniques on secure integrated circuits. An attacker is able to\n        introduce one or more frequencies into a cryptographic system\n        with the intention of forcing it to misbehave or to radiate\n        secrets.\n        \n        I demonstrate two approaches to this attack:\n        \n        To perform the reception, I assess a variety of electromagnetic\n        sensors to perform EMA. I choose an inductive hard drive head\n        and a metal foil electric field sensor to measure near-field EM\n        emissions.\n        \n        The first approach, named the re-emission attack, injects\n        frequencies into the power supply of a device to cause it to\n        modulate up baseband signals. In this way I detect\n        data-dependent timing from a ‘secure’ microcontroller. Such\n        up-conversion enables a more compact and more distant receiving\n        antenna.\n        \n        The second approach involves injecting one or more frequencies\n        into the power supply of a random number generator that uses\n        jitter of ring oscillators as its random number source. I am\n        able to force injection locking of the oscillators, greatly\n        diminishing the entropy available.\n        \n        I demonstrate this with the random number generators on two\n        commercial devices. I cause a 2004 EMV banking smartcard to fail\n        statistical test suites by generating a periodicity. For a\n        secure 8-bit microcontroller that has been used in banking ATMs,\n        I am able to reduce the random number entropy from 2³² to 225.\n        This enables a 50% probability of a successful attack on cash\n        withdrawal in 15 attempts.","bibo:AuthorList":["Markettos, A. Theodore"],"dc:date":"2011-12","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2709966,"sim:weight":0.526013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98767,"sim:weight":0.51863,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71066,"sim:weight":0.515377,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23351,"sim:weight":0.506696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24665,"sim:weight":0.477223,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43096,"sim:weight":0.475598,"sim:AssociationMethod":"similarity_cosine"},{"identifier":54114,"sim:weight":0.473788,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85232,"sim:weight":0.46886,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145575,"sim:weight":0.468771,"sim:AssociationMethod":"similarity_cosine"},{"identifier":78073,"sim:weight":0.466322,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8769022,"sim:weight":0.463572,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101193,"sim:weight":0.461874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":42682,"sim:weight":0.458122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43480,"sim:weight":0.455368,"sim:AssociationMethod":"similarity_cosine"},{"identifier":113632,"sim:weight":0.448081,"sim:AssociationMethod":"similarity_cosine"},{"identifier":56626,"sim:weight":0.447671,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98797,"sim:weight":0.442583,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5837178,"sim:weight":0.441073,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8933779,"sim:weight":0.440866,"sim:AssociationMethod":"similarity_cosine"},{"identifier":71065,"sim:weight":0.438784,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387883,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Abstracting information on body area networks","bibo:abstract":"Healthcare is changing, correction, healthcare is in need of\n        change. The population ageing, the increase in chronic and heart\n        diseases and just the increase in population size will overwhelm\n        the current hospital-centric healthcare.\n        \n        There is a growing interest by individuals to monitor their own\n        physiology. Not only for sport activities, but also to control\n        their own diseases. They are changing from the passive\n        healthcare receiver to a proactive self-healthcare taker. The\n        focus is shifting from hospital centred treatment to a\n        patient-centric healthcare monitoring.\n        \n        Continuous, everyday, wearable monitoring and actuating is part\n        of this change. In this setting, sensors that monitor the heart,\n        blood pressure, movement, brain activity, dopamine levels, and\n        actuators that pump insulin, ‘pump’ the heart, deliver drugs to\n        specific organs, stimulate the brain are needed as pervasive\n        components in and on the body. They will tend for people’s need\n        of self-monitoring and facilitate healthcare delivery.\n        \n        These components around a human body that communicate to sense\n        and act in a coordinated fashion make a Body Area Network (BAN).\n        In most cases, and in our view, a central, more powerful\n        component will act as the coordinator of this network. These\n        networks aim to augment the power to monitor the human body and\n        react to problems discovered with this observation. One key\n        advantage of this system is their overarching view of the whole\n        network. That is, the central component can have an\n        understanding of all the monitored signals and correlate them to\n        better evaluate and react to problems. This is the focus of our\n        thesis.\n        \n        In this document we argue that this multi-parameter correlation\n        of the heterogeneous sensed information is not being handled in\n        BANs. The current view depends exclusively on the application\n        that is using the network and its understanding of the\n        parameters. This means that every application will oversee the\n        BAN’s heterogeneous resources managing them directly without\n        taking into consideration other applications, their needs and\n        knowledge.\n        \n        There are several physiological correlations already known by\n        the medical field. Correlating blood pressure and cross\n        sectional area of blood vessels to calculate blood velocity,\n        estimating oxygen delivery from cardiac output and oxygen\n        saturation, are such examples. This knowledge should be\n        available in a BAN and shared by the several applications that\n        make use of the network. This architecture implies a central\n        component that manages the knowledge and the resources. And this\n        is, in our view, missing in BANs.\n        \n        Our proposal is a middleware layer that abstracts the underlying\n        BAN’s resources to the application, providing instead an\n        information model to be queried. The model describes the\n        correlations for producing new information that the middleware\n        knows about. Naturally, the raw sensed data is also part of the\n        model. The middleware hides the specificities of the nodes that\n        constitute the BAN, by making available their sensed production.\n        Applications are able to query for information attaching\n        requirements to these requests. The middleware is then\n        responsible for satisfying the requests while optimising the\n        resource usage of the BAN.\n        \n        Our architecture proposal is divided in two corresponding\n        layers, one that abstracts the nodes’ hardware (hiding node’s\n        particularities) and the information layer that describes\n        information available and how it is correlated. A prototype\n        implementation of the architecture was done to illustrate the\n        concept.","bibo:AuthorList":["Brandão, Pedro"],"dc:date":"2012-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":767364,"sim:weight":0.54472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2680531,"sim:weight":0.533705,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.521963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2680672,"sim:weight":0.493935,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70119,"sim:weight":0.472692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.468387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":659185,"sim:weight":0.462125,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5850536,"sim:weight":0.454774,"sim:AssociationMethod":"similarity_cosine"},{"identifier":764487,"sim:weight":0.452227,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931267,"sim:weight":0.450213,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1026334,"sim:weight":0.426967,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43998,"sim:weight":0.418875,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9340204,"sim:weight":0.409284,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70415,"sim:weight":0.392697,"sim:AssociationMethod":"similarity_cosine"},{"identifier":969577,"sim:weight":0.378156,"sim:AssociationMethod":"similarity_cosine"},{"identifier":864290,"sim:weight":0.34287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799945,"sim:weight":0.339721,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.33945,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.339257,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999251,"sim:weight":0.315805,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387884,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Reconstructing compressed photo and video\n        data","bibo:abstract":"Forensic investigators sometimes need to verify the integrity\n        and processing history of digital photos and videos. The\n        multitude of storage formats and devices they need to access\n        also presents a challenge for evidence recovery. This thesis\n        explores how visual data files can be recovered and analysed in\n        scenarios where they have been stored in the JPEG or H.264\n        (MPEG-4 AVC) compression formats.\n        \n        My techniques make use of low-level details of lossy compression\n        algorithms in order to tell whether a file under consideration\n        might have been tampered with. I also show that limitations of\n        entropy coding sometimes allow us to recover intact files from\n        storage devices, even in the absence of filesystem and container\n        metadata.\n        \n        I first show that it is possible to embed an imperceptible\n        message within a uniform region of a JPEG image such that the\n        message becomes clearly visible when the image is recompressed\n        at a particular quality factor, providing a visual warning that\n        recompression has taken place.\n        \n        I then use a precise model of the computations involved in JPEG\n        decompression to build a specialised compressor, designed to\n        invert the computations of the decompressor. This recompressor\n        recovers the compressed bitstreams that produce a given\n        decompression result, and, as a side-effect, indicates any\n        regions of the input which are inconsistent with JPEG\n        decompression. I demonstrate the algorithm on a large database\n        of images, and show that it can detect modifications to\n        decompressed image regions.\n        \n        Finally, I show how to rebuild fragmented compressed bitstreams,\n        given a syntax description that includes information about\n        syntax errors, and demonstrate its applicability to H.264/AVC\n        Baseline profile video data in memory dumps with randomly\n        shuffled blocks.","bibo:AuthorList":["Lewis, Andrew B."],"dc:date":"2012-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":966687,"sim:weight":0.390731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960674,"sim:weight":0.373883,"sim:AssociationMethod":"similarity_cosine"},{"identifier":955752,"sim:weight":0.371912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":45738,"sim:weight":0.35539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":53402,"sim:weight":0.354264,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1106439,"sim:weight":0.352809,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899509,"sim:weight":0.351522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":106965,"sim:weight":0.348408,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899455,"sim:weight":0.344326,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102480,"sim:weight":0.3441,"sim:AssociationMethod":"similarity_cosine"},{"identifier":948854,"sim:weight":0.341881,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1130617,"sim:weight":0.331184,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1057138,"sim:weight":0.326635,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819442,"sim:weight":0.322147,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008733,"sim:weight":0.321963,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1132973,"sim:weight":0.320217,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102689,"sim:weight":0.318473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102415,"sim:weight":0.311452,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5222909,"sim:weight":0.304924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":819990,"sim:weight":0.303687,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387885,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The free Internet: a distant mirage or near\n        reality?","bibo:abstract":"Through this short position paper, we hope to convey our\n        thoughts on the need for free Internet access and describe\n        possible ways of achieving this – hoping this stimulates a\n        useful discussion.","bibo:AuthorList":["Sathiaseelan, Arjuna","Crowcroft, Jon"],"dc:date":"2012-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931624,"sim:weight":0.381968,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1615779,"sim:weight":0.36013,"sim:AssociationMethod":"similarity_cosine"},{"identifier":684257,"sim:weight":0.323346,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1930155,"sim:weight":0.300198,"sim:AssociationMethod":"similarity_cosine"},{"identifier":14616,"sim:weight":0.292874,"sim:AssociationMethod":"similarity_cosine"},{"identifier":107786,"sim:weight":0.28342,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10081,"sim:weight":0.278211,"sim:AssociationMethod":"similarity_cosine"},{"identifier":94758,"sim:weight":0.270349,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1664532,"sim:weight":0.268998,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998872,"sim:weight":0.263136,"sim:AssociationMethod":"similarity_cosine"},{"identifier":76406,"sim:weight":0.243124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":48344,"sim:weight":0.230833,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46815,"sim:weight":0.224575,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929823,"sim:weight":0.2214,"sim:AssociationMethod":"similarity_cosine"},{"identifier":92559,"sim:weight":0.208698,"sim:AssociationMethod":"similarity_cosine"},{"identifier":387217,"sim:weight":0.205447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":98764,"sim:weight":0.202463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929812,"sim:weight":0.169849,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43018,"sim:weight":0.15974,"sim:AssociationMethod":"similarity_cosine"},{"identifier":4151832,"sim:weight":0.146061,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387886,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Colour videos with depth: acquisition, processing and\n        evaluation","bibo:abstract":"The human visual system lets us perceive the world around us in\n        three dimensions by integrating evidence from depth cues into a\n        coherent visual model of the world. The equivalent in computer\n        vision and computer graphics are geometric models, which provide\n        a wealth of information about represented objects, such as depth\n        and surface normals. Videos do not contain this information, but\n        only provide per-pixel colour information. In this dissertation,\n        I hence investigate a combination of videos and geometric\n        models: videos with per-pixel depth (also known as RGBZ videos).\n        I consider the full life cycle of these videos: from their\n        acquisition, via filtering and processing, to stereoscopic\n        display.","bibo:AuthorList":["Richardt, Christian"],"dc:date":"2012-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":241187,"sim:weight":0.46981,"sim:AssociationMethod":"similarity_cosine"},{"identifier":267078,"sim:weight":0.459188,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44224,"sim:weight":0.457182,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20695,"sim:weight":0.446806,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43388,"sim:weight":0.446783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":46865,"sim:weight":0.445469,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101319,"sim:weight":0.443938,"sim:AssociationMethod":"similarity_cosine"},{"identifier":799592,"sim:weight":0.438731,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21689,"sim:weight":0.431064,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241196,"sim:weight":0.42539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":101548,"sim:weight":0.422585,"sim:AssociationMethod":"similarity_cosine"},{"identifier":44202,"sim:weight":0.414815,"sim:AssociationMethod":"similarity_cosine"},{"identifier":241212,"sim:weight":0.409468,"sim:AssociationMethod":"similarity_cosine"},{"identifier":43093,"sim:weight":0.402617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1008076,"sim:weight":0.39793,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1145884,"sim:weight":0.388297,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397736,"sim:weight":0.385274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102690,"sim:weight":0.379128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20017,"sim:weight":0.377325,"sim:AssociationMethod":"similarity_cosine"},{"identifier":18529,"sim:weight":0.371841,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387887,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Verification of security protocols based on multicast\n        communication","bibo:abstract":"Over an insecure network, agents need means to communicate\n        securely. These means are often called security protocols.\n        Security protocols, although constructed through the arrangement\n        of simple security blocks, normally yield complex goals. They\n        seem simple at a first glance, but hide subtleties that allow\n        them to be exploited.\n        \n        One way of trying to systematically capture such subtleties is\n        through the use of formal methods. The maturity of some methods\n        for protocol verification is a fact today. But these methods are\n        still not able to capture the whole set of security protocols\n        being designed. With the convergence to an online world, new\n        security goals are proposed and new protocols need to be\n        designed. The evolution of formal verification methods becomes a\n        necessity to keep pace with this ongoing development.\n        \n        This thesis covers the Inductive Method and its extensions. The\n        Inductive Method is a formalism to specify and verify security\n        protocols based on structural induction and higher-order logic\n        proofs. This account of our extensions enables the Inductive\n        Method to reason about non-Unicast communication and threshold\n        cryptography.\n        \n        We developed a new set of theories capable of representing the\n        entire set of known message casting frameworks. Our theories\n        enable the Inductive Method to reason about a whole new set of\n        protocols. We also specified a basic abstraction of threshold\n        cryptography as a way of proving the extensibility of the method\n        to new cryptographic primitives. We showed the feasibility of\n        our specifications by revisiting a classic protocol, now\n        verified under our framework. Secrecy verification under a mixed\n        environment of Multicast and Unicast was also done for a\n        Byzantine security protocol.","bibo:AuthorList":["Martina, Jean E."],"dc:date":"2012-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":102470,"sim:weight":0.484501,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397461,"sim:weight":0.479811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102468,"sim:weight":0.461474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397476,"sim:weight":0.46035,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102472,"sim:weight":0.449631,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999810,"sim:weight":0.447749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91442,"sim:weight":0.415556,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397440,"sim:weight":0.398733,"sim:AssociationMethod":"similarity_cosine"},{"identifier":390236,"sim:weight":0.398628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999811,"sim:weight":0.389855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102482,"sim:weight":0.389848,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999813,"sim:weight":0.385204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397393,"sim:weight":0.38255,"sim:AssociationMethod":"similarity_cosine"},{"identifier":80111,"sim:weight":0.380873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":397465,"sim:weight":0.378352,"sim:AssociationMethod":"similarity_cosine"},{"identifier":102429,"sim:weight":0.376722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960711,"sim:weight":0.376204,"sim:AssociationMethod":"similarity_cosine"},{"identifier":980772,"sim:weight":0.362738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1116755,"sim:weight":0.351628,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8934336,"sim:weight":0.347616,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":387888,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The quest to replace passwords: a framework for\n        comparative evaluation of Web authentication schemes","bibo:abstract":"We evaluate two decades of proposals to replace text passwords\n        for general-purpose user authentication on the web using a broad\n        set of twenty-five usability, deployability and security\n        benefits that an ideal scheme might provide. The scope of\n        proposals we survey is also extensive, including password\n        management software, federated login protocols, graphical\n        password schemes, cognitive authentication schemes, one-time\n        passwords, hardware tokens, phone-aided schemes and biometrics.\n        Our comprehensive approach leads to key insights about the\n        difficulty of replacing passwords. Not only does no known scheme\n        come close to providing all desired benefits: none even retains\n        the full set of benefits which legacy passwords already provide.\n        In particular, there is a wide range between schemes offering\n        minor security benefits beyond legacy passwords, to those\n        offering significant security benefits in return for being more\n        costly to deploy or difficult to use. We conclude that many\n        academic proposals have failed to gain traction because\n        researchers rarely consider a sufficiently wide range of\n        real-world constraints. Beyond our analysis of current schemes,\n        our framework provides an evaluation methodology and benchmark\n        for future web authentication proposals.\n        \n        This report is an extended version of the peer-reviewed paper by\n        the same name. In about twice as many pages it gives full\n        ratings for 35 authentication schemes rather than just 9.","bibo:AuthorList":["Bonneau, Joseph","Herley, Cormac","Oorschot, Paul C. van","Stajano, Frank"],"dc:date":"2012-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8998853,"sim:weight":0.557387,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2690997,"sim:weight":0.553712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":990061,"sim:weight":0.542878,"sim:AssociationMethod":"similarity_cosine"},{"identifier":972976,"sim:weight":0.534744,"sim:AssociationMethod":"similarity_cosine"},{"identifier":960671,"sim:weight":0.531876,"sim:AssociationMethod":"similarity_cosine"},{"identifier":920152,"sim:weight":0.517576,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1083663,"sim:weight":0.502009,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1004046,"sim:weight":0.464843,"sim:AssociationMethod":"similarity_cosine"},{"identifier":17896,"sim:weight":0.452453,"sim:AssociationMethod":"similarity_cosine"},{"identifier":918255,"sim:weight":0.432145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":17894,"sim:weight":0.431286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1037025,"sim:weight":0.430044,"sim:AssociationMethod":"similarity_cosine"},{"identifier":381663,"sim:weight":0.39523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":333770,"sim:weight":0.386324,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70143,"sim:weight":0.382724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":767735,"sim:weight":0.378374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1003390,"sim:weight":0.355423,"sim:AssociationMethod":"similarity_cosine"},{"identifier":756279,"sim:weight":0.355186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":899711,"sim:weight":0.346819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1091259,"sim:weight":0.334499,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671556,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Rewriting in Cambridge LCF","bibo:abstract":"Many automatic theorem-provers rely on rewriting. Using theorems\n        as rewrite rules helps to simplify the subgoals that arise\n        during a proof.\n        \n        LCF is an interactive theorem-prover intended for reasoning\n        about computation. Its implementation of rewriting is presented\n        in detail. LCF provides a family of rewriting functions, and\n        operators to combine them. A succession of functions is\n        described, from pattern matching primitives to the rewriting\n        tool that performs most inferences in LCF proofs.\n        \n        The design is highly modular. Each function performs a basic,\n        specific task, such as recognizing a certain form of tautology.\n        Each operator implements one method of building a rewriting\n        function from simpler ones. These pieces can be put together in\n        numerous ways, yielding a variety of rewriting strategies.\n        \n        The approach involves programming with higher-order functions.\n        Rewriting functions are data values, produced by computation on\n        other rewriting functions. The code is in daily use at\n        Cambridge, demonstrating the practical use of functional\n        programming.","bibo:AuthorList":["Paulson, Larry"],"dc:date":"1983-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932038,"sim:weight":0.139934,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.118169,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.0996933,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.0921454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930770,"sim:weight":0.0909652,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671557,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Improving security and performance of capability\n        systems","bibo:abstract":"This dissertation examines two major limitations of capability\n        systems: an inability to support security policies that enforce\n        confinement and a reputation for relatively poor performance\n        when compared with non-capability systems.\n        \n        The dissertation examines why conventional capability systems\n        cannot enforce confinement and proposes a new secure capability\n        architecture, called SCAP, in which confinement can be enforced.\n        SCAP is based on the earlier Cambridge Capability System, CAP.\n        The dissertation shows how a non-discretionary security policy\n        can be implemented on the new architecture, and how the new\n        architecture can also be used to improve traceability of access\n        and revocation of access.\n        \n        The dissertation also examines how capability systems are\n        vulnerable to discretionary Trojan horse attacks and proposes a\n        defence based on rules built into the command-language\n        interpreter. System-wide garbage collection, commonly used in\n        most capability systems, is examined in the light of the\n        non-discretionary security policies and found to be\n        fundamentally insecure. The dissertation proposes alternative\n        approaches to storage management to provide at least some of the\n        benefits of system-wide garbage collection, but without the\n        accompanying security problems.\n        \n        Performance of capability systems is improved by two major\n        techniques. First, the doctrine of programming generality is\n        addressed as one major cause of poor performance. Protection\n        domains should be allocated only for genuine security reasons,\n        rather than at every subroutine boundary. Compilers can better\n        enforce modularity and good programming style without adding the\n        expense of security enforcement to every subroutine call.\n        Second, the ideas of reduced instruction set computers (RISC)\n        can be applied to capability systems to simplify the operations\n        required. The dissertation identifies a minimum set of hardware\n        functions needed to obtain good performance for a capability\n        system. This set is much smaller than previous research had\n        indicated necessary.\n        \n        A prototype implementation of some of the capability features is\n        described. The prototype was implemented on a re-microprogrammed\n        VAX-11/730 computer. The dissertation examines the performance\n        and software compatibility implications of the new capability\n        architecture, both in the context of conventional computers,\n        such as the VAX, and in the context of RISC processors.","bibo:AuthorList":["Karger, Paul Ashley"],"dc:date":"1988-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.201679,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.171944,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.120979,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671558,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Non-trivial power types can’t be subtypes of polymorphic\n        types","bibo:AuthorList":["Pitts, Andrew M."],"dc:date":"1989-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671559,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Protocol design for high speed networks","bibo:abstract":"Improvements in fibre optic communication and in VLSI for\n        network switching components have led to the consideration of\n        building digital switched networks capable of providing point to\n        point communication in the gigabit per second range. Provision\n        of bandwidths of this magnitude allows the consideration of a\n        whole new range of telecommunications services, integrating\n        video, voice, image and text. These multi-service networks have\n        a range of requirements not met by traditional network\n        architectures designed for digital telephony or computer\n        applications. This dissertation describes the design, and an\n        implementation, of the Multi-Service Network architecture and\n        protocol family, which is aimed at supporting these services.\n        \n        Asynchronous transfer mode networks provide the basic support\n        required for these integrated services, and the Multi-Service\n        Network architecture is designed primarily for these types of\n        networks. The aim of the Multi-Service protocol family is to\n        provide a complete architecture which allows use of the full\n        facilities of asynchronous transfer mode networks by multi-media\n        applications. To maintain comparable performance with the\n        underlying media, certain elements of the MSN protocol stack are\n        designed with implementation in hardware in mind. The\n        interconnection of heterogeneous networks, and networks\n        belonging to different security and administrative domains, is\n        considered vital, so the MSN architecture takes an\n        internetworking approach.","bibo:AuthorList":["McAuley, Derek Robert"],"dc:date":"1990-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.306618,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.252129,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.218178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.189461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59232,"sim:weight":0.168455,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671560,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Natural language interfaces to databases","bibo:AuthorList":["Copestake, Ann","Spärck Jones, Karen"],"dc:date":"1989-09","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"A Copestake, K Jones and S. (1990). Natural language interfaces to databases.","authors":[],"bibo:shortTitle":"Natural language interfaces to databases.","dc:date":"1990","doi":"10.1017/S0269888900005476","refDocId":4671560},{"rawReferenceText":"A Copestake, K Jones and S. (1990). Natural language interfaces to databases.","authors":[],"bibo:shortTitle":"Natural language interfaces to databases.","dc:date":"1990","refDocId":4671560},{"rawReferenceText":"A Copestake, K Jones and S. (1990). Natural language interfaces to databases.","authors":[],"bibo:shortTitle":"Natural language interfaces to databases.","dc:date":"1990","refDocId":4671560}],"similarities":[]}
{"identifier":4671561,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Some notes on mass terms and plurals","bibo:AuthorList":["Copestake, Ann"],"dc:date":"1990-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671562,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Evaluation Logic","bibo:AuthorList":["Pitts, Andrew M."],"dc:date":"1990-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671563,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The HOL verification of ELLA designs","bibo:abstract":"HOL is a public domain system for generating proofs in higher\n        order predicate calculus. It has been in experimental and\n        commercial use in several countries for a number of years.\n        \n        ELLA is a hardware design language developed at the Royal\n        Signals and Radar Establishment (RSRE) and marketed by Computer\n        General Electronic Design. It supports simulation models at a\n        variety of different abstraction levels.\n        \n        A preliminary methodology for reasoning about ELLA designs using\n        HOL is described. Our approach is to semantically embed a subset\n        of the ELLA language in higher order logic, and then to make\n        this embedding convenient to use with parsers and\n        pretty-printers. There are a number of semantic issues that may\n        affect the ease of verification. We discuss some of these\n        briefly. We also give a simple example to illustrate the\n        methodology.","bibo:AuthorList":["Boulton, Richard","Gordon, Mike","Herbert, John","Van Tassel, John"],"dc:date":"1990-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1393937,"sim:weight":0.164424,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.161119,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.135442,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.129386,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.125372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1147605,"sim:weight":0.123411,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671564,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"New foundations for fixpoint computations:\n        FIX-hyperdoctrines and the FIX-logic","bibo:AuthorList":["Crole, Roy L.","Pitts, Andrew M."],"dc:date":"1990-08","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"R L Crole and A M Pitts. (1992). New foundations for fixpoint computations: FIX-hyperdoctrines and the FIX-logic.","authors":[],"bibo:shortTitle":"New foundations for fixpoint computations: FIX-hyperdoctrines and the FIX-logic.","dc:date":"1992","refDocId":4671564}],"similarities":[{"identifier":46095,"sim:weight":0.131876,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671565,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The desk area network","bibo:abstract":"A novel architecture for use within an end computing system is\n        described. This attempts to extend the concepts used in modern\n        high speed networks into computer system design. A multimedia\n        workstation is being built based on this concept to evaluate the\n        approach.","bibo:AuthorList":["Hayter, Mark","McAuley, Derek"],"dc:date":"1991-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":108875,"sim:weight":0.24334,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.209429,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70184,"sim:weight":0.198141,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998729,"sim:weight":0.186385,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70347,"sim:weight":0.177837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70181,"sim:weight":0.169167,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5838846,"sim:weight":0.149196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998857,"sim:weight":0.133895,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671566,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"On efficiency in theorem provers which fully expand\n        proofs into primitive inferences","bibo:abstract":"Theorem Provers which fully expand proofs into applications of\n        primitive inference rules can be made highly secure, but have\n        been criticized for being orders of magnitude slower than many\n        other theorem provers. We argue that much of this relative\n        inefficiency is due to the way proof procedures are typically\n        written and not all is inherent in the way the systems work. We\n        support this claim by considering a proof procedure for linear\n        arithmetic. We show that straightforward techniques can be used\n        to significantly cut down the computation required. An order of\n        magnitude improvement in the performance is shown by an\n        implementation of these techniques.","bibo:AuthorList":["Boulton, Richard J."],"dc:date":"1992-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932073,"sim:weight":0.320485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2424328,"sim:weight":0.22999,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.177857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85083,"sim:weight":0.177265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.162239,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671567,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"TouringMachines: autonomous agents with\n        attitudes","bibo:AuthorList":["Ferguson, Innes A."],"dc:date":"1992-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671568,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A co-induction principle for recursively defined\n        domains","bibo:AuthorList":["Pitts, Andrew M."],"bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"Andrew M Pitts. A co-induction principle for recursively defined domains.","authors":[],"bibo:shortTitle":"A co-induction principle for recursively defined domains.","refDocId":4671568},{"rawReferenceText":"Andrew M Pitts. A co-induction principle for recursively defined domains.","authors":[],"bibo:shortTitle":"A co-induction principle for recursively defined domains.","refDocId":4671568}],"similarities":[{"identifier":87405,"sim:weight":0.113043,"sim:AssociationMethod":"similarity_cosine"},{"identifier":60148,"sim:weight":0.0977112,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671569,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A HOL semantics for a subset of ELLA","bibo:abstract":"Formal verification is an important tool in the design of\n        computer systems, especially when the systems are safety or\n        security critical. However, the formal techniques currently\n        available are not well integrated into the set of tools more\n        traditionally used by designers. This work is aimed at improving\n        the integration by providing a formal semantics for a subset of\n        the hardware description language ELLA, and by supporting this\n        semantics in the HOL theorem proving system, which has been used\n        extensively for hardware verification.\n        \n        A semantics for a subset of ELLA is described, and an outline of\n        a proof of the equivalence of parallel and recursive\n        implementations of an n-bit adder is given as an illustration of\n        the semantics. The proof has been performed in an extension of\n        the HOL system. Some proof tools written to support the\n        verification are also described.","bibo:AuthorList":["Boulton, Richard J."],"dc:date":"1992-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932038,"sim:weight":0.283535,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.240587,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5842426,"sim:weight":0.218693,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65327,"sim:weight":0.2082,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5844257,"sim:weight":0.205145,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1393937,"sim:weight":0.190609,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.182359,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57391,"sim:weight":0.162528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826876,"sim:weight":0.14622,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671570,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Network file server design for continuous\n        media","bibo:abstract":"This dissertation concentrates on issues related to the\n        provision of a network based storage facility for digital audio\n        and video data. The goal is to demonstrate that a distributed\n        file service in support of these media may be built without\n        special purpose hardware. The main objective is to identify\n        those parameters that affect file system performance and provide\n        the criteria for making desirable design decisions.","bibo:AuthorList":["Jardetzky, Paul W."],"dc:date":"1992-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931434,"sim:weight":0.321568,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.264336,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.22902,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.1819,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549876,"sim:weight":0.167752,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932494,"sim:weight":0.166171,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.153724,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000441,"sim:weight":0.149548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.116218,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671571,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Exploratory learning in the game of GO","bibo:abstract":"This paper considers the importance of exploration to\n        game-playing programs which learn by playing against opponents.\n        The central question is whether a learning program should play\n        the move which offers the best chance of winning the present\n        game, or if it should play the move which has the best chance of\n        providing useful information for future games. An approach to\n        addressing this question is developed using probability theory,\n        and then implemented in two different learning methods. Initial\n        experiments in the game of Go suggest that a program which takes\n        exploration into account can learn better against a\n        knowledgeable opponent than a program which does not.","bibo:AuthorList":["Pell, Barney"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":5843670,"sim:weight":0.441121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931796,"sim:weight":0.418426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931622,"sim:weight":0.399102,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22338,"sim:weight":0.389994,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929825,"sim:weight":0.372483,"sim:AssociationMethod":"similarity_cosine"},{"identifier":360898,"sim:weight":0.349225,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931997,"sim:weight":0.338659,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26263,"sim:weight":0.303892,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1510974,"sim:weight":0.289098,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19596,"sim:weight":0.28292,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.238428,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20723,"sim:weight":0.231455,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23502,"sim:weight":0.214811,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26802,"sim:weight":0.201711,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671572,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"METAGAME: a new challenge for games and\n        learning","bibo:abstract":"In most current approaches to Computer Game-Playing, including\n        those employing some form of machine learning, the game analysis\n        mainly is performed by humans. Thus, we are sidestepping largely\n        the interesting (and difficult) questions. Human analysis also\n        makes it difficult to evaluate the generality and applicability\n        of different approaches.\n        \n        To address these problems, we introduce a new challenge:\n        Metagame. The idea is to write programs which take as input the\n        rules of a set of new games within a pre-specified class,\n        generated by a program which is publicly available. The programs\n        compete against each other in many matches on each new game, and\n        they can then be evaluated based on their overall performance\n        and improvement through experience.\n        \n        This paper discusses the goals, research areas, and general\n        concerns for the idea of Metagame.","bibo:AuthorList":["Pell, Barney"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8931622,"sim:weight":0.4252,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929825,"sim:weight":0.383194,"sim:AssociationMethod":"similarity_cosine"},{"identifier":88291,"sim:weight":0.320786,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.275738,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931784,"sim:weight":0.229007,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26006,"sim:weight":0.222513,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57289,"sim:weight":0.217824,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671573,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"METAGAME in symmetric chess-like games","bibo:abstract":"I have implemented a game generator that generates games from a\n        wide but still restricted class. This class is general enough to\n        include most aspects of many standard games, including Chess,\n        Shogi, Chinese Chess, Checkers, Draughts, and many variants of\n        Fairy Chess. The generator, implemented in Prolog is transparent\n        and publicly available, and generates games using probability\n        distributions for parameters such as piece complexity, types of\n        movement, board size, and locality.\n        \n        The generator is illustrated by means of a new game it produced,\n        which is then subjected to a simple strategic analysis. This\n        form of analysis suggests that programs to play Metagame well\n        will either learn or apply very general game-playing principles.\n        But because the class is still restricted, it may be possible to\n        develop a naive but fast program which can outplay more\n        sophisticated opponents. Performance in a tournament between\n        programs is the deciding criterion.","bibo:AuthorList":["Pell, Barney"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671574,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Introduction to Isabelle","bibo:abstract":"Isabelle is a generic theorem prover, supporting formal proof in\n        a variety of logics. Through a variety of examples, this paper\n        explains the basic theory demonstrates the most important\n        commands. It serves as the introduction to other Isabelle\n        documentation.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1993-01","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"L C Paulson. (1993). Introduction to Isabelle.","authors":[],"bibo:shortTitle":"Introduction to Isabelle.","dc:date":"1993","refDocId":4671574}],"similarities":[{"identifier":8932038,"sim:weight":0.164434,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.135533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826917,"sim:weight":0.106749,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.0867158,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671575,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Isabelle reference manual","bibo:abstract":"This manual is a comprehensive description of Isabelle,\n        including all commands, functions and packages. It is intended\n        for reference rather than for reading through, and is certainly\n        not a tutorial. The manual assumes familiarity with the basic\n        concepts explained in Introduction to Isabelle. Functions are\n        organized by their purpose, by their operands (subgoals,\n        tactics, theorems), and by their usefulness. In each section,\n        basic functions appear first, then advanced functions, and\n        finally esoteric functions.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1993-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671576,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Isabelle’s object-logics","bibo:abstract":"Several logics come with Isabelle. Many of them are sufficiently\n        developed to serve as comfortable reasoning environments. They\n        are also good starting points for defining new logics. Each\n        logic is distributed with sample proofs, some of which are\n        presented in the paper. The logics described include first-order\n        logic, Zermelo-Fraenkel set theory, higher-order logic,\n        constructive type theory, and the classical sequent calculus LK.\n        A final chapter explains the fine points of defining logics in\n        Isabelle.","bibo:AuthorList":["Paulson, Lawrence C."],"dc:date":"1993-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671577,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A mechanised definition of Silage in HOL","bibo:abstract":"If formal methods of hardware verification are to have any\n        impact on the practices of working engineers, connections must\n        be made between the languages used in practice to design\n        circuits, and those used for research into hardware\n        verification. Silage is a simple dataflow language marketed for\n        specifying digital signal processing circuits. Higher Order\n        Logic (HOL) is extensively used for research into hardware\n        verification. This paper presents a formal definition of a\n        substantial subset of Silage, by mapping Silage declarations\n        into HOL predicates. The definition has been mechanised in the\n        HOL theorem prover to support the transformational design of\n        Silage circuits as theorem proving in HOL.","bibo:AuthorList":["Gordon, Andrew D."],"dc:date":"1993-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1393937,"sim:weight":0.17578,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.134909,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65323,"sim:weight":0.114128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826863,"sim:weight":0.108872,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65327,"sim:weight":0.108039,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.0930122,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.0926739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.0914097,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671578,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Evaluating natural language processing\n        systems","bibo:abstract":"This report presents a detailed analysis and review of NLP\n        evaluation, in principle and in practice. Part 1 examines\n        evaluation concepts and establishes a framework for NLP system\n        evaluation. This makes use of experience in the related area of\n        information retrieval and the analysis also refers to evaluation\n        in speech processing. Part 2 surveys significant evaluation work\n        done so far, for instance in machine translation, and discusses\n        the particular problems of generic system evaluation. The\n        conclusion is that evaluation strategies and techniques for NLP\n        need much more development, in particular to take proper account\n        of the influence of system tasks and settings. Part 3 develops a\n        general approach to NLP evaluation, aimed at\n        methodologically-sound strategies for test and evaluation\n        motivated by comprehensive performance factor identification.\n        The analysis throughout the report is supported by extensive\n        illustrative examples.","bibo:AuthorList":["Galliers, J.R.","Spärck Jones, K."],"dc:date":"1993-02","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":56680,"sim:weight":0.211216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108708,"sim:weight":0.157708,"sim:AssociationMethod":"similarity_cosine"},{"identifier":61040,"sim:weight":0.156458,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.154078,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2755110,"sim:weight":0.152861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1914779,"sim:weight":0.151548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21224,"sim:weight":0.144474,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108929,"sim:weight":0.14065,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108285,"sim:weight":0.136351,"sim:AssociationMethod":"similarity_cosine"},{"identifier":21797,"sim:weight":0.133807,"sim:AssociationMethod":"similarity_cosine"},{"identifier":27091,"sim:weight":0.127773,"sim:AssociationMethod":"similarity_cosine"},{"identifier":24009,"sim:weight":0.114285,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671579,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Synchronisation services for digital continuous\n        media","bibo:abstract":"The development of broadband ATM networking makes it attractive\n        to use computer communication networks for the transport of\n        digital audio and motion video. Coupled with advances in\n        workstation technology, this creates the opportunity to\n        integrate these continuous information media within a\n        distributed computing system. Continuous media have an inherent\n        temporal dimension, resulting in a set of synchronisation\n        requirements which have real-time constraints. This dissertation\n        identifies the role and position of synchronisation, in terms of\n        the support which is necessary in an integrated distributed\n        system. This work is supported by a set of experiments which\n        were performed in an ATM inter-network using multi-media\n        workstations, each equipped with an Olivetti Pandora Box.","bibo:AuthorList":["Sreenan, Cormac John"],"dc:date":"1993-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.202138,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.187304,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91415,"sim:weight":0.162426,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70404,"sim:weight":0.157564,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.152362,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.137812,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826950,"sim:weight":0.125104,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.124739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.117963,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671580,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Multicast in the asynchronous transfer mode\n        environment","bibo:abstract":"In future multimedia communication networks, the ability to\n        multicast information will be useful for many new and existing\n        services. This dissertation considers the design of multicast\n        switches for Asynchronous Transfer Mode (ATM) networks and\n        proposes one design based upon a slotted ring. Analysis and\n        simulation studies of this design are presented and details of\n        its implementation for an experimental ATM network (Project\n        Fairisle) are described, together with the modifications to the\n        existing multi-service protocol architecture necessary to\n        provide multicast connections. Finally, a short study of the\n        problem of multicast routing is presented, together with some\n        simulations of the long-term effect upon the routing efficiency\n        of modifying the number of destinations within a multicast\n        group.","bibo:AuthorList":["Doar, John Matthew Simon"],"dc:date":"1993-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":708401,"sim:weight":0.593186,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.188895,"sim:AssociationMethod":"similarity_cosine"},{"identifier":67556,"sim:weight":0.181977,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549567,"sim:weight":0.173484,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.151629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.145403,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.139118,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108624,"sim:weight":0.128321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5847676,"sim:weight":0.11287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.108379,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671581,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Pragmatic reasoning in bridge","bibo:abstract":"In this paper we argue that bidding in the game of Contract\n        Bridge can profitably be regarded as a micro-world suitable for\n        experimenting with pragmatics. We sketch an analysis in which a\n        “bidding system” is treated as the semantics of an artificial\n        language, and show how this “language”, despite its apparent\n        simplicity, is capable of supporting a wide variety of common\n        speech acts parallel to those in natural languages; we also\n        argue that the reason for the relatively unsuccessful nature of\n        previous attempts to write strong Bridge playing programs has\n        been their failure to address the need to reason explicitly\n        about knowledge, pragmatics, probabilities and plans. We give an\n        overview of Pragma, a system currently under development, which\n        embodies these ideas in concrete form, using a combination of\n        rule-based inference, stochastic simulation, and “neural-net”\n        learning. Examples are given illustrating the functionality of\n        the system in its current form.","bibo:AuthorList":["Gamback, Bjorn","Rayner, Manny","Pell, Barney"],"dc:date":"1993-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":112395,"sim:weight":0.243107,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932274,"sim:weight":0.205971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.173197,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671582,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Logic programming for general game-playing","bibo:abstract":"Meta-Game Playing is a new approach to games in Artificial\n        Intelligence, where we construct programs to play new games in a\n        well-defined class, which are output by an automatic game\n        generator. As the specific games to be played are not known in\n        advance, a degree of human bias is eliminated, and playing\n        programs are required to perform any game-specific optimisations\n        without human assistance.\n        \n        The attempt to construct a general game-playing program is made\n        difficult by the opposing goals of generality and efficiency.\n        This paper shows how application of standard techniques in\n        logic-programming (abstract interpretation and partial\n        evaluation) makes it possible to achieve both of these goals.\n        Using these techniques, we can represent the semantics of a\n        large class of games in a general and declarative way, but then\n        have the program transform this representation into a more\n        efficient version once it is presented with the rules of a new\n        game. This process can be viewed as moving some of the\n        responsibility for game analysis (that concerned with\n        efficiency) from the researcher to the program itself.","bibo:AuthorList":["Pell, Barney"],"dc:date":"1993-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671583,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Natural language processing for information\n        retrieval","bibo:abstract":"The paper summarizes the essential properties of document\n        retrieval and reviews both conventional practice and research\n        findings, the latter suggesting that simple statistical\n        techniques can be effective. It then considers the new\n        opportunities and challenges presented by the ability to search\n        full text directly (rather than e.g. titles and abstracts), and\n        suggests appropriate approaches to doing this, with a focus on\n        the role of natural language processing. The paper also comments\n        on possible connections with data and knowledge retrieval, and\n        concludes by emphasizing the importance of rigorous performance\n        testing.","bibo:AuthorList":["Lewis, David D.","Spärck Jones, Karen"],"dc:date":"1993-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671584,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"HARP: a hierarchical asynchronous replication protocol\n        for massively replicated systems","bibo:AuthorList":["Adly, Noha"],"dc:date":"1993-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671585,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Practical unification-based parsing of natural\n        language","bibo:abstract":"The thesis describes novel techniques and algorithms for the\n        practical parsing of realistic Natural Language (NL) texts with\n        a wide-coverage unification-based grammar of English. The thesis\n        tackles two of the major problems in this area: firstly, the\n        fact that parsing realistic inputs with such grammars can be\n        computationally very expensive, and secondly, the observation\n        that many analyses are often assigned to an input, only one of\n        which usually forms the basis of the correct interpretation.\n        \n        The thesis starts by presenting a new unification algorithm,\n        justifies why it is well-suited to practical NL parsing, and\n        describes a bottom-up active chart parser which employs this\n        unification algorithm together with several other novel\n        processing and optimisation techniques. Empirical results\n        demonstrate that an implementation of this parser has\n        significantly better practical performance than a comparable,\n        state-of-the-art unification-based parser. Next, techniques for\n        computing an LR table for a large unification grammar are\n        described, a context free non-deterministic LR parsing algorithm\n        is presented which has better time complexity than any\n        previously reported using the same approach, and a\n        unification-based version is derived. In experiments, the\n        performance of an implementation of the latter is shown to\n        exceed both the chart parser and also that of another efficient\n        LR-like algorithm recently proposed.\n        \n        Building on these methods, a system for parsing text taken from\n        a given corpus is described which uses probabilistic techniques\n        to identify the most plausible syntactic analyses for an input\n        from the often large number licensed by the grammar. New\n        techniques implemented include an incremental approach to\n        semi-supervised training, a context-sensitive method of scoring\n        sub-analyses, the accurate manipulation of probabilities during\n        parsing, and the identification of the highest ranked analyses\n        without exhaustive search. The system attains a similar success\n        rate to approaches based on context-free grammar, but produces\n        analyses which are more suitable for semantic processing.\n        \n        The thesis includes detailed analyses of the worst-case space\n        and time complexities of all the main algorithms described, and\n        discusses the practical impact of the theoretical complexity\n        results.","bibo:AuthorList":["Carroll, John Andrew"],"bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671586,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Strategy generation and evaluation for meta-game\n        playing","bibo:abstract":"Meta-Game Playing (METAGAME) is a new paradigm for research in\n        game-playing in which we design programs to take in the rules of\n        unknown games and play those games without human assistance.\n        Strong performance in this new paradigm is evidence that the\n        program, instead of its human designer, has performed the\n        analysis of each specific game.\n        \n        SCL-METAGAME is a concrete METAGAME research problem based\n        around the class of symmetric chess-like games. The class\n        includes the games of chess, checkers, noughts and crosses,\n        Chinese-chess, and Shogi. An implemented game generator produces\n        new games in this class, some of which are objects of interest\n        in their own right.\n        \n        METAGAMER is a program that plays SCL-METAGAME. The program\n        takes as input the rules of a specific game and analyses those\n        rules to construct for that game an efficient representation and\n        an evaluation function, both for use with a generic search\n        engine. The strategic analysis performed by the program relates\n        a set of general knowledge sources to the details of the\n        particular game. Among other properties, this analysis\n        determines the relative value of the different pieces in a given\n        game. Although METAGAMER does not learn from experience, the\n        values resulting from its analysis are qualitatively similar to\n        values used by experts on known games, and are sufficient to\n        produce competitive performance the first time the program\n        actually plays each game it is given. This appears to be the\n        first program to have derived useful piece values directly from\n        analysis of the rules of different games.\n        \n        Experiments show that the knowledge implemented in METAGAMER is\n        useful on games unknown to its programmer in advance of the\n        competition and make it seem likely that future programs which\n        incorporate learning and more sophisticated active-analysis\n        techniques will have a demonstrable competitive advantage on\n        this new problem. When playing the known games of chess and\n        checkers against humans and specialised programs, METAGAMER has\n        derived from more general principles some strategies which are\n        familiar to players of those games and which are hard-wired in\n        many game-specific programs.","bibo:AuthorList":["Pell, Barney Darryl"],"dc:date":"1993-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671587,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Compleat LKB","bibo:AuthorList":["Copestake, Ann"],"dc:date":"1993-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671588,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A method of program refinement","bibo:abstract":"A method of specifying the desired behaviour of a computer\n        program, and of refining such specifications into imperative\n        programs is proposed. The refinement method has been designed\n        with the intention of being amenable to tool support, and of\n        being applicable to real-world refinement problems.\n        \n        Part of the refinement method proposed involves the use of a\n        style of transformational reasoning called ‘window inference’.\n        Window inference is particularly powerful because it allows the\n        information inherent in the context of a subexpression to be\n        used in its transformation. If the notion of transformational\n        reasoning is generalised to include transformations that\n        preserve relationships weaker than equality, then program\n        refinement can be regarded as a special case of transformational\n        reasoning. A generalisation of window inference is described\n        that allows non-equivalence preserving transformations. Window\n        inference was originally proposed independently from, and as an\n        alternative to, traditional styles of reasoning. A\n        correspondence between the generalised version of window\n        inference and natural deduction is described. This\n        correspondence forms the basis of a window inference tool that\n        has been built on top of the HOL theorem proving system.\n        \n        This dissertation adopts a uniform treatment of specifications\n        and programs as predicates. A survey of the existing approaches\n        to the treatment of programs as predicates is presented. A new\n        approach is then developed based on using predicates of a\n        three-valued logic. This new approach can distinguish more\n        easily between specifications of terminating and nonterminating\n        behaviour than can the existing approaches.\n        \n        A method of program refinement is then described by combining\n        the unified treatment of specifications and programs as\n        three-valued predicates with the window inference style of\n        transformational reasoning. The result is a simple method of\n        refinement that is well suited to the provision of tool support.\n        \n        The method of refinement includes a technique for developing\n        recursive programs. The proof of such developments is usually\n        complicated because little can be assumed about the form and\n        termination properties of a partially developed program. These\n        difficulties are side-stepped by using a simplified meaning for\n        recursion that compels the development of terminating programs.\n        Once the development of a program is complete, the simplified\n        meaning for recursion is refined into the true meaning.\n        \n        The dissertation concludes with a case study which presents the\n        specification and development of a simple line-editor. The case\n        study demonstrates the applicability of the refinement method to\n        real-world problems. The line editor is a nontrivial example\n        that contains features characteristic of large developments,\n        including complex data structures and the use of data\n        abstraction. Examination of the case study shows that window\n        inference offers a convenient way of structuring large\n        developments.","bibo:AuthorList":["Grundy, Jim"],"dc:date":"1993-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9046934,"sim:weight":0.331303,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671589,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A workstation architecture to support\n        multimedia","bibo:abstract":"The advent of high speed networks in the wide and local area\n        enables multimedia traffic to be easily carried between\n        workstation class machines. The dissertation considers an\n        architecture for a workstation to support such traffic\n        effectively. In addition to presenting the information to a\n        human user the architecture allows processing to be done on\n        continuous media streams.\n        \n        The proposed workstation architecture, known as the Desk Area\n        Network (DAN), extends ideas from Asynchronous Transfer Mode\n        (ATM) networks into the end-system. All processors and devices\n        are connected to an ATM interconnect. The architecture is shown\n        to be capable of supporting both multimedia data streams and\n        more traditional CPU cache line traffic. The advocated extension\n        of the CPU cache which allows caching of multimedia data streams\n        is shown to provide a natural programming abstraction and a\n        mechanism for synchronising the processor with the stream.\n        \n        A prototype DAN workstation has been built. Experiments have\n        been done to demonstrate the features of the architecture. In\n        particular the use of the DAN as a processor-to-memory\n        interconnect is closely studied to show the practicality of\n        using ATM for cache line traffic in a real machine. Simple\n        demonstrations of the stream cache ideas are used to show its\n        utility in future applications.","bibo:AuthorList":["Hayter, Mark David"],"dc:date":"1993-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":108624,"sim:weight":0.262084,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.247519,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.222696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.200216,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1651709,"sim:weight":0.19783,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.195762,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5844968,"sim:weight":0.170746,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.151333,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.150459,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.143712,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5847676,"sim:weight":0.121747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.109468,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671590,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Relational properties of domains","bibo:abstract":"New tools are presented for reasoning about properties of\n        recursively defined domains. We work within a general,\n        category-theoretic framework for various notions of ‘relation’\n        on domains and for actions of domain constructors on relations.\n        Freyd’s analysis of recursive types in terms of a property of\n        mixed initiality/finality is transferred to a corresponding\n        property of invariant relations. The existence of invariant\n        relations is proved under completeness assumptions about the\n        notion of relation. We show how this leads to simpler proofs of\n        the computational adequacy of denotational semantics for\n        functional programming languages with user-declared datatypes.\n        We show how the initiality/finality property of invariant\n        relations can be specialized to yield an induction principle for\n        admissible subsets of recursively defined domains, generalizing\n        the principle of structural induction for inductively defined\n        sets. We also show how the initiality/finality property gives\n        rise to the co-induction principle studied by the author (in\n        UCAM-CL-TR-252), by which equalities between elements of\n        recursively defined domains may be proved via an appropriate\n        notion of ‘bisimulation’.","bibo:AuthorList":["Pitts, Andrew M."],"dc:date":"1993-12","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"A M Pitts. (1993). Relational properties of domains.","authors":[],"bibo:shortTitle":"Relational properties of domains.","dc:date":"1993","refDocId":4671590}],"similarities":[{"identifier":87405,"sim:weight":0.241016,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9670,"sim:weight":0.19837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.192548,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.145729,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.143975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.130326,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671591,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A modular and extensible network storage\n        architecture","bibo:abstract":"Most contemporary distributed file systems are not designed to\n        be extensible. This work asserts that the lack of extensibility\n        is a problem because:\n        \n        – New data types, such as continuous-medium data and structured\n        data, are significantly different from conventional unstructured\n        data, such as text and binary, that contemporary distributed\n        file systems are built to support.\n        \n        – Value-adding clients can provide functional enhancements, such\n        as convenient and reliable persistent programming and automatic\n        and transparent file indexing, but cannot be integrated smoothly\n        with contemporary distributed file systems.\n        \n        – New media technologies, such as the optical jukebox and RAID\n        disk, can extend the scale and performance of a storage service\n        but contemporary distributed file systems do not have a clear\n        framework to incorporate these new technologies and to provide\n        the necessary user level transparency.\n        \n        Motivated by these observations, the new network storage\n        architecture (MSSA) presented in this dissertation, is designed\n        to be extensible. Design modularity is taken as the key to\n        achieve service extensibility. This dissertation examines a\n        number of issues related to the design of the architecture. New\n        ideas, such as a flexible access control mechanism based on\n        temporary capabilities, a low level storage substrate that uses\n        non-volatile memory to provide atomic update semantics at high\n        performance, a concept of sessions to differentiate performance\n        requirements of different data types, are introduced. Prototype\n        implementations of the key components are evaluated.","bibo:AuthorList":["Lo, Sai-Lai"],"dc:date":"1994-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671592,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Efficiency in a fully-expansive theorem\n        prover","bibo:abstract":"The HOL system is a fully-expansive theorem prover: Proofs\n        generated in the system are composed of applications of the\n        primitive inference rules of the underlying logic. This has two\n        main advantages. First, the soundness of the system depends only\n        on the implementations of the primitive rules. Second, users can\n        be given the freedom to write their own proof procedures without\n        the risk of making the system unsound. A full functional\n        programming language is provided for this purpose. The\n        disadvantage with the approach is that performance is\n        compromised. This is partly due to the inherent cost of fully\n        expanding a proof but, as demonstrated in this thesis, much of\n        the observed inefficiency is due to the way the derived proof\n        procedures are written.\n        \n        This thesis seeks to identify sources of non-inherent\n        inefficiency in the HOL system and proposes some general-purpose\n        and some specialised techniques for eliminating it. One area\n        that seems to be particularly amenable to optimisation is\n        equational reasoning. This is significant because equational\n        reasoning constitutes large portions of many proofs. A number of\n        techniques are proposed that transparently optimise equational\n        reasoning. Existing programs in the HOL system require little or\n        no modification to work faster.\n        \n        The other major contribution of this thesis is a framework in\n        which part of the computation involved in HOL proofs can be\n        postponed. This enables users to make better use of their time.\n        The technique exploits a form of lazy evaluation. The critical\n        feature is the separation of the code that generates the\n        structure of a theorem from the code that justifies it\n        logically. Delaying the justification allows some non-local\n        optimisations to be performed in equational reasoning. None of\n        the techniques sacrifice the security of the fully-expansive\n        approach.\n        \n        A decision procedure for a subset of the theory of linear\n        arithmetic is used to illustrate many of the techniques.\n        Decision procedures for this theory are commonplace in theorem\n        provers due to the importance of arithmetic reasoning. The\n        techniques described in the thesis have been implemented and\n        execution times are given. The implementation of the arithmetic\n        procedure is a major contribution in itself. For the first time,\n        users of the HOL system are able to prove many arithmetic lemmas\n        automatically in a practical amount of time (typically a second\n        or two).\n        \n        The applicability of the techniques to other fully-expansive\n        theorem provers and possible extensions of the ideas are\n        considered.","bibo:AuthorList":["Boulton, Richard John"],"dc:date":"1994-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":84956,"sim:weight":0.237463,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.222174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.221649,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.210922,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671593,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Presentation support for distributed multimedia\n        applications","bibo:AuthorList":["Bates, John"],"dc:date":"1994-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671594,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Reflections on TREC","bibo:abstract":"This paper discusses the Text REtrieval Conferences (TREC)\n        programme as a major enterprise in information retrieval\n        research. It reviews its structure as an evaluation exercise,\n        characterises the methods of indexing and retrieval being tested\n        within it in terms of the approaches to system performance\n        factors these represent; analyses the test results for solid,\n        overall conclusions that can be drawn from them; and, in the\n        light of the particular features of the test data, assesses TREC\n        both for generally-applicable findings that emerge from it and\n        for directions it offers for future research.","bibo:AuthorList":["Spärck Jones, Karen"],"dc:date":"1994-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":26271,"sim:weight":0.163641,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9000059,"sim:weight":0.11107,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671595,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Handling realtime traffic in mobile networks","bibo:abstract":"The rapidly advancing technology of cellular communication and\n        wireless LAN makes ubiquitous computing feasible where the\n        mobile users can have access to the location independent\n        information and the computing resources. Multimedia networking\n        is another emerging technological trend of the 1990s and there\n        is an increasing demand for supporting continuous media traffic\n        in wireless personal communication environment. In order to\n        guarantee the strict performance requirements of realtime\n        traffic, the connection-oriented approaches are proving to be\n        more efficient compared to the conventional datagram based\n        networking. This dissertation deals with a network architecture\n        and its design issues for implementing the connection-oriented\n        services in a mobile radio environment.\n        \n        The wired backbone of the proposed wireless LAN comprises of\n        high speed ATM switching elements, connected in a modular\n        fashion, where the new switches and the user devices can be\n        dynamically added and reconnected for maintaining a desired\n        topology. A dynamic reconfiguration protocol, which can cope\n        with these changing network topologies, is proposed for the\n        present network architecture. The details about a prototype\n        implementation of the protocol and a simulation model for its\n        performance evaluation are presented.\n        \n        CSMA/AED, a single frequency and carrier sensing based protocol\n        is proposed for the radio medium access operations. A simulation\n        model is developed in order to investigate the feasibility of\n        this statistical and reliable access scheme for the proposed\n        radio network architecture. The effectiveness of a\n        per-connection window based flow control mechanism, for the\n        proposed radio LAN, is also investigated. A hybrid technique is\n        used, where the medium access and the radio data-link layers are\n        modelled using the mentioned simulator; an upper layer\n        end-to-end queueing model, involving flow dependent servers, is\n        solved using an approximate Mean Value Analysis technique which\n        is augmented for faster iterative convergence.\n        \n        A distributed location server, for managing mobile users’\n        location information and for aiding the mobile connection\n        management tasks, is proposed. In order to hide the effects of\n        mobility from the non-mobile network entities, the concept of a\n        per-mobile software entity, known as a “representative”, is\n        introduced. A mobile connection management scheme is also\n        proposed for handling the end-to-end network layer connections\n        in the present mobile environment. The scheme uses the\n        representatives and a novel connection caching technique for\n        providing the necessary realtime traffic support\n        functionalities.\n        \n        A prototype system, comprising of the proposed location and the\n        connection managers, has been built for demonstrating the\n        feasibility of the presented architecture for transporting\n        continuous media traffic. A set of experiments have been carried\n        out in order to investigate the impacts of various design\n        decisions and to identify the performance-critical parts of the\n        design.","bibo:AuthorList":["Biswas, Subir Kumar"],"dc:date":"1994-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.422686,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549727,"sim:weight":0.391676,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.318291,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.311447,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.291801,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.273461,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.267857,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5847676,"sim:weight":0.266003,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70404,"sim:weight":0.263617,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.19915,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671596,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Explicit network scheduling","bibo:abstract":"This dissertation considers various problems associated with the\n        scheduling and network I/O organisation found in conventional\n        operating systems for effective support for multimedia\n        applications which require Quality of Service.\n        \n        A solution for these problems is proposed in a micro-kernel\n        structure. The pivotal features of the proposed design are that\n        the processing of device interrupts is performed by user-space\n        processes which are scheduled by the system like any other, that\n        events are used for both inter- and intra-process\n        synchronisation, and the use of a specially developed high\n        performance I/O buffer management system.\n        \n        An evaluation of an experimental implementation is included. In\n        addition to solving the scheduling and networking problems\n        addressed, the prototype is shown to out-perform the Wanda\n        system (a locally developed micro-kernel) on the same platform.\n        \n        This dissertation concludes that it is possible to construct an\n        operating system where the kernel provides only the fundamental\n        job of fine grain sharing of the CPU between processes, and\n        hence synchronisation between those processes. This enables\n        processes to perform task specific optimisations; as a result\n        system performance is enhanced, both with respect to throughput\n        and the meeting of soft real-time guarantees.","bibo:AuthorList":["Black, Richard John"],"dc:date":"1995-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":5843056,"sim:weight":0.352374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.285301,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.263306,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91427,"sim:weight":0.247472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.245389,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.221943,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932494,"sim:weight":0.216707,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.212121,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.207153,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.203852,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59097,"sim:weight":0.191775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931258,"sim:weight":0.182619,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.15828,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671597,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"W-learning: competition among selfish\n        Q-learners","bibo:abstract":"W-learning is a self-organising action-selection scheme for\n        systems with multiple parallel goals, such as autonomous mobile\n        robots. It uses ideas drawn from the subsumption architecture\n        for mobile robots (Brooks), implementing them with the\n        Q-learning algorithm from reinforcement learning (Watkins).\n        Brooks explores the idea of multiple sensing-and-acting agents\n        within a single robot, more than one of which is capable of\n        controlling the robot on its own if allowed. I introduce a model\n        where the agents are not only autonomous, but are in fact\n        engaged in direct competition with each other for control of the\n        robot. Interesting robots are ones where no agent achieves total\n        victory, but rather the state-space is fragmented among\n        different agents. Having the agents operate by Q-learning proves\n        to be a way to implement this, leading to a local, incremental\n        algorithm (W-learning) to resolve competition. I present a\n        sketch proof that this algorithm converges when the world is a\n        discrete, finite Markov decision process. For each state,\n        competition is resolved with the most likely winner of the state\n        being the agent that is most likely to suffer the most if it\n        does not win. In this way, W-learning can be viewed as ‘fair’\n        resolution of competition. In the empirical section, I show how\n        W-learning may be used to define spaces of agent-collections\n        whose action selection is learnt rather than hand-designed. This\n        is the kind of solution-space that may be searched with a\n        genetic algorithm.","bibo:AuthorList":["Humphrys, Mark"],"dc:date":"1995-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671598,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Names and higher-order functions","bibo:abstract":"Many functional programming languages rely on the elimination of\n        ‘impure’ features: assignment to variables, exceptions and even\n        input/output. But some of these are genuinely useful, and it is\n        of real interest to establish how they can be reintroducted in a\n        controlled way. This dissertation looks in detail at one example\n        of this: the addition to a functional language of dynamically\n        generated “names”. Names are created fresh, they can be compared\n        with each other and passed around, but that is all. As a very\n        basic example of “state”, they capture the graduation between\n        private and public, local and global, by their interaction with\n        higher-order functions.\n        \n        The vehicle for this study is the “nu-calculus”, an extension of\n        the simply-typed lambda-calculus. The nu-calculus is equivalent\n        to a certain fragment of Standard ML, omitting side-effects,\n        exceptions, datatypes and recursion. Even without all these\n        features, the interaction of name creation with higher-order\n        functions can be complex and subtle.\n        \n        Various operational and denotational methods for reasoning about\n        the nu-calculus are developed. These include a computational\n        metalanguage in the style of Moggi, which distinguishes in the\n        type system between values and computations. This leads to\n        categorical models that use a strong monad, and examples are\n        devised based on functor categories.\n        \n        The idea of “logical relations” is used to derive powerful\n        reasoning methods that capture some of the distinction between\n        private and public names. These techniques are shown to be\n        complete for establishing contextual equivalence between\n        first-order expressions; they are also used to construct a\n        correspondingly abstract categorical model.\n        \n        All the work with the nu-calculus extends cleanly to Reduced ML,\n        a larger language that introduces integer references: mutable\n        storage cells that are dynamically allocated. It turns out that\n        the step up is quite simple, and both the computational\n        metalanguage and the sample categorical models can be reused.","bibo:AuthorList":["Stark, Ian"],"dc:date":"1995-04","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"I Stark. (1994). Names and Higher-Order Functions,","authors":[],"bibo:shortTitle":"Names and Higher-Order Functions,","dc:date":"1994","refDocId":4671598}],"similarities":[]}
{"identifier":4671599,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Church-Rosser theorem in Isabelle: a proof porting\n        experiment","bibo:abstract":"This paper describes a proof of the Church-Rosser theorem for\n        the pure lambda-calculus formalised in the Isabelle theorem\n        prover. The initial version of the proof is ported from a\n        similar proof done in the Coq proof assistant by Girard Huet,\n        but a number of optimisations have been performed. The\n        development involves the introduction of several inductive and\n        recursive definitions and thus gives a good presentation of the\n        inductive package of Isabelle.","bibo:AuthorList":["Rasmussen, Ole"],"dc:date":"1995-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932038,"sim:weight":0.312353,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9785,"sim:weight":0.223318,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9784,"sim:weight":0.131174,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85430,"sim:weight":0.118761,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.118378,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.0670307,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671600,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Categorical logic","bibo:abstract":"This document provides an introduction to the interaction\n        between category theory and mathematical logic which is slanted\n        towards computer scientists. It will be a chapter in the\n        forthcoming Volume VI of: S. Abramsky, D. M. Gabbay, and T. S.\n        E. Maibaum (eds), “Handbook of Logic in Computer Science”,\n        Oxford University Press.","bibo:AuthorList":["Pitts, Andrew M."],"dc:date":"1995-05","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"A M Pitts. (1995). Categorical logic.","authors":[],"bibo:shortTitle":"Categorical logic.","dc:date":"1995","refDocId":4671600}],"similarities":[{"identifier":332872,"sim:weight":0.220674,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.199722,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.169855,"sim:AssociationMethod":"similarity_cosine"},{"identifier":332869,"sim:weight":0.164319,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86626,"sim:weight":0.139805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":20956,"sim:weight":0.139504,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1513401,"sim:weight":0.120499,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512535,"sim:weight":0.100161,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671601,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"CogPiT – configuration of protocols in TIP","bibo:abstract":"The variety of upcoming applications in terms of their\n        performance and Quality-of-Service (QoS) requirements is\n        increasing. Besides almost well-known applications, such as\n        teleconferencing, audio- and video-transmissions, even more\n        contemporary ones, such as medical imaging, Video-on-Demand, and\n        interactive tutoring systems, are introduced and applied to\n        existing networks. On the contrary, traditionally data-oriented\n        applications, such as file transfer and remote login, are\n        considerably different in terms of their QoS requirements.\n        Therefore, the consequences of this evolution effect the\n        architectures of end-systems, e.g., workstations that have to be\n        capable of maintaining all different kinds of multi-media data,\n        and intermediate-systems as well.\n        \n        Therefore, a configuration approach of communication protocols\n        has been developed to support the variety of applications. This\n        approach offers the possibility to configure communication\n        protocols automatically depending on the application\n        requirements expressed in various QoS parameters. The result, an\n        application-tailored communication protocol, matches the\n        requested application requirements as far as possible.\n        Additionally, network and system resources (NSR) are taken into\n        account for a well-suited configuration.\n        \n        The Configuration of Protocols in TIP is called CogPiT and is\n        part of the Transport and Internetworking Package (TIP). As an\n        example, in the TIP environment the transport protocol TEMPO is\n        used for configuration purposes.","bibo:AuthorList":["Stiller, Burkhard"],"dc:date":"1995-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671602,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A framework for QoS updates in a networking\n        environment","bibo:abstract":"The support of sufficient Quality-of-Service (QoS) for\n        applications residing in a distributed environment and running\n        on top of high performance networks is a demanding issue.\n        Currently, the areas to provide this support adequately include\n        communication protocols, operating systems support, and offered\n        network services. A configurable approach of communication\n        protocols offers the needed protocol flexibility to react\n        accordingly on various different requirements.\n        \n        Communication protocols and operating systems have to be\n        parametrized using internal configuration parameters, such as\n        window sizes, retry counters, or scheduling mechanisms, that\n        rely closely on requested application-oriented or\n        network-dependent QoS, such as bandwidth or delay. Moreover,\n        these internal parameters have to be recalculated from time to\n        time due to network changes (such as congestion or line\n        break-down) or due to application-specific alterations (such as\n        enhanced bandwidth requirements or increased reliability) to\n        adjust a temporary or semi-permanent “out-of-tune” service\n        behavior.\n        \n        Therefore, a rule-based evaluation and QoS updating framework\n        for configuration parameters in a networking environment has\n        been developed. The resulting “rulework” can be used within\n        highly dynamic environments in a communication subsystem that\n        offers the possibility to specify for every QoS parameter both a\n        bounding interval of values and an average value. As an example,\n        the framework has been integrated in the Function-based\n        Communication Subsystem (F-CSS). Especially, an enhanced\n        application service interface is offered, allowing for the\n        specification of various QoS-parameters that are used to\n        configure a sufficient application-tailored communication\n        protocol.","bibo:AuthorList":["Stiller, Burkhard"],"dc:date":"1995-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671603,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The structure of a multi-service operating\n        system","bibo:abstract":"Increases in processor speed and network bandwidth have led to\n        workstations being used to process multimedia data in real time.\n        These applications have requirements not met by existing\n        operating systems, primarily in the area of resource control:\n        there is a need to reserve resources, in particular the\n        processor, at a fine granularity. Furthermore, guarantees need\n        to be dynamically renegotiated to allow users to reassign\n        resources when the machine is heavily loaded. There have been\n        few attempts to provide the necessary facilities in traditional\n        operating systems, and the internal structure of such systems\n        makes the implementation of useful resource control difficult.\n        \n        This dissertation presents a way of structuring an operating\n        system to reduce crosstalk between applications sharing the\n        machine, and enable useful resource guarantees to be made:\n        instead of system services being located in the kernel or server\n        processes, they are placed as much as possible in client\n        protection domains and scheduled as part of the client, with\n        communication between domains only occurring when necessary to\n        enforce protection and concurrency control. This amounts to\n        multiplexing the service at as low a level of abstraction as\n        possible. A mechanism for sharing processor time between\n        resources is also described. The prototype Nemesis operating\n        system is used to demonstrate the ideas in use in a practical\n        system, and to illustrate solutions to several implementation\n        problems that arise.\n        \n        Firstly, structuring tools in the form of typed interfaces\n        within a single address space are used to reduce the complexity\n        of the system from the programmer’s viewpoint and enable rich\n        sharing of text and data between applications.\n        \n        Secondly, a scheduler is presented which delivers useful Quality\n        of Service guarantees to applications in a highly efficient\n        manner. Integrated with the scheduler is an inter-domain\n        communication system which has minimal impact on resource\n        guarantees, and a method of decoupling hardware interrupts from\n        the execution of device drivers.\n        \n        Finally, a framework for high-level inter-domain and\n        inter-machine communication is described, which goes beyond\n        object-based RPC systems to permit both Quality of Service\n        negotiation when a communication binding is established, and\n        services to be implemented straddling protection domain\n        boundaries as well as locally and in remote processes.","bibo:AuthorList":["Roscoe, Timothy"],"dc:date":"1995-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.368714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.307662,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.303756,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.297049,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.295103,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.286126,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.282629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.264636,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.261311,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.231265,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.212528,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.192113,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671604,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Performance evaluation of HARP: a hierarchical\n        asynchronous replication protocol for large scale\n        system","bibo:AuthorList":["Adly, Noha"],"dc:date":"1995-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":5843813,"sim:weight":0.085837,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5700052,"sim:weight":0.0715917,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671605,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Quality-of-Service issues in networking\n        environments","bibo:abstract":"Quality-of-Service (QoS) issues in networking environments cover\n        various separate areas and topics. They include at least the\n        specification of applications requirements, the definition of\n        network services, QoS models, resource reservation methods,\n        negotiation and transformation methods for QoS, and operating\n        system support for guaranteed services. An embracing approach\n        for handling, dealing with, and supporting QoS in different\n        scenarios and technical set-ups is required to manage\n        sufficiently forthcoming communication and networking tasks.\n        Modern telecommunication systems require an integrated\n        architecture for applications, communication subsystems, and\n        network perspectives to overcome drawbacks of traditional\n        communication architectures, such as redundant protocol\n        functionality, weakly designed interfaces between the end-system\n        and a network adapter, or impossibility of specifying and\n        guaranteeing QoS parameter.\n        \n        This work contains the discussion of a number of interconnected\n        QoS issues, e.g., QoS mapping, QoS negotiation, QoS-based\n        configuration of communication protocols, or QoS aspects in\n        Asynchronous Transfer Mode (ATM) signaling protocols, which have\n        been dealt with during a one-year research fellowship. This\n        report is not intended to be a complete description of every\n        technical detail, but tries to provide a brief overall picture\n        of the emerging and explosively developing QoS issues in\n        telecommunication systems. Additionally, investigations of some\n        of these issues are undertaken in a more closer detail. It is\n        mainly focussed on QoS mapping, negotiation, and updating in the\n        communication protocol area.","bibo:AuthorList":["Stiller, Burkhard"],"dc:date":"1995-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671606,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Securing ATM networks","bibo:abstract":"This is an interim report on the investigations into securing\n        Asynchronous Transfer Mode (ATM) networks. We look at the\n        challenge in providing such a secure ATM network and identify\n        the important issues in achieving such goal. In this paper, we\n        discuss the issues and problems involved and outline some\n        techniques to solving these problems. The network environment is\n        first examined and we also consider the correct placement of\n        security mechanism in such an environment. Following the\n        analysis of the security requirement, we introduce and describe\n        a key agile cryptographic device for ATM. The protection of the\n        ATM data plane is extremely important to provide data\n        confidentiality and data integrity. Techniques in providing\n        synchronisation, dynamic key change, dynamic initialisation\n        vector change and Message Authentication Code on ATM data, are\n        also being considered. Next, we discuss the corresponding\n        control functions. A few key exchange protocols are given as\n        possible candidates for the establishment of the session key.\n        The impact of such key exchange protocols on the design of an\n        ATM signalling protocol has also been examined and security\n        extension to an existing signalling protocol being discussed. We\n        also talk about securing other control plane functions such as\n        NNI routing, Inter-Domain Policy Routing, authorisation and\n        auditing, firewall and intrusion detection, Byzantine\n        robustness. Management plane functions are also being looked at,\n        with discussions on bootstrapping, authenticated neighbour\n        discovery, ILMI Security, PVC security, VPI security and ATM\n        Forum management model.","bibo:AuthorList":["Chuang, Shaw-Cheng"],"dc:date":"1995-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1549572,"sim:weight":0.319692,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5843757,"sim:weight":0.279034,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.162714,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9425245,"sim:weight":0.155565,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9425339,"sim:weight":0.135256,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671607,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Syn: a single language for specifiying abstract syntax\n        tress, lexical analysis, parsing and pretty-printing","bibo:abstract":"A language called Syn is described in which all aspects of\n        context-free syntax can be specified without redundancy. The\n        language is essentially an extended BNF grammar. Unusual\n        features include high-level constructs for specifying lexical\n        aspects of a language and specification of precedence by textual\n        order. A system has been implemented for generating lexers,\n        parsers, pretty-printers and abstract syntax tree\n        representations from a Syn specification.","bibo:AuthorList":["Boulton, Richard J."],"dc:date":"1996-03","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671608,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Performance management in ATM networks","bibo:abstract":"The Asynchronous Transfer Mode (ATM) has been identified as the\n        technology of choice amongst high speed communication networks\n        for its potential to integrate services with disparate resource\n        needs and timing constraints. Before it can successfully deliver\n        integrated services, however, significant problems remain to be\n        solved. They centre around two major issues. First, there is a\n        need for a simple, powerful network service interface capable of\n        meeting the communications needs of new applications. Second,\n        within the network there is a need to dynamically control a mix\n        of diverse traffic types to ensure that they meet their\n        performance criteria.\n        \n        Addressing the first concern, this dissertation argues that a\n        simple network control interface offers significant advantages\n        over the traditional, heavyweight approach of the\n        telecommunications industry. A network control architecture\n        based on a distributed systems approach is presented which\n        locates both the network control functions and its services\n        outside the network. The network service interface uses the\n        Remote Procedure Call (RPC) paradigm and enables more\n        complicated service offerings to be built from the basic\n        primitives. A formal specification and verification of the\n        user-network signalling protocol is presented. Implementations\n        of the architecture, both on Unix and the Wanda micro-kernel,\n        used on the Fairisle ATM switch, are described. The\n        implementations demonstrate the feasibility of the architecture,\n        and feature a high degree of experimental flexibility. This is\n        exploited in the balance of the dissertation, which presents the\n        results of a practical study of network performance under a\n        range of dynamic control mechanisms.\n        \n        Addressing the second concern, results are presented from a\n        study of the cell delay variation suffered by ATM connections\n        when multiplexed with real ATM traffic in an uncontrolled\n        network, and from an investigation of the expansion of bursts of\n        ATM traffic as a result of multiplexing. The results are\n        compared with those of analytical models. Finally, results from\n        a study of the performance delivered to delay sensitive traffic\n        by priority and rate based cell scheduling algorithms, and the\n        loss experienced by different types of traffic under several\n        buffer allocation strategies are presented.","bibo:AuthorList":["Crosby, Simon Andrew"],"dc:date":"1996-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":108624,"sim:weight":0.474397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.352634,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.323399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.244094,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.231287,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.142548,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671609,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Optimal routing in 2-jump circulant networks","bibo:abstract":"An algorithm for routing a message along the shortest path\n        between a pair of processors in 2-jump circulant (undirected\n        double fixed step) network is given. The algorithm requires O(d)\n        time for preprocessing, and l \u003d O(d) routing steps, where l is\n        the distance between the processors and d is the diameter of the\n        network.","bibo:AuthorList":["Robič, Borut"],"dc:date":"1996-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":5843268,"sim:weight":0.39791,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394156,"sim:weight":0.349592,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5844487,"sim:weight":0.307621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5844482,"sim:weight":0.29597,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5700048,"sim:weight":0.280329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5842184,"sim:weight":0.274012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5845340,"sim:weight":0.270117,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5845531,"sim:weight":0.252348,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394170,"sim:weight":0.237522,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5849379,"sim:weight":0.192537,"sim:AssociationMethod":"similarity_cosine"},{"identifier":5843177,"sim:weight":0.177688,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671610,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Devices in a multi-service operating system","bibo:abstract":"Increases in processor speed and network and device bandwidth\n        have led to general purpose workstations being called upon to\n        process continuous media data in real time. Conventional\n        operating systems are unable to cope with the high loads and\n        strict timing constraints introduced when such applications form\n        part of a multi-tasking workload. There is a need for the\n        operating system to provide fine-grained reservation of\n        processor, memory and I/O resources and the ability to\n        redistribute these resources dynamically. A small group of\n        operating systems researchers have recently proposed a\n        “vertically-structured” architecture where the operating system\n        kernel provides minimal functionality and the majority of\n        operating system code executes within the application itself.\n        This structure greatly simplifies the task of accounting for\n        processor usage by applications. The prototype Nemesis operating\n        system embodies these principles and is used as the platform for\n        this work.\n        \n        This dissertation extends the provision of Quality of Service\n        guarantees to the I/O system by presenting an architecture for\n        device drivers which minimises crosstalk between applications.\n        This is achieved by clearly separating the data-path operations,\n        which require careful accounting and scheduling, and the\n        infrequent control-path operations, which require protection and\n        concurrency control. The approach taken is to abstract and\n        multiplex the I/O data-path at the lowest level possible so as\n        to simplify accounting, policing and scheduling of I/O resources\n        and enable application-specific use of I/O devices.\n        \n        The architecture is applied to several representative classes of\n        device including network interfaces, network connected\n        peripherals, disk drives and framestores. Of these, disks and\n        framestores are of particular interest since they must be shared\n        at a very fine granularity but have traditionally been presented\n        to the application via a window system or file-system with a\n        high-level and coarse-grained interface.\n        \n        A device driver for the framestore is presented which abstracts\n        the device at a low level and is therefore able to provide each\n        client with guaranteed bandwidth to the framebuffer. The design\n        and implementation of a novel client-rendering window system is\n        then presented which uses this driver to enable rendering code\n        to be safely migrated into a shared library within the client.\n        \n        A low-level abstraction of a standard disk drive is also\n        described which efficiently supports a wide variety of file\n        systems and other applications requiring persistent storage,\n        whilst providing guaranteed rates of I/O to individual clients.\n        An extent-based file system is presented which can provide\n        guaranteed rate file access and enables clients to optimise for\n        application-specific access patterns.","bibo:AuthorList":["Barham, Paul Ronald"],"dc:date":"1996-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70186,"sim:weight":0.395197,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931434,"sim:weight":0.343128,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70551,"sim:weight":0.342533,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.319473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":268168,"sim:weight":0.298861,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932220,"sim:weight":0.286658,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.281723,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.278772,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549630,"sim:weight":0.27242,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.267329,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1651709,"sim:weight":0.254932,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26670,"sim:weight":0.248695,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.248199,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.243456,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.228379,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.18403,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671611,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A tool to support formal reasoning about computer\n        languages","bibo:abstract":"A tool to support formal reasoning about computer languages and\n        specific language texts is described. The intention is to\n        provide a tool that can build a formal reasoning system in a\n        mechanical theorem prover from two specifications, one for the\n        syntax of the language and one for the semantics. A parser,\n        pretty-printer and internal representations are generated from\n        the former. Logical representations of syntax and semantics, and\n        associated theorem proving tools, are generated from the\n        combination of the two specifications. The main aim is to\n        eliminate tedious work from the task of prototyping a reasoning\n        tool for a computer language, but the abstract specifications of\n        the language also assist the automation of proof.","bibo:AuthorList":["Boulton, Richard J."],"dc:date":"1996-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932038,"sim:weight":0.24871,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65323,"sim:weight":0.23643,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.157554,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108875,"sim:weight":0.148519,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671612,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The L4 microkernel on Alpha : Design and\n        implementation","bibo:abstract":"The purpose of a microkernel is to cover the lowest level of the\n        hardware and to provide a more general platform to operating\n        systems and applications than the hardware itself. This has made\n        microkernel development increasingly interesting. Different\n        types of microkernels have been developed, ranging from kernels\n        which merely deal with the hardware infterface (Windows NT HAL),\n        kernels especially for embedded systems (RTEMS), to kernels for\n        multimedia streams and real time support (Nemesis) and general\n        purpose kernels (L4, Mach).\n        \n        The common opinion that microkernels lead to deterioration in\n        system performance has been disproved by recent research. L4 is\n        an example of a fast and small, multi address space,\n        message-based microkernel, developed originally for Intel\n        systems only. Based on the L4 interface, which should be as\n        similar as possible on different platforms, the L4 Alpha version\n        has been developed.\n        \n        This work describes design decisions, implementation and\n        interfaces of the L4 version for 64-bit Alpha processors.","bibo:AuthorList":["Schoenberg, Sebastian"],"dc:date":"1996-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":70121,"sim:weight":0.204521,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.187826,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1651709,"sim:weight":0.169093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70321,"sim:weight":0.167808,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389844,"sim:weight":0.165595,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549536,"sim:weight":0.164629,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549564,"sim:weight":0.15747,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108083,"sim:weight":0.152797,"sim:AssociationMethod":"similarity_cosine"},{"identifier":389822,"sim:weight":0.151397,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931857,"sim:weight":0.146584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.137928,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549556,"sim:weight":0.127237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.118556,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70193,"sim:weight":0.116739,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.101081,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671613,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Theorem proving with the real numbers","bibo:abstract":"This thesis discusses the use of the real numbers in theorem\n        proving. Typically, theorem provers only support a few\n        ‘discrete’ datatypes such as the natural numbers. However the\n        availability of the real numbers opens up many interesting and\n        important application areas, such as the verification of\n        floating point hardware and hybrid systems. It also allows the\n        formalization of many more branches of classical mathematics,\n        which is particularly relevant for attempts to inject more\n        rigour into computer algebra systems.\n        \n        Our work is conducted in a version of the HOL theorem prover. We\n        describe the rigorous definitional construction of the real\n        numbers, using a new version of Cantor’s method, and the\n        formalization of a significant portion of real analysis. We also\n        describe an advanced derived decision procedure for the ‘Tarski\n        subset’ of real algebra as well as some more modest but\n        practically useful tools for automating explicit calculations\n        and routine linear arithmetic reasoning.\n        \n        Finally, we consider in more detail two interesting application\n        areas. We discuss the desirability of combining the rigour of\n        theorem provers with the power and convenience of computer\n        algebra systems, and explain a method we have used in practice\n        to achieve this. We then move on to the verification of floating\n        point hardware. After a careful discussion of possible\n        correctness specifications, we report on two case studies, one\n        involving a transcendental function.\n        \n        We aim to show that a theory of real numbers is useful in\n        practice and interesting in theory, and that the ‘LCF style’ of\n        theorem proving is well suited to the kind of work we describe.\n        We hope also to convince the reader that the kind of mathematics\n        needed for applications is well within the abilities of current\n        theorem proving technology.","bibo:AuthorList":["Harrison, John Robert"],"dc:date":"1996-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":23669,"sim:weight":0.259158,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.249602,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.211567,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.163302,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671614,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Proof style","bibo:abstract":"We are concerned with how to communicate a mathematical proof to\n        a computer theorem prover. This can be done in many ways, while\n        allowing the machine to generate a completely formal proof\n        object. The most obvious choice is the amount of guidance\n        required from the user, or from the machine perspective, the\n        degree of automation provided. But another important\n        consideration, which we consider particularly significant, is\n        the bias towards a ‘procedural’ or ‘declarative’ proof style. We\n        will explore this choice in depth, and discuss the strengths and\n        weaknesses of declarative and procedural styles for proofs in\n        pure mathematics and for verification applications. We conclude\n        with a brief summary of our own experiments in trying to combine\n        both approaches.","bibo:AuthorList":["Harrison, John"],"dc:date":"1997-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932038,"sim:weight":0.379975,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930770,"sim:weight":0.242505,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.188865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":23669,"sim:weight":0.187115,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.184155,"sim:AssociationMethod":"similarity_cosine"},{"identifier":2755110,"sim:weight":0.183187,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826876,"sim:weight":0.164769,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.141197,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671615,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A calculus for cryptographic protocols : The SPI\n        calculus","bibo:abstract":"We introduce the spi calculus, an extension of the pi calculus\n        designed for the description and analysis of cryptographic\n        protocols. We show how to use the spi calculus, particularly for\n        studying authentication protocols. The pi calculus (without\n        extension) suffices for some abstract protocols; the spi\n        calculus enables us to consider cryptographic issues in more\n        detail. We represent protocols as processes in the spi calculus\n        and state their security properties in terms of coarse-grained\n        notions of protocol equivalence.","bibo:AuthorList":["Abadi, Martín","Gordon, Andrew D."],"dc:date":"1997-01","bibo:cites":[],"bibo:citedBy":[{"rawReferenceText":"Mart´ın Abadi and Andrew Gordon. (1997). A calculus for cryptographic protocols: The spi calculus.","authors":[],"bibo:shortTitle":"A calculus for cryptographic protocols: The spi calculus.","dc:date":"1997","refDocId":4671615},{"rawReferenceText":"Mart´ın Abadi and Andrew Gordon. (1997). A calculus for cryptographic protocols: The spi calculus.","authors":[],"bibo:shortTitle":"A calculus for cryptographic protocols: The spi calculus.","dc:date":"1997","refDocId":4671615}],"similarities":[]}
{"identifier":4671616,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Simplification with renaming: a general proof technique\n        for tableau and sequent-based provers","bibo:AuthorList":["Massacci, Fabio"],"dc:date":"1997-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8932038,"sim:weight":0.198873,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932107,"sim:weight":0.179231,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932073,"sim:weight":0.12435,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671617,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Action selection methods using reinforcement\n        learning","bibo:abstract":"The Action Selection problem is the problem of run-time choice\n        between conflicting and heterogenous goals, a central problem in\n        the simulation of whole creatures (as opposed to the solution of\n        isolated uninterrupted tasks). This thesis argues that\n        Reinforcement Learning has been overlooked in the solution of\n        the Action Selection problem. Considering a decentralised model\n        of mind, with internal tension and competition between selfish\n        behaviors, this thesis introduces an algorithm called\n        “W-learning”, whereby different parts of the mind modify their\n        behavior based on whether or not they are succeeding in getting\n        the body to execute their actions. This thesis sets W-learning\n        in context among the different ways of exploiting Reinforcement\n        Learning numbers for the purposes of Action Selection. It is a\n        ‘Minimize the Worst Unhappiness’ strategy. The different methods\n        are tested and their strengths and weaknesses analysed in an\n        artificial world.","bibo:AuthorList":["Humphrys, Mark"],"dc:date":"1997-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2755110,"sim:weight":0.237321,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.21374,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26006,"sim:weight":0.212332,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932053,"sim:weight":0.208642,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87151,"sim:weight":0.197015,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671618,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Floating point verification in HOL Light: the\n        exponential function","bibo:abstract":"In that they often embody compact but mathematically\n        sophisticated algorithms, operations for computing the common\n        transcendental functions in floating point arithmetic seem good\n        targets for formal verification using a mechanical theorem\n        prover. We discuss some of the general issues that arise in\n        verifications of this class, and then present a machine-checked\n        verification of an algorithm for computing the exponential\n        function in IEEE-754 standard binary floating point arithmetic.\n        We confirm (indeed strengthen) the main result of a previously\n        published error analysis, though we uncover a minor error in the\n        hand proof and are forced to confront several subtle issues that\n        might easily be overlooked informally.\n        \n        Our main theorem connects the floating point exponential to its\n        abstract mathematical counterpart. The specification we prove is\n        that the function has the correct overflow behaviour and, in the\n        absence of overflow, the error in the result is less than 0.54\n        units in the last place (0.77 if the answer is denormalized)\n        compared against the exact mathematical exponential function.\n        The algorithm is expressed in a simple formalized programming\n        language, intended to be a subset of real programming and\n        hardware description languages. It uses underlying floating\n        point operations (addition, multiplication etc.) that are\n        assumed to conform to the IEEE-754 standard for binary floating\n        point arithmetic.\n        \n        The development described here includes, apart from the proof\n        itself, a formalization of IEEE arithmetic, a mathematical\n        semantics for the programming language in which the algorithm is\n        expressed, and the body of pure mathematics needed. All this is\n        developed logically from first principles using the HOL Light\n        prover, which guarantees strict adherence to simple rules of\n        inference while allowing the user to perform proofs using\n        higher-level derived rules. We first present the main ideas and\n        conclusions, and then collect some technical details about the\n        prover and the underlying mathematical theories in appendices.","bibo:AuthorList":["Harrison, John"],"dc:date":"1997-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":85864,"sim:weight":0.242112,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.235399,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929386,"sim:weight":0.232372,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8826866,"sim:weight":0.226466,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.206979,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.205954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.176618,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671619,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Compilation and equivalence of imperative\n        objects","bibo:abstract":"We adopt the untyped imperative object calculus of Abadi and\n        Cardelli as a minimal setting in which to study problems of\n        compilation and program equivalence that arise when compiling\n        object-oriented languages. We present both a big-step and a\n        small-step substitution-based operational semantics for the\n        calculus. Our first two results are theorems asserting the\n        equivalence of our substitution-based semantics with a\n        closure-based semantics like that given by Abadi and Cardelli.\n        Our third result is a direct proof of the correctness of\n        compilation to a stack-based abstract machine via a small-step\n        decompilation algorithm. Our fourth result is that contextual\n        equivalence of objects coincides with a form of Mason and\n        Talcott’s CIU equivalence; the latter provides a tractable means\n        of establishing operational equivalences. Finally, we prove\n        correct an algorithm, used in our prototype compiler, for\n        statically resolving method offsets. This is the first study of\n        correctness of an object-oriented abstract machine, and of\n        operational equivalence for the imperative object calculus.","bibo:AuthorList":["Gordon, Andrew D.","Hankin, Paul D.","Lassen, Søren B."],"dc:date":"1997-06","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1513401,"sim:weight":0.183178,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999162,"sim:weight":0.17678,"sim:AssociationMethod":"similarity_cosine"},{"identifier":65305,"sim:weight":0.173462,"sim:AssociationMethod":"similarity_cosine"},{"identifier":87405,"sim:weight":0.164183,"sim:AssociationMethod":"similarity_cosine"},{"identifier":10494,"sim:weight":0.16123,"sim:AssociationMethod":"similarity_cosine"},{"identifier":85864,"sim:weight":0.148135,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1447999,"sim:weight":0.143473,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.131286,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.105643,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671620,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Global/local subtyping for a distributed\n        π-calculus","bibo:AuthorList":["Sewell, Peter"],"dc:date":"1997-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":65305,"sim:weight":0.0802621,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671621,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A combination of nonstandard analysis and geometry\n        theorem proving, with application to Newton’s\n        Principia","bibo:abstract":"The theorem prover Isabelle is used to formalise and reproduce\n        some of the styles of reasoning used by Newton in his Principia.\n        The Principia’s reasoning is resolutely geometric in nature but\n        contains “infinitesimal” elements and the presence of motion\n        that take it beyond the traditional boundaries of Euclidean\n        Geometry. These present difficulties that prevent Newton’s\n        proofs from being mechanised using only the existing geometry\n        theorem proving (GTP) techniques.\n        \n        Using concepts from Robinson’s Nonstandard Analysis (NSA) and a\n        powerful geometric theory, we introduce the concept of an\n        infinitesimal geometry in which quantities can be infinitely\n        small or infinitesimal. We reveal and prove new properties of\n        this geometry that only hold because infinitesimal elements are\n        allowed and use them to prove lemmas and theorems from the\n        Principia.","bibo:AuthorList":["Fleuriot, Jacques","Paulson, Lawrence C."],"dc:date":"1998-01","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":32759,"sim:weight":0.335954,"sim:AssociationMethod":"similarity_cosine"},{"identifier":332874,"sim:weight":0.232012,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8999831,"sim:weight":0.222196,"sim:AssociationMethod":"similarity_cosine"},{"identifier":29835,"sim:weight":0.190249,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8929386,"sim:weight":0.159677,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86312,"sim:weight":0.151454,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932038,"sim:weight":0.128253,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931886,"sim:weight":0.0935275,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671622,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"From rewrite rules to bisimulation\n        congruences","bibo:AuthorList":["Sewell, Peter"],"dc:date":"1998-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1512635,"sim:weight":0.220621,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8932226,"sim:weight":0.163093,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1511422,"sim:weight":0.160983,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671623,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"A probabilistic model of information and retrieval:\n        development and status","bibo:abstract":"The paper combines a comprehensive account of the probabilistic\n        model of retrieval with new systematic experiments on TREC\n        Programme material. It presents the model from its foundations\n        through its logical development to cover more aspects of\n        retrieval data and a wider range of system functions. Each step\n        in the argument is matched by comparative retrieval tests, to\n        provide a single coherent account of a major line of research.\n        The experiments demonstrate, for a large test collection, that\n        the probabilistic model is effective and robust, and that it\n        responds appropriately, with major improvements in performance,\n        to key features of retrieval situations.","bibo:AuthorList":["Spärck Jones, K.","Walker, S.","Robertson, S.E."],"dc:date":"1998-08","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1147630,"sim:weight":0.312074,"sim:AssociationMethod":"similarity_cosine"},{"identifier":61040,"sim:weight":0.161437,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671624,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"An open parallel architecture for data-intensive\n        applications","bibo:abstract":"Data-intensive applications consist of both declarative\n        data-processing parts and imperative computational parts. For\n        applications such as climate modelling, scale hits both the\n        computational aspects which are typically handled in a\n        procedural programming language, and the data-processing aspects\n        which are handled in a database query language. Although\n        parallelism has been successfully exploited in the\n        data-processing parts by parallel evaluation of database queries\n        associated with the application, current database query\n        languages are poor at expressing the computational aspects,\n        which are also subject to scale.\n        \n        This thesis proposes an open architecture that delivers\n        parallelism shared between the database, system and application,\n        thus enabling the integration of the conventionally separated\n        query and non-query components of a data-intensive application.\n        The architecture is data-model independent and can be used in a\n        variety of different application areas including\n        decision-support applications, which are query based, and\n        complex applications, which comprise procedural language\n        statements with embedded queries. The architecture encompasses a\n        unified model of parallelism and the realisation of this model\n        in the form of a language within which it is possible to\n        describe both the query and non-query components of\n        data-intensive applications. The language enables the\n        construction of parallel applications by the hierarchical\n        composition of platform-independent parallel forms, each of\n        which implements a form of task or data parallelism. These forms\n        may be used to determine both query and non-query actions.\n        \n        Queries are expressed in a declarative language based on “monoid\n        comprehensions”. The approach of using monoids to model data\n        types and monoid homomorphisms to iterate over collection types\n        enables mathematically provable compile-time optimisations\n        whilst also facilitating multiple collection types and data type\n        extensibility. Monoid comprehension programs are automatically\n        transformed into parallel programs composed of applications of\n        the parallel forms, one of which is the “monoid homomorphism”.\n        This process involves identifying the parts of a query where\n        task and data parallelism are available and mapping that\n        parallelism onto the most suitable form. Data parallelism in\n        queries is mapped onto a form that implements combining tree\n        parallelism for query evaluation and dividing tree parallelism\n        to realise data partitioning. Task parallelism is mapped onto\n        two separate forms that implement pipeline and independent\n        parallelism. This translation process is applied to all\n        comprehension queries including those in complex applications.\n        The result is a skeleton program in which both the query and\n        non-query parts are expressed within a single language.\n        Expressions in this language are amenable to the application of\n        optimising skeleton rewrite rules.\n        \n        A complete prototype of the decision-support architecture has\n        been constructed on a 128-cell MIMD parallel computer. A\n        demonstration of the utility of the query framework is performed\n        by modelling some of OQL and a substantial subset of SQL. The\n        system is evaluated for query speedup with a number of hardware\n        configurations using a large music catalogue database. The\n        results obtained show that the implementation delivers the\n        performance gains expected while offering a convenient\n        definition of the parallel environment.","bibo:AuthorList":["Afshar, Mohamad"],"dc:date":"1999-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":86045,"sim:weight":0.360924,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1651709,"sim:weight":0.263596,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84956,"sim:weight":0.254865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.220076,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57140,"sim:weight":0.202054,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931240,"sim:weight":0.194193,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.19004,"sim:AssociationMethod":"similarity_cosine"},{"identifier":22849,"sim:weight":0.1867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931573,"sim:weight":0.1867,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8930973,"sim:weight":0.175277,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671625,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Location-independent communication for mobile agents: a\n        two-level architecture","bibo:AuthorList":["Sewell, Peter","Wojciechowski, Paweł T.","Pierce, Benjamin C."],"dc:date":"1999-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":5589375,"sim:weight":0.396523,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1549562,"sim:weight":0.215696,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394077,"sim:weight":0.202098,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671626,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Secure composition of insecure components","bibo:AuthorList":["Sewell, Peter","Vitek, Jan"],"dc:date":"1999-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671627,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Secure composition of untrusted code: wrappers and\n        causality types","bibo:AuthorList":["Sewell, Peter","Vitek, Jan"],"dc:date":"1999-11","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9425258,"sim:weight":0.38758,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671628,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Contexts and embeddings for closed shallow action\n        graphs","bibo:AuthorList":["Cattani, Gian Luca","Leifer, James J.","Milner, Robin"],"dc:date":"2000-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671629,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Word sense selection in texts: an integrated\n        model","bibo:abstract":"Early systems for word sense disambiguation (WSD) often depended\n        on individual tailor-made lexical resources, hand-coded with as\n        much lexical information as needed, but of severely limited\n        vocabulary size. Recent studies tend to extract lexical\n        information from a variety of existing resources (e.g.\n        machine-readable dictionaries, corpora) for broad coverage.\n        However, this raises the issue of how to combine the information\n        from different resources.\n        \n        Thus while different types of resource could make different\n        contribution to WSD, studies to date have not shown what\n        contribution they make, how they should be combined, and whether\n        they are equally relevant to all words to be disambiguated. This\n        thesis proposes an Integrated Model as a framework to study the\n        inter-relatedness of three major parameters in WSD: Lexical\n        Resource, Contextual Information, and Nature of Target Words. We\n        argue that it is their interaction which shapes the\n        effectiveness of any WSD system.\n        \n        A generalised, structurally-based sense-mapping algorithm was\n        designed to combine various types of lexical resource. This\n        enables information from these resources to be used\n        simultaneously and compatibly, while respecting their\n        distinctive structures. In studying the effect of context on\n        WSD, different semantic relations available from the combined\n        resources were used, and a recursive filtering algorithm was\n        designed to overcome combinatorial explosion. We then\n        investigated, from two directions, how the target words\n        themselves could affect the usefulness of different types of\n        knowledge. In particular, we modelled WSD with the cloze test\n        format, i.e. as texts with blanks and all senses for one\n        specific word as alternative choices for filling the blank.\n        \n        A full-scale combination of WordNet and Roget’s Thesaurus was\n        done, linking more than 30,000 senses. Using these two resources\n        in combination, a range of disambiguation tests was done on more\n        than 60,000 noun instances from corpus texts of different types,\n        and 60 blanks from real cloze texts. Results show that combining\n        resources is useful for enriching lexical information, and hence\n        making WSD more effective though not completely. Also, different\n        target words make different demand on contextual information,\n        and this interaction is closely related to text types. Future\n        work is suggested for expanding the analysis on target nature\n        and making the combination of disambiguation evidence sensitive\n        to the requirements of the word being disambiguated.","bibo:AuthorList":["Kwong, Oi Yee"],"dc:date":"2000-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671630,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Shallow linear action graphs and their\n        embeddings","bibo:AuthorList":["Leifer, James","Milner, Robin"],"dc:date":"2000-10","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":2806539,"sim:weight":0.272809,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671631,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Generic summaries for indexing in information retrieval\n        – Detailed test results","bibo:abstract":"This paper examines the use of generic summaries for indexing in\n        information retrieval. Our main observations are that:\n        \n        – With or without pseudo-relevance feedback, a summary index may\n        be as effective as the corresponding fulltext index for\n        precision-oriented search of highly relevant documents. But a\n        reasonably sophisticated summarizer, using a compression ratio\n        of 10–30%, is desirable for this purpose.\n        \n        – In pseudo-relevance feedback, using a summary index at initial\n        search and a fulltext index at final search is possibly\n        effective for precision-oriented search, regardless of relevance\n        levels. This strategy is significantly more effective than the\n        one using the summary index only and probably more effective\n        than using summaries as mere term selection filters. For this\n        strategy, the summary quality is probably not a critical factor,\n        and a compression ratio of 5–10% appears best.","bibo:AuthorList":["Sakai, Tetsuya","Spärck Jones, Karen"],"dc:date":"2001-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":1394184,"sim:weight":0.278237,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394033,"sim:weight":0.235787,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1394182,"sim:weight":0.211913,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86340,"sim:weight":0.20124,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997910,"sim:weight":0.179457,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671632,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The UDP calculus: rigorous semantics for real\n        networking","bibo:AuthorList":["Serjantov, Andrei","Sewell, Peter","Wansbrough, Keith"],"dc:date":"2001-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671633,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Dynamic provisioning of resource-assured and\n        programmable virtual private networks","bibo:abstract":"Virtual Private Networks (VPNs) provide dedicated connectivity\n        to a closed group of users on a shared network. VPNs have\n        traditionally been deployed for reasons of economy of scale, but\n        have either been statically defined, requiring manual\n        configuration, or else unable to offer any quality of service\n        (QoS) guarantees.\n        \n        This dissertation describes VServ, a service offering dynamic\n        and resource-assured VPNs that can be acquired and modified on\n        demand. In VServ, a VPN is both a subset of physical resources,\n        such as bandwidth and label space, together with the means to\n        perform fine-grained management of those resources. This network\n        programmability, combined with QoS guarantees, enables the\n        multiservice network – a single universal network that can\n        support all types of service and thus be efficient,\n        cost-effective and flexible.\n        \n        VServ is deployed over a network control framework known as\n        Tempest. The Tempest explicitly distinguishes between inter- and\n        intra-VPN resource management mechanisms. This makes the dynamic\n        resource reallocation capabilities of VServ viable, whilst\n        handling highly dynamic VPNs or a large number of VPNs.\n        Extensions to the original implementation of the Tempest to\n        support dynamically reconfigurable QoS are detailed.\n        \n        A key part of a dynamic and responsive VPN service is fully\n        automated VPN provisioning. A notation for VPN specification is\n        described, together with mechanisms for incorporating policies\n        of the service provider and the current resource availability in\n        the network into the design process. The search for a suitable\n        VPN topology can be expressed as a optimisation problem that is\n        not computationally tractable except for very small networks.\n        This dissertation describes how the search is made practical by\n        tailoring it according to the characteristics of the desired\n        VPN.\n        \n        Availability of VServ is addressed with a proposal for\n        distributed VPN creation. A resource revocation protocol\n        exploits the dynamic resource management capabilities of VServ\n        to allow adaptation in the control plane on a per-VPN basis.\n        Managed resource revocation supports highly flexible resource\n        allocation and reallocation policies, allowing VServ to\n        efficiently provision for short-lived or highly dynamic VPNs.","bibo:AuthorList":["Isaacs, Rebecca"],"dc:date":"2001-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671634,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"The Cambridge Multimedia Document Retrieval Project:\n        summary of experiments","bibo:abstract":"This report summarises the experimental work done under the\n        Multimedia Document Retrieval (MDR) project at Cambridge from\n        1997-2000, with selected illustrations. The focus is primarily\n        on retrieval studies, and on speech tests directly related to\n        retrieval, not on speech recognition itself. The report draws on\n        the many and varied tests done during the project, but also\n        presents a new series of results designed to compare strategies\n        across as many different data sets as possible by using\n        consistent system parameter settings.\n        \n        The project tests demonstrate that retrieval from files of audio\n        news material transcribed using a state of the art speech\n        recognition system can match the reference level defined by\n        human transcriptions; and that expansion techniques, especially\n        when applied to queries, can be very effective means for\n        improving basic search performance.","bibo:AuthorList":["Spärck Jones, Karen","Jourlin, P.","Johnson, S.E.","Woodland, P.C."],"dc:date":"2001-07","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":22084,"sim:weight":0.35912,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8998617,"sim:weight":0.262689,"sim:AssociationMethod":"similarity_cosine"},{"identifier":19749,"sim:weight":0.259775,"sim:AssociationMethod":"similarity_cosine"},{"identifier":84788,"sim:weight":0.246946,"sim:AssociationMethod":"similarity_cosine"},{"identifier":86159,"sim:weight":0.223052,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8997910,"sim:weight":0.207274,"sim:AssociationMethod":"similarity_cosine"},{"identifier":112395,"sim:weight":0.181472,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26271,"sim:weight":0.176922,"sim:AssociationMethod":"similarity_cosine"},{"identifier":108579,"sim:weight":0.16343,"sim:AssociationMethod":"similarity_cosine"},{"identifier":57517,"sim:weight":0.137007,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":4671635,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Operational congruences for reactive systems","bibo:AuthorList":["Leifer, James"],"dc:date":"2001-09","bibo:cites":[],"bibo:citedBy":[],"similarities":[]}
{"identifier":4671639,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"New approaches to operating system security\n        extensibility","bibo:abstract":"This dissertation proposes new approaches to commodity computer\n        operating system (OS) access control extensibility that address\n        historic problems with concurrency and technology transfer.\n        Access control extensibility addresses a lack of consensus on\n        operating system policy model at a time when security\n        requirements are in flux: OS vendors, anti-virus companies,\n        firewall manufacturers, smart phone developers, and application\n        writers require new tools to express policies tailored to their\n        needs. By proposing principled approaches to access control\n        extensibility, this work allows OS security to be “designed in”\n        yet remain flexible in the face of diverse and changing\n        requirements.\n        \n        I begin by analysing system call interposition, a popular\n        extension technology used in security research and products, and\n        reveal fundamental and readily exploited concurrency\n        vulnerabilities. Motivated by these failures, I propose two\n        security extension models: the TrustedBSD Mandatory Access\n        Control (MAC) Framework, a flexible kernel access control\n        extension framework for the FreeBSD kernel, and Capsicum,\n        practical capabilities for UNIX.\n        \n        The MAC Framework, a research project I began before starting my\n        PhD, allows policy modules to dynamically extend the kernel\n        access control policy. The framework allows policies to\n        integrate tightly with kernel synchronisation, avoiding race\n        conditions inherent to system call interposition, as well as\n        offering reduced development and technology transfer costs for\n        new security policies. Over two chapters, I explore the\n        framework itself, and its transfer to and use in several\n        products: the open source FreeBSD operating system, nCircle’s\n        enforcement appliances, and Apple\u0027s Mac OS X and iOS operating\n        systems.\n        \n        Capsicum is a new application-centric capability security model\n        extending POSIX. Capsicum targets application writers rather\n        than system designers, reflecting a trend towards security-aware\n        applications such as Google’s Chromium web browser, that map\n        distributed security policies into often inadequate local\n        primitives. I compare Capsicum with other sandboxing techniques,\n        demonstrating improved performance, programmability, and\n        security.\n        \n        This dissertation makes original contributions to challenging\n        research problems in security and operating system design.\n        Portions of this research have already had a significant impact\n        on industry practice.","bibo:AuthorList":["Watson, Robert N. M."],"dc:date":"2012-04","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":8018,"sim:weight":0.204853,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70121,"sim:weight":0.189209,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70186,"sim:weight":0.168865,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.158088,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59232,"sim:weight":0.151971,"sim:AssociationMethod":"similarity_cosine"},{"identifier":26009,"sim:weight":0.146584,"sim:AssociationMethod":"similarity_cosine"},{"identifier":103798,"sim:weight":0.138485,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.1218,"sim:AssociationMethod":"similarity_cosine"},{"identifier":59097,"sim:weight":0.117706,"sim:AssociationMethod":"similarity_cosine"},{"identifier":91436,"sim:weight":0.112402,"sim:AssociationMethod":"similarity_cosine"}]}
{"identifier":6115250,"ep:Repository":22,"dc:type":["Text"],"bibo:shortTitle":"Guessing human-chosen secrets","bibo:abstract":"Authenticating humans to computers remains a notable weak point\n        in computer security despite decades of effort. Although the\n        security research community has explored dozens of proposals for\n        replacing or strengthening passwords, they appear likely to\n        remain entrenched as the standard mechanism of human-computer\n        authentication on the Internet for years to come. Even in the\n        optimistic scenario of eliminating passwords from most of\n        today\u0027s authentication protocols using trusted hardware devices\n        or trusted servers to perform federated authentication,\n        passwords will persist as a means of “last-mile” authentication\n        between humans and these trusted single sign-on deputies.\n        \n        This dissertation studies the difficulty of guessing\n        human-chosen secrets, introducing a sound mathematical framework\n        modeling human choice as a skewed probability distribution. We\n        introduce a new metric, alpha-guesswork, which can accurately\n        model the resistance of a distribution against all possible\n        guessing attacks. We also study the statistical challenges of\n        estimating this metric using empirical data sets which can be\n        modeled as a large random sample from the underlying probability\n        distribution.\n        \n        This framework is then used to evaluate several representative\n        data sets from the most important categories of human-chosen\n        secrets to provide reliable estimates of security against\n        guessing attacks. This includes collecting the largest-ever\n        corpus of user-chosen passwords, with nearly 70 million, the\n        largest list of human names ever assembled for research, the\n        largest data sets of real answers to personal knowledge\n        questions and the first data published about human choice of\n        banking PINs. This data provides reliable numbers for designing\n        security systems and highlights universal limitations of\n        human-chosen secrets.","bibo:AuthorList":["Bonneau, Joseph"],"dc:date":"2012-05","bibo:cites":[],"bibo:citedBy":[],"similarities":[{"identifier":9425341,"sim:weight":0.281839,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929818,"sim:weight":0.188051,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8018,"sim:weight":0.183718,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1512679,"sim:weight":0.166805,"sim:AssociationMethod":"similarity_cosine"},{"identifier":8931624,"sim:weight":0.163539,"sim:AssociationMethod":"similarity_cosine"},{"identifier":9425253,"sim:weight":0.16118,"sim:AssociationMethod":"similarity_cosine"},{"identifier":1929812,"sim:weight":0.150916,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70126,"sim:weight":0.134445,"sim:AssociationMethod":"similarity_cosine"},{"identifier":70175,"sim:weight":0.0992186,"sim:AssociationMethod":"similarity_cosine"}]}
